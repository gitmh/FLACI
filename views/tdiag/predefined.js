    var predefinedCompilers = [];

    predefinedCompilers.push(
      {
        'ID':"vcc",
        'preset':true,
        'Name':'TDL-Compiler',
        'InputLanguage':'TDL',
        'OutputLanguage':'JS',
        'LastInput':'',
        'Type':'compiler',
        'JSON':JSON.stringify({"lex":{"rules":[{"expression":"[\\S\\s]*","name":"TDL"}]},"bnf":[{"name":"Compiler","rhs":[[[{"name":"TDL","type":"t"}],"// Copy from VCC2JISON from atocc.js in jison folder\nfunction VCC2JISON (jsonString){ \n\t\tvar j = JSON.parse(jsonString);\n        // transform lex objects to arrays\n        if(j.lex){\n          j.lex.tokennames = [];\n          for(var i = 0; i < j.lex.rules.length; i++){\n            j.lex.tokennames.push(j.lex.rules[i].name);\n            j.lex.rules[i] = [j.lex.rules[i].expression, j.lex.rules[i].name];\n          }\n        }\n        // special case ignore\n        for(var i = 0; i < j.lex.rules.length; i++){\n          j.lex.rules[i][0] = \"(\"+j.lex.rules[i][0]+\")\"; // auto bracket for ^(...)\n          if(j.lex.rules[i][1] == \"IGNORE\") \n             j.lex.rules[i][1] = \"\"; else\n             j.lex.rules[i][1] = \"return '\"+j.lex.rules[i][1].replace(/'/g,\"\\\\'\")+\"';\"\n        }\n        // special case end of file\n        j.lex.rules.push([\"$\",\"return 'EOF';\"]);\n          \n        j.actionInclude = 'if(!this.$) this.$ = \"\";'+\"\\n\";\n        // special bnf needs to be a single object no array\n        var bnf = {};\n        // find EOF use\n        var EOFused = false; \n        for(var i = 0; i < j.bnf.length; i++){\n          for(var z = 0; z < j.bnf[i].rhs.length; z++){\n            for(var t = 0; t < j.bnf[i].rhs[z][0].length; t++)\n              if(j.bnf[i].rhs[z][0][t].name == \"EOF\" && j.bnf[i].rhs[z][0][t].type == \"t\") EOFused = true;\n          }  \n        }\n\n        if(!EOFused && j.bnf.length > 0){ //  && j.bnf[0].rhs.length > 1\n          // add extra start rule for EOF\n          j.bnf.unshift({name:\"___#START#___\",rhs:[[[{name:j.bnf[0].name, type:\"nt\"}],\"return $1;\"]]});\n        }\n\n        for(var i = 0; i < j.bnf.length; i++){\n          // special case add EOF to all right hand sides of first none-terminal\n          if(!EOFused && i == 0) \n            for(var z = 0; z < j.bnf[i].rhs.length; z++) j.bnf[i].rhs[z][0].push({name:\"EOF\",type:\"t\"});\n\n          // combine rhs to strings\n          for(var z = 0; z < j.bnf[i].rhs.length; z++){\n            var s = \"\";\n            var defaultCode = \"$$ = \";\n            if(j.bnf[i].rhs[z][0].length == 0) defaultCode += \"''\";\n            for(var t = 0; t < j.bnf[i].rhs[z][0].length; t++){\n              s += (s != \"\" ? \" \":\"\") + j.bnf[i].rhs[z][0][t].name;\n              defaultCode += \"$\"+(t+1)+(t < j.bnf[i].rhs[z][0].length-1 ? ' + ':'');\n            } \n            defaultCode += \";\";\n            if($.trim(j.bnf[i].rhs[z][1]) == \"\") j.bnf[i].rhs[z][1] = defaultCode;\n            j.bnf[i].rhs[z][0] = s; // override with string\n\n          }\n          bnf[j.bnf[i].name] = j.bnf[i].rhs;\n        }\n        j.bnf = bnf;\n  return j;\n}\nvar j = VCC2JISON($1);\ntry{\n  var parser = Jison.Generator(j, {type: \"lalr\"}); // noDefaultResolve:true\n  var p = parser.generate({moduleType:\"js\", globalCode:j.globalCode}); // real parser JS file, we can store this in upload/vcc/id.js\n  return p;\n}catch(e){ return \"ERROR\"+e; }"]]}],"globalCode":"// use source from jison/atocc.js (from VCC2JISON function)\n// copy the source of this compiler (ID=1) to predefined.js for proper offline compile"})
      }
    );

    predefinedCompilers.push(
      {
        'ID':"ps2png",
        'preset':true,
        'Name':'PostScript to PNG64 Compiler',
        'InputLanguage':'PS',
        'OutputLanguage':'PNG',
        'LastInput':'',
        'Type':'compiler',
        'JSON':JSON.stringify({"lex":{"rules":[{"expression":"[\\s\\S]+","name":"Input"},{"name":"IGNORE","expression":""}]},"bnf":[{"name":"Start","rhs":[[[{"name":"Input","type":"t"}],"\n\nvar c = document.createElement(\"canvas\");\nc.id = \"temp_gc\";\nc.width = 300;\nc.height = 300;\n$(\"body\").append(c);\n\nvar wps = new Wps();\nwps.parse(mainLib, \"(temp_gc) .setGc\", $1.replace(/\\u00A0/g,\" \"));\n\n$(\"#temp_gc\").remove(); // delete canvas\n\nvar outimg = c.toDataURL();var datenTeil=outimg.split(',')[1];return atob(datenTeil);  "]]}],"globalCode":"// (c) 2009 Tomas Hlavaty\n\nfunction isQuoted(V) {\n  return V.q;\n}\n\nfunction quote(V) {\n  V.q = true;\n  return V;\n}\n\nfunction unquote(V) {\n  delete V.q;\n  return V;\n}\n\nfunction Symbol(N) {\n  this.nm = N;\n  return this;\n}\n\nfunction isSymbol(V) {\n  return V &&  V.constructor === Symbol;\n}\n\nfunction symbolName(V) {\n  return V.nm;\n}\n\nfunction isArray(V) {\n  return V &&  V.constructor === Array;\n}\n\nfunction inDs(Ds, K) {\n  for(var I = Ds.length - 1; 0 <= I; --I) {\n\tif(\"undefined\" != typeof Ds[I][K])\n\t  return Ds[I];\n  }\n  return false;\n}\n\nfunction member(C, L) {\n  return 0 <= L.indexOf(C);\n}\n\nfunction PsParser() {\n  var Self = this;\n  function init(L) {\n    Self.L = L;\n    Self.N = L.length;\n    Self.I = 0;\n    Self.D = 0;\n  }\n  function peek() {return Self.I < Self.N && Self.L[Self.I];}\n  function xchar() {return Self.I < Self.N && Self.L[Self.I++];}\n  function skip() { // TODO white space ffeed + null???\n    while(Self.I < Self.N && member(Self.L[Self.I], \" \\t\\n\"))\n      Self.I++;\n  }\n  function comment() {\n    while(\"%\" == peek()) {\n      while(peek() && \"\\n\" != peek())\n        xchar();\n      skip();\n    }\n  }\n  function text() {\n    // TODO hex text in <>\n    // TODO ASCII base-85 <~ and ~>\n    xchar();\n    var L = [];\n    var N = 1;\n    while(0 < N && peek()) {\n      var C = xchar();\n      switch(C) {\n        case \"(\":\n          N++;\n          break;\n        case \")\":\n          N--;\n          if(N <= 0) C = false;\n          break;\n        case \"\\\\\":\n          C = xchar();\n          switch(C) {\n            case \"(\": break;\n            case \")\": break;\n            case \"\\\\\": break;\n            case \"n\": C = \"\\n\"; break;\n            case \"r\": C = \"\\r\"; break;\n            case \"t\": C = \"\\t\"; break;\n            // TODO \\n (ignore \\n) \\b \\f \\ddd octal\n            default:\n              C = false;\n          }\n          break;\n      }\n      if(C !== false) L.push(C);\n    }\n    return L.join(\"\");\n  }\n  function symbol() {\n    // TODO 1e10 1E-5 real numbers\n    // TODO radix numbers 8#1777 16#FFFE 2#1000\n    var C = xchar();\n    if(member(C, \"()<>/% \\t\\n\")) throw \"Symbol expected, got \" + C;\n    var N = member(C, \"+-0123456789.\");\n    var F = \".\" == C;\n    var L = [C];\n    while(peek() && !member(peek(), \"()<>[]{}/% \\t\\n\")) {\n      C = xchar();\n      L.push(C);\n      if(N && !member(C, \"0123456789\")) {\n        if(!F && \".\" == C) F = true;\n        else N = false;\n      }\n    }\n    L = L.join(\"\");\n    if(1 == L.length && member(L, \"+-.\")) N = false;\n    return N ? (F ? parseFloat(L) : parseInt(L, 10)) : new Symbol(L);\n  }\n  function token() {\n    skip();\n    switch(peek()) { // TODO read dict in <> <~~> <<>> immediate literal //\n      case false: return undefined;\n      case \"%\": return comment();\n      case \"[\": return new Symbol(xchar());\n      case \"]\": return new Symbol(xchar());\n      case \"{\": Self.D++; return new Symbol(xchar());\n      case \"}\": Self.D--; return new Symbol(xchar());\n      case \"/\": xchar(); var X = symbol(); return quote(X);\n      case \"(\": return text();\n      case \"<\":\n        xchar();\n        if(\"<\" != peek()) throw \"Encoded strings not implemented yet\";\n        xchar();\n        return new Symbol(\"<<\");\n      case \">\":\n        xchar();\n        if(\">\" != peek()) throw \"Unexpected >\";\n        xchar();\n        return new Symbol(\">>\");\n      default: return symbol();\n    }\n  }\n  PsParser.prototype.init = init;\n  PsParser.prototype.peek = peek;\n  PsParser.prototype.token = token;\n  return this;\n}\n\nfunction Ps0(Os, Ds, Es) {\n  function run(X, Z) {\n    if(isSymbol(X) && !isQuoted(X)) { // executable name\n      var K = symbolName(X);\n      var D = inDs(Ds, K);\n      if(!D)\n        throw \"bind error '\" + K + \"'\";\n      Es.push([false, D[K]]);\n    } else if(Z && isArray(X) && isQuoted(X)) { // proc from Es\n      if(0 < X.length) {\n        var F = X[0];\n        var R = quote(X.slice(1));\n        if(0 < R.length) Es.push([false, R]);\n        run(F, false);\n      }\n    } else if(\"function\" == typeof X) X(); // operator\n    else Os.push(X);\n  }\n  function exec() {\n    var X = Os.pop();\n    run(X, false);\n  }\n  function step() {\n    var C = Es.pop();\n    var L = C.shift(); // TODO use for 'exit'\n    var X = C.pop();\n    for(var I = 0; I < C.length; I++)\n      Os.push(C[I]);\n    run(X, true);\n  }\n  var PsP = new PsParser;\n  function parse(L) {\n    PsP.init(L);\n    while(PsP.peek()) {\n      var T = PsP.token();\n      if(T || T === 0) {\n        Os.push(T);\n        if(PsP.D <= 0 || isSymbol(T) &&\n           (member(symbolName(T), \"[]{}\") ||\n            \"<<\" == symbolName(T) || \">>\" == symbolName(T))) {\n          exec();\n          while(0 < Es.length)\n            step();\n        }\n      }\n    }\n    return Os;\n  }\n  Ps0.prototype.run = run;\n  Ps0.prototype.exec = exec;\n  Ps0.prototype.step = step;\n  Ps0.prototype.parse = parse;\n  return this;\n}\n\nfunction Wps() {\n  var Os = [];\n  var Sd = {};\n  var Ds = [Sd];\n  var Es = [];\n  var Ps = new Ps0(Os, Ds, Es);\n\n  // trivial\n  Sd[\"true\"] = function() {Os.push(true);};\n  Sd[\"false\"] = function() {Os.push(false);};\n  Sd[\"null\"] = function() {Os.push(null);};\n  // math\n  Sd[\"sub\"] = function() {var X = Os.pop(); Os.push(Os.pop() - X);};\n  Sd[\"mul\"] = function() {Os.push(Os.pop() * Os.pop());};\n  Sd[\"div\"] = function() {var X = Os.pop(); Os.push(Os.pop() / X);};\n  Sd[\"mod\"] = function() {var X = Os.pop(); Os.push(Os.pop() % X);};\n  // stack\n  var M = {};\n  Sd[\"mark\"] = function() {Os.push(M);};\n  Sd[\"counttomark\"] = function() {\n    var N = 0;\n    for(var I = Os.length - 1; 0 <= I; I--)\n      if(M === Os[I]) return Os.push(N);\n      else N++;\n    throw \"Mark not found\";\n  };\n  Sd[\"<<\"] = Sd[\"mark\"]; // TODO doc\n  Sd[\">>\"] = function() { // TODO doc\n    var D = {};\n    while(0 < Os.length) {\n      var V = Os.pop();\n      if(M === V) return Os.push(D);\n      D[Os.pop()] = V;\n    }\n    throw \"Mark not found\";\n  };\n  Sd[\"exch\"] = function() {\n    var Y = Os.pop();\n    var X = Os.pop();\n    Os.push(Y);\n    Os.push(X);\n  };\n  Sd[\"clear\"] = function() {Os.length = 0;};\n  Sd[\"pop\"] = function() {Os.pop();};\n  Sd[\"index\"] = function() {\n    Os.push(Os[Os.length - 2 - Os.pop()]);\n  };\n  Sd[\"roll\"] = function() { // TODO in ps\n    var J = Os.pop();\n    var N = Os.pop();\n    var X = [];\n    var Y = [];\n    for(var I = 0; I < N; I++)\n      if(I < J) X.unshift(Os.pop());\n      else Y.unshift(Os.pop());\n    for(I = 0; I < J; I++) Os.push(X.shift());\n    for(I = 0; I < N - J; I++) Os.push(Y.shift());\n  };\n  Sd[\"copy\"] = function() {\n\tvar N = Os.pop();\n\tif(\"object\" == typeof N) {\n\t  var X = Os.pop();\n\t  for(var I in X)\n        N[I] = X[I];\n      Os.push(N);\n    } else {\n      var X = Os.length - N;\n      for(var I = 0; I < N; I++)\n        Os.push(Os[X + I]);\n    }\n  };\n  // array\n  Sd[\"length\"] = function() {Os.push(Os.pop().length);};\n  Sd[\"astore\"] = function() {\n    var A = Os.pop();\n    var N = A.length;\n    for(var I = N - 1; 0 <= I; I--)\n      A[I] = Os.pop();\n    Os.push(A);\n  };\n  Sd[\"array\"] = function() {Os.push(new Array(Os.pop()));};\n  // conditionals\n  Sd[\"eq\"] = function() {var Y = Os.pop(); var X = Os.pop(); Os.push(X == Y);};\n  Sd[\"lt\"] = function() {var Y = Os.pop(); var X = Os.pop(); Os.push(X < Y);};\n  // control\n  Sd[\"ifelse\"] = function() {\n    var N = Os.pop();\n    var P = Os.pop();\n    var C = Os.pop();\n    Es.push([false, C === true ? P : N]);\n  };\n  Sd[\"repeat\"] = function Xrepeat() { // TODO in ps\n    var B = Os.pop();\n    var N = Os.pop();\n    if(1 < N) Es.push([true, N - 1, B, Xrepeat]);\n    if(0 < N) Es.push([false, B]);\n  };\n  Sd[\"for\"] = function Xfor() { // TODO in ps\n    var B = Os.pop();\n    var L = Os.pop();\n    var K = Os.pop();\n    var J = Os.pop();\n    if(K < 0) {\n      if(L <= J + K) Es.push([true, J + K, K, L, B, Xfor]);\n      if(L <= J) Es.push([false, J, B]);\n    } else {\n      if(J + K <= L) Es.push([true, J + K, K, L, B, Xfor]);\n      if(J <= L) Es.push([false, J, B]);\n    }\n  };\n  Sd[\"exec\"] = function() {Es.push([false, Os.pop()]);};\n  Sd[\"cvx\"] = function() {\n    var X = Os.pop();\n    if(isSymbol(X) && isQuoted(X)) Os.push(unquote(X)); // executable name\n    else if(isArray(X) && !isQuoted(X)) Os.push(quote(X)); // proc\n    // TODO string -> parse\n    else Os.push(X);\n  };\n  // dictionary\n  Sd[\"dict\"] = function() {Os.pop(); Os.push({});};\n  Sd[\"get\"] = function() {\n    var K = Os.pop();\n    var D = Os.pop();\n    // TODO other datatypes\n    if(isSymbol(K)) Os.push(D[symbolName(K)]);\n    else Os.push(D[K]);\n  };\n  Sd[\"put\"] = function() {\n    var V = Os.pop();\n    var K = Os.pop();\n    var D = Os.pop();\n    // TODO other datatypes\n    if(isSymbol(K)) D[symbolName(K)] = V;\n    else D[K] = V;\n  };\n  Sd[\"begin\"] = function() {Ds.push(Os.pop());};\n  Sd[\"end\"] = function() {Ds.pop();};\n  Sd[\"currentdict\"] = function() {Os.push(Ds[Ds.length - 1]);};\n  Sd[\"where\"] = function() {\n    var K = symbolName(Os.pop());\n    var D = inDs(Ds, K);\n\tif(D) {\n\t  Os.push(D);\n\t  Os.push(true);\n\t} else Os.push(false);\n  };\n  // miscellaneous\n  Sd[\"save\"] = function() {\n    var X = Ds.slice();\n    for(var I = 0; I < X.length; I++) {\n      var A = X[I];\n      var B = {};\n      for(var J in A)\n        B[J] = A[J];\n      X[I] = B;\n    }\n    Os.push(X);\n  };\n  Sd[\"restore\"] = function() {\n    var X = Os.pop();\n    while(0 < Ds.length)\n      Ds.pop();\n    while(0 < X.length)\n      Ds.unshift(X.pop());\n  };\n  Sd[\"type\"] = function() {\n    var A = Os.pop();\n    var X;\n    if(null === A) X = \"nulltype\";\n    else if(true === A || false === A) X = \"booleantype\";\n    else if(M === A) X = \"marktype\";\n    else if(\"string\" == typeof A) X = \"stringtype\";\n    else if(isSymbol(A)) X = isQuoted(A) ? \"nametype\" : \"operatortype\";\n    else if(\"function\" == typeof A) X = \"operatortype\";\n    else if(isArray(A)) X = \"arraytype\";\n    else if(\"object\" == typeof A) X = \"dicttype\";\n    else if(1 * A == A) X = A % 1 == 0 ? \"integertype\" : \"realtype\";\n    else throw \"Undefined type '\" + A + \"'\";\n    Os.push(X);\n    // filetype\n    // packedarraytype (LanguageLevel 2)\n    // fonttype\n    // gstatetype (LanguageLevel 2)\n    // savetype\n  };\n  var Sb = true;\n  Sd[\".strictBind\"] = function() {Sb = true === Os.pop();};\n  Sd[\"bind\"] = function() {Os.push(bind(Os.pop()));};\n  function bind(X) {\n    if(isSymbol(X) && !isQuoted(X)) {\n      var K = symbolName(X);\n      var D = inDs(Ds, K);\n      if(Sb) {\n        if(!D)\n          throw \"bind error '\" + K + \"'\";\n        return bind(D[K]);\n      } else return !D ? X : bind(D[K]);\n    } else if(isArray(X) && isQuoted(X)) {\n      var N = X.length;\n      var A = [];\n      for(var I = 0; I < N; I++) {\n        var Xi = X[I];\n        var Xb = bind(Xi);\n        if(isArray(Xi))\n          A = A.concat(isQuoted(Xi) ? quote([Xb]) : [Xb]);\n        else\n          A = A.concat(Xb);\n      }\n      return quote(A);\n    }\n    return X;\n  }\n  // debugging\n  Sd[\"=\"] = function() {var X = Os.pop(); alert(X && X.nm || X);}; // TODO\n  Sd[\"==\"] = function() {alert(Os.pop());}; // TODO\n  Sd[\"stack\"] = function() {alert(Os);}; // TODO\n  Sd[\"pstack\"] = function() {alert(Os);}; // TODO\n  // js ffi\n  Sd[\".call\"] = function() {\n    var N = Os.pop();\n    var K = Os.pop();\n    var D = Os.pop();\n    var X = [];\n    for(var I = 0; I < N; I++) X.unshift(Os.pop());\n    Os.push(D[K].apply(D, X));\n  };\n  Sd[\".math\"] = function() {Os.push(Math);};\n  Sd[\".date\"] = function() {Os.push(new Date());}; // TODO split new and Date\n  Sd[\".window\"] = function() {Os.push(window);};\n  Sd[\".callback\"] = function() { // TODO event arg?\n    var X = Os.pop();\n    Os.push(function() {\n              Ps.run(X, true);\n              while(0 < Es.length)\n                Ps.step();\n            });\n  };\n  // html5\n  Sd[\".minv\"] = function() { // TODO in ps\n    var M = Os.pop();\n    var a = M[0]; var b = M[1];\n    var d = M[2]; var e = M[3];\n    var g = M[4]; var h = M[5];\n    Os.push([e, b, d, a, d*h-e*g, b*g-a*h]);\n  };\n  Sd[\".mmul\"] = function() { // TODO in ps\n    var B = Os.pop();\n    var A = Os.pop();\n    var a = A[0]; var b = A[1];\n    var d = A[2]; var e = A[3];\n    var g = A[4]; var h = A[5];\n    var r = B[0]; var s = B[1];\n    var u = B[2]; var v = B[3];\n    var x = B[4]; var y = B[5];\n    Os.push([a*r+b*u, a*s+b*v, d*r+e*u, d*s+e*v, g*r+h*u+x, g*s+h*v+y]);\n  };\n  Sd[\".xy\"] = function() { // TODO in ps\n    var M = Os.pop();\n    var Y = Os.pop();\n    var X = Os.pop();\n    Os.push(M[0] * X + M[2] * Y + M[4]);\n    Os.push(M[1] * X + M[3] * Y + M[5]);\n  };\n  // TODO js ffi to manipulate strings so the following can be in ps\n  Sd[\".rgb\"] = function() { // TODO in ps\n    var B = Os.pop();\n    var G = Os.pop();\n    var R = Os.pop();\n    Os.push(\"rgb(\" + R + \",\" + G + \",\" + B + \")\");\n  };\n  Sd[\".rgba\"] = function() { // TODO in ps\n    var A = Os.pop();\n    var B = Os.pop();\n    var G = Os.pop();\n    var R = Os.pop();\n    Os.push(\"rgba(\" + R + \",\" + G + \",\" + B + \",\" + A + \")\");\n  };\n\n  function parse() {\n    var T = arguments;\n    if(T.length)\n      for(var I = 0; I < T.length; I++)\n        Ps.parse(T[I]);\n    else Ps.parse(T);\n    return Os;\n  }\n  Wps.prototype.parse = parse;\n  return this;\n}\n\nvar mainLib = 'currentdict\\/systemdict currentdict put\\nsystemdict\\/{\\/mark cvx put\\nsystemdict\\/[\\/mark cvx put\\nsystemdict\\/]\\n\\/counttomark cvx\\n\\/array cvx\\n\\/astore cvx\\n\\/exch cvx\\n\\/pop cvx\\n5 array astore cvx put\\nsystemdict\\/}\\/] cvx\\/cvx cvx 2 array astore cvx put\\nsystemdict\\/def{currentdict 2 index 2 index put pop pop}put\\n\\n\\/maxlength 1000 def % TODO\\n\\/.bdef{bind def}bind def\\n\\/.xdef{exch def}.bdef\\n\\/dup{0 index}.bdef\\n\\/load{dup where pop exch get}.bdef\\n\\/.ldef{load def}.bdef\\n\\/if{{}ifelse}.bdef\\n\\/cleartomark{array pop}.bdef\\n\\/known{exch begin where{currentdict eq}{false}if end}.bdef\\n\\/store{1 index where{3 1 roll put}{def}ifelse}.bdef\\n\\/not{{false}{true}ifelse}.bdef\\n\\/.logand{{{true}{false}ifelse}{pop false}ifelse}.bdef\\n\\/and\\/.logand .ldef % TODO numeric and\\n\\/.logor{{pop true}{{true}{false}ifelse}ifelse}.bdef\\n\\/or\\/.logor .ldef % TODO numeric or\\n\\/ne{eq not}.bdef\\n\\/ge{lt not}.bdef\\n\\/le{1 index 1 index eq 3 1 roll lt or}.bdef\\n\\/gt{le not}.bdef\\n\\/.repeat{1 1 4 2 roll for}.bdef\\n\\n%% math\\n\\n\\/floor{.math(floor)1 .call}.bdef\\n\\n\\/neg{0 exch sub}.bdef\\n\\/add{neg sub}.bdef\\n\\/idiv{div floor}.bdef\\n\\n\\/abs{.math(abs)1 .call}.bdef\\n\\/.acos{.math(acos)1 .call}.bdef\\n\\/.asin{.math(asin)1 .call}.bdef\\n\\/atan{exch .math(atan)1 .call}.bdef\\n\\/.atan2{.math(atan2)2 .call}.bdef\\n\\/ceiling{.math(ceil)1 .call}.bdef\\n\\/cos{.math(cos)1 .call}.bdef\\n\\/.exp{.math(exp)1 .call}.bdef\\n\\/log{.math(log)1 .call}.bdef\\n\\/.max{.math(max)2 .call}.bdef\\n\\/.min{.math(min)2 .call}.bdef\\n\\/.pow{.math(pow)2 .call}.bdef\\n\\/.random{.math(random)0 .call}.bdef\\n\\/rand{.random}.bdef % TODO follow spec\\n\\/round{.math(round)1 .call}.bdef\\n\\/sin{.math(sin)1 .call}.bdef\\n\\/sqrt{.math(sqrt)1 .call}.bdef\\n\\/.tan{.math(tan)1 .call}.bdef\\n\\/truncate{.math(truncate)1 .call}.bdef % TODO Math.truncate does not exist!\\n\\n\\/.e{.math(E)get}.bdef\\n\\/.ln2{.math(LN2)get}.bdef\\n\\/.ln10{.math(LN10)get}.bdef\\n\\/.log2e{.math(LOG2E)get}.bdef\\n\\/.log10e{.math(LOG10E)get}.bdef\\n\\/.pi{.math(PI)get}.bdef\\n\\/.sqrt1_2{.math(SQRT1_2)get}.bdef\\n\\/.sqrt2{.math(SQRT2)get}.bdef\\n\\n%% html\\n\\n\\/.setTimeout{.window(setTimeout)2 .call}.bdef % cb ms -- id\\n\\/.clearTimeout{.window(clearTimeout)1 .call pop}.bdef % id --\\n\\/.setInterval{.window(setInterval)2 .call}.bdef % cb ms -- id\\n\\/.clearInterval{.window(clearInterval)1 .call pop}.bdef % id --\\n\\/.document{.window(document)get}.bdef % -- document\\n\\/.getElementById{.document(getElementById)1 .call}.bdef % id -- w\\n\\/.hook{put}.bdef % e k cb --\\n\\n%% canvas\\n\\n\\/.setGc{.getElementById(2d)exch(getContext)1 .call\\/.$gc .xdef}.bdef\\n\\/.gc{\\/.$gc load}.bdef\\n\\/.gget{.gc exch get}.bdef\\n\\/.gput{.gc 3 1 roll exch put}.bdef\\n\\/.gcall0{.gc 3 1 roll .call pop}.bdef\\n\\/.gcall1{.gc 3 1 roll .call}.bdef\\n\\/.gcanvas{(canvas).gget}.bdef\\n\\/.gdim{.gcanvas exch(height)exch put .gcanvas exch(width)exch put}.bdef\\n\\/.gbox{.gdim pop pop}.bdef % TODO compute properly\\n\\n\\/.save{(save)0 .gcall0}.bdef\\n\\/.restore{(restore)0 .gcall0}.bdef\\n\\/.scale{(scale)2 .gcall0}.bdef\\n\\/.rotate{(rotate)1 .gcall0}.bdef\\n\\/.translate{(translate)2 .gcall0}.bdef\\n\\/.transform{(transform)6 .gcall0}.bdef\\n\\/.setTransform{(setTransform)6 .gcall0}.bdef\\n\\/.createLinearGradient{(createLinearGradient)4 .gcall1}.bdef\\n\\/.createRadialGradient{(createRadialGradient)6 .gcall1}.bdef\\n\\/.createPattern{(createPattern)2 .gcall1}.bdef\\n\\/.clearRect{(clearRect)4 .gcall0}.bdef\\n\\/.fillRect{(fillRect)4 .gcall0}.bdef\\n\\/.strokeRect{(strokeRect)4 .gcall0}.bdef\\n\\/.beginPath{(beginPath)0 .gcall0}.bdef\\n\\/.closePath{(closePath)0 .gcall0}.bdef\\n\\/.moveTo{(moveTo)2 .gcall0}.bdef\\n\\/.lineTo{(lineTo)2 .gcall0}.bdef\\n\\/.quadraticCurveTo{(quadraticCurveTo)4 .gcall0}.bdef\\n\\/.bezierCurveTo{(bezierCurveTo)6 .gcall0}.bdef\\n\\/.arcTo{(arcTo)5 .gcall0}.bdef\\n\\/.rect{(rect)4 .gcall0}.bdef\\n\\/.arc{(arc)6 .gcall0}.bdef\\n\\/.fill{(fill)0 .gcall0}.bdef\\n\\/.stroke{(stroke)0 .gcall0}.bdef\\n\\/.clip{(clip)0 .gcall0}.bdef\\n\\/.isPointInPath{(isPointInPath)2 .gcall1}.bdef\\n\\/.fillText{(fillText)4 .gcall0}.bdef\\n\\/.fillText{}.bdef % TODO not working in Firefox\\n\\/.strokeText{(strokeText)4 .gcall0}.bdef\\n\\/.strokeText{}.bdef % TODO not working in Firefox\\n\\/.measureText{(measureText)1 .gcall1}.bdef\\n\\/.drawImage1{(drawImage1)5 .gcall0}.bdef\\n\\/.drawImage2{(drawImage2)9 .gcall0}.bdef\\n\\/.createImageData1{(createImageData1)1 .gcall1}.bdef\\n\\/.createImageData2{(createImageData2)2 .gcall1}.bdef\\n\\/.getImageData{(getImageData)4 .gcall1}.bdef\\n\\/.putImageData{(putImageData)7 .gcall0}.bdef\\n\\n\\/.getGlobalAlpha{(globalAlpha).gget}.bdef\\n\\/.getGlobalCompositeOperation{(globalCompositeOperation).gget}.bdef\\n\\/.getStrokeStyle{(strokeStyle).gget}.bdef\\n\\/.getFillStyle{(fillStyle).gget}.bdef\\n\\/.getLineWidth{(lineWidth).gget}.bdef\\n\\/.getLineCap{(lineCap).gget}.bdef\\n\\/.getLineJoin{(lineJoin).gget}.bdef\\n\\/.getMiterLimit{(miterLimit).gget}.bdef\\n\\/.getShadowOffsetX{(shadowOffsetX).gget}.bdef\\n\\/.getShadowOffsetY{(shadowOffsetY).gget}.bdef\\n\\/.getShadowBlur{(shadowBlur).gget}.bdef\\n\\/.getShadowColor{(shadowColor).gget}.bdef\\n\\/.getFont{(font).gget}.bdef\\n\\/.getTextAlign{(textAlign).gget}.bdef\\n\\/.getTextBaseline{(textBaseline).gget}.bdef\\n\\n\\/.setGlobalAlpha{(globalAlpha).gput}.bdef\\n\\/.setGlobalCompositeOperation{(globalCompositeOperation).gput}.bdef\\n\\/.setStrokeStyle{(strokeStyle).gput}.bdef\\n\\/.setFillStyle{(fillStyle).gput}.bdef\\n\\/.setLineWidth{(lineWidth).gput}.bdef\\n\\/.setLineCap{(lineCap).gput}.bdef\\n\\/.setLineJoin{(lineJoin).gput}.bdef\\n\\/.setLineCap{pop}.bdef % TODO remove this later (Firefox throws)\\n\\/.setLineJoin{pop}.bdef % TODO remove this later (Firefox throws)\\n\\/.setMiterLimit{(miterLimit).gput}.bdef\\n\\/.setShadowOffsetX{(shadowOffsetX).gput}.bdef\\n\\/.setShadowOffsetY{(shadowOffsetY).gput}.bdef\\n\\/.setShadowBlur{(shadowBlur).gput}.bdef\\n\\/.setShadowColor{(shadowColor).gput}.bdef\\n\\/.setFont{(font).gput}.bdef\\n\\/.setTextAlign{(textAlign).gput}.bdef\\n\\/.setTextBaseline{(textBaseline).gput}.bdef\\n\\n%% PostScript\\n\\n\\/.deg2rad{.pi 180 div mul}.bdef\\n\\/.rad2deg{180 .pi div mul}.bdef\\n\\n\\/.$cx 0 def\\n\\/.$cy 0 def\\n\\/.$px 0 def\\n\\/.$py 0 def\\n\\/.setPoint{\\/.$cy .xdef\\/.$cx .xdef}.bdef\\n\\/.setPath{\\/.$py .xdef\\/.$px .xdef}.bdef\\n\\/currentpoint{\\/.$cx load \\/.$cy load}.bdef\\n\\/.getPath{\\/.$px load \\/.$py load}.bdef\\n\\n\\/identmatrix{pop [1 0 0 1 0 0]}.bdef % TODO fill\\n\\/matrix{6 array identmatrix}.bdef\\n\\/setmatrix{\\/.$tm .xdef}.bdef\\n\\/defaultmatrix{pop matrix}.bdef % TODO fill\\n\\/initmatrix{matrix defaultmatrix setmatrix}.bdef\\n\\/currentmatrix{pop \\/.$tm load}.bdef % TODO fill\\ninitmatrix\\n\\n\\/.getTmd{\\/.$tmd load}.bdef\\n\\/.setTmd{\\/.$tmd .xdef}.bdef\\n\\/.resetTmd{matrix .setTmd}.bdef\\n.resetTmd\\n\\n\\/.update{ % m --\\n  currentpoint 2 index % m .$cx .$cy m\\n  .xy .setPoint % m\\n  dup .getTmd exch .mmul .setTmd % (.$tmd x m)\\n  dup currentmatrix exch .mmul setmatrix % = .$tm x m\\n}.bdef\\n\\n\\/transform{dup type(arraytype)ne{.getTmd}if .xy}.bdef\\n\\/itransform{dup type(arraytype)ne{.getTmd}if .minv .xy}.bdef\\n\\n\\/.scaleM{0 0 3 2 roll 0 0 6 array astore}.bdef % x y -- [x 0 0 y 0 0]\\n\\/.scale3{pop .scaleM}.bdef\\n\\/.scale2{2 copy .scaleM .update .scale}.bdef\\n\\/scale{dup type(arraytype)eq{.scale3}{.scale2}ifelse}.bdef\\n\\n\\/.translateM{1 0 0 1 6 4 roll 6 array astore}.bdef % x y -- [1 0 0 1 x y]\\n\\/.translate3{pop .translateM}.bdef\\n\\/.translate2{2 copy .translateM .update .translate}.bdef\\n\\/translate{dup type(arraytype)eq{.translate3}{.translate2}ifelse}.bdef\\n\\n\\/.rotateM{dup cos exch sin dup neg 2 index 0 0 6 array astore}.bdef % a -- [c s -s c 0 0]\\n\\/.rotate2{pop .deg2rad .rotateM}.bdef\\n\\/.rotate1{.deg2rad dup .rotateM .update .rotate}.bdef\\n\\/rotate{dup type(arraytype)eq{.rotate2}{.rotate1}ifelse}.bdef\\n\\n%matrix concat â€“    Replace CTM by matrix Â´ CTM\\n%matrix1 matrix2 matrix3 concatmatrix matrix3   Fill matrix3 with matrix1 Â´ matrix2\\n\\n%dx dy dtransform dxÂ¢ dyÂ¢   Transform distance (dx, dy) by CTM\\n%dx dy matrix dtransform dxÂ¢ dyÂ¢    Transform distance (dx, dy) by matrix\\n\\n%dxÂ¢ dyÂ¢ idtransform dx dy  Perform inverse transform of distance (dxÂ¢, dyÂ¢) by CTM\\n%dxÂ¢ dyÂ¢ matrix idtransform dx dy   Perform inverse transform of distance (dxÂ¢, dyÂ¢) by matrix\\n\\n%matrix1 matrix2 invertmatrix matrix2   Fill matrix2 with inverse of matrix1\\n\\n\\/gsave{.save}.bdef\\n\\/grestore{.restore}.bdef\\n\\/clip{.clip}.bdef\\n\\/rectclip{.clearRect}.bdef\\n\\/rectfill{.fillRect}.bdef\\n\\/rectstroke{.strokeRect}.bdef\\n\\/newpath{.beginPath}.bdef\\n\\/closepath{.closePath}.bdef\\n\\/moveto{2 copy .setPoint 2 copy .setPath .resetTmd .moveTo}.bdef\\n\\/lineto{2 copy .setPoint 2 copy .setPath .resetTmd .lineTo}.bdef\\n\\/arcto{.arcTo}.bdef\\n\\n\\/setlinewidth{.setLineWidth}.bdef\\n\\/setlinecap{.setLineCap}.bdef % TODO\\n\\/setlinejoin{.setLineJoin}.bdef % TODO\\n\\/setmiterlimit{.setMiterLimit}.bdef\\n\\n\\/currentlinewidth{.getLineWidth}.bdef\\n\\/currentlinecap{<<\\/butt 0\\/round 1\\/square 2>> .getLineCap get}.bdef\\n\\/currentlinejoin{<<\\/miter 0\\/round 1\\/bevel 2>> .getLineJoin get}.bdef\\n\\/currentmiterlimit{.getMiterLimit}.bdef\\n\\n\\/setgray{255 mul dup dup .rgb dup .setStrokeStyle .setFillStyle}.bdef\\n\\/setrgbcolor{3{255 mul round 3 1 roll}repeat .rgb dup .setStrokeStyle .setFillStyle}.bdef\\n\\/setcmykcolor{setrgbcolor pop}.bdef % TODO\\n\\/sethsbcolor{setrgbcolor}.bdef % TODO\\n\\/clippath{0 0 .gcanvas(width)get .gcanvas(height)get .rect}.bdef % TODO\\n\\/show{currentpoint 3 2 roll 3 copy .fillText .strokeText}.bdef % TODO\\n\\n\\/rlineto{.getTmd .xy \\/.$py load add exch \\/.$px load add exch .getTmd .minv .xy lineto}.bdef\\n\\/curveto{2 copy .setPoint 2 copy .setPath .resetTmd .bezierCurveTo}.bdef\\n\\n\\/currentflat{42}.bdef % TODO\\n\\/setflat{pop}.bdef % TODO\\n\\n\\/arc{.deg2rad exch .deg2rad exch true .arc}.bdef % TODO currentpoint\\n\\/arcn{.deg2rad exch .deg2rad exch false .arc}.bdef % TODO currentpoint\\n\\n\\/fill{.fill newpath currentpoint .moveTo}.bdef % TODO\\n\\n\\/setdash{pop pop}.bdef % TODO\\n\\n\\/stroke{.stroke newpath currentpoint .moveTo}.bdef\\n\\n\\/showpage{}.bdef % TODO\\n\\/grestoreall{}.bdef % TODO\\n\\/readonly{}.bdef % TODO\\n\\/currentfile{(url?)}.bdef % TODO\\n\\/eexec{pop}.bdef % TODO\\n\\/findfont{}.bdef % TODO\\n\\/scalefont{pop}.bdef % TODO\\n\\/setfont{pop}.bdef % TODO C.font = N + \\\"pt \\\" + F.V;\\n\\/stopped{}.bdef % TODO\\n\\/loop{}.bdef % TODO !!!\\n\\/string{}.bdef % TODO\\n\\/cvi{}.bdef % TODO\\n\\/pathbbox{}.bdef % TODO\\n\\/urx{}.bdef % TODO\\n\\/ury{}.bdef % TODO\\n\\/llx{}.bdef % TODO\\n\\/lly{}.bdef % TODO\\n\\/pagewidth{}.bdef % TODO\\n\\/pageheight{}.bdef % TODO\\n\\/inwidth{}.bdef % TODO\\n\\/inheight{}.bdef % TODO\\n\\/usertime{}.bdef % TODO\\n\\/srand{}.bdef % TODO\\n\\n%% PDF\\n\\n\\/w{setlinewidth}.bdef\\n\\/J{setlinecap}.bdef % TODO\\n\\/j{setlinejoin}.bdef % TODO\\n\\/M{setmiterlimit}.bdef\\n\\/d{setdash}.bdef % TODO\\n\\/ri{}.bdef % TODO\\n\\/i{1 .min setflat}.bdef\\n\\/gs{}.bdef % TODO\\n\\/q{gsave}.bdef\\n\\/Q{grestore}.bdef\\n\\/cm{.transform}.bdef\\n\\/m{newpath moveto}.bdef % TODO only if not m previously\\n\\/l{lineto}.bdef\\n\\/c{.bezierCurveTo}.bdef\\n\\/v{currentpoint 6 2 roll c}.bdef\\n\\/y{2 copy c}.bdef\\n\\/h{closepath}.bdef % TODO\\n\\/re{.rect}.bdef % TODO really, or x y m , x+w y l , x+w y+h l , x y+h l , h\\n\\/S{stroke}.bdef\\n\\/s{h S}.bdef\\n\\/f{fill}.bdef % TODO\\n\\/F{f}.bdef\\n\\/f*{}.bdef % TODO\\n\\/B{f S}.bdef\\n\\/B*{f* S}.bdef\\n\\/b{h B}.bdef\\n\\/b*{h B*}.bdef\\n\\/n{}.bdef % TODO\\n\\/W{clip}.bdef % TODO\\n\\/W*{clip}.bdef % TODO\\n\\/BT{}.bdef % TODO\\n\\/ET{}.bdef % TODO\\n\\/Tc{}.bdef % TODO\\n\\/Tw{}.bdef % TODO\\n\\/Tz{}.bdef % TODO\\n\\/TL{}.bdef % TODO\\n\\/Tf{setfont}.bdef % TODO\\n\\/Tr{}.bdef % TODO\\n\\/Ts{}.bdef % TODO\\n\\/Td{translate 0 0 moveto}.bdef\\n\\/TD{}.bdef % TODO\\n\\/Tm{}.bdef % TODO\\n\\/T*{}.bdef % TODO\\n\\/Tj{show}.bdef % TODO\\n\\/TJ{}.bdef % TODO\\n\\/\\'{}.bdef % TODO\\n\\/\\\"{}.bdef % TODO\\n\\/d0{}.bdef % TODO\\n\\/d1{}.bdef % TODO\\n\\/CS{}.bdef % TODO\\n\\/cs{}.bdef % TODO\\n%\\/SC\\/setcolor .ldef\\n\\/SCN{}.bdef % TODO\\n%\\/sc\\/setcolor .ldef\\n\\/scn{}.bdef % TODO\\n\\/G{}.bdef % TODO\\n\\/g{}.bdef % TODO\\n\\/RG{}.bdef % TODO\\n\\/rg{setrgbcolor}.bdef % TODO\\n\\/K{}.bdef % TODO\\n\\/k{}.bdef % TODO\\n\\/sh{}.bdef % TODO\\n\\/BI{}.bdef % TODO\\n\\/ID{}.bdef % TODO\\n\\/EI{}.bdef % TODO\\n\\/Do{}.bdef % TODO\\n\\/MP{}.bdef % TODO\\n\\/DP{}.bdef % TODO\\n\\/BMC{}.bdef % TODO\\n\\/BDC{}.bdef % TODO\\n\\/EMC{}.bdef % TODO\\n\\/BX{}.bdef % TODO\\n\\/EX{}.bdef % TODO\\n\\n%% finish\\n\\nfalse .strictBind\\n\\n\\/userdict 1000 dict def\\nuserdict begin\\n';\n\n"})
      }
    );

    predefinedCompilers.push(
      {
        'ID':"png",
        'preset':true,
        'Name':'PNG Interpreter (Browser)',
        'InputLanguage':'PNG',
        'OutputLanguage':'',
        'LastInput':'',
        'Type':'interpreter',
        'JSON':JSON.stringify({"lex":{"rules":[{"expression":"[\\s\\S]+","name":"Input"},{"name":"IGNORE","expression":""}]},"bnf":[{"name":"Start","rhs":[[[{"name":"Input","type":"t"}],"\nvar input = $1;\n\nvar base64 = \"data:image/png;base64,\"+btoa(input);\n\n$$ = '<img src=\"'+base64+'\"/>';\n\nreturn $$;\n"]]}]})
      }
    );

    predefinedCompilers.push(
      {
        'ID':"pdf",
        'preset':true,
        'Name':'PDF Interpreter (Browser)',
        'InputLanguage':'PDF',
        'OutputLanguage':'',
        'LastInput':'',
        'Type':'interpreter',
        'JSON':JSON.stringify({"lex":{"rules":[{"expression":"[\\s\\S]+","name":"Input"},{"name":"IGNORE","expression":""}]},"bnf":[{"name":"Start","rhs":[[[{"name":"Input","type":"t"}],"\nvar input = $1;\n\nvar base64 = \"data:application/pdf;base64,\"+btoa(input);\n\n$$ = '<iframe src=\"'+base64+'\" style=\"width:100%;height:100%;min-height:300px;border:0\"></iframe>';\n\nreturn $$;\n"]]}]})
      }
    );


    predefinedCompilers.push(
      {
        'ID':"schemejs",
        'preset':true,
        'Name':'Scheme Interpreter',
        'InputLanguage':'SCM',
        'OutputLanguage':'',
        'LastInput':'',
        'Type':'interpreter',
        'JSON':JSON.stringify({"lex":{"rules":[{"expression":"[\\w\\W]+","name":"SchemeCode"},{"name":"IGNORE","expression":""}]},"bnf":[{"name":"Start","rhs":[[[{"name":"SchemeCode","type":"t"}],"// we may got an argument for the program to interpret\nvar arg = typeof argument != \"undefined\" ? argument : \"\";\n\nreturn clickEval('(define input \"'+arg+'\")\\n'+$1);\n"]]}],"globalCode":"// Source from: https://bluishcoder.co.nz/jsscheme/\n// + small changes to work with VCC\n\n\nfunction R(s) {\n  s='var e=TopEnv;'+s;\n  s=eval(s);\n  printLog( '*> ' + Str(s) );\n  showRes(s);\n}\n\n//\n\nvar trace = false;\n\nfunction clone(x) {\n  var i, r = new x.constructor;\n  for(i in x) {\n    if( x[i] != x.constructor.prototype[i] )\n      r[i] = x[i];\n  }\n  return r;\n}\n\n//\n// Classes...\n//\n\n// Pair - List construction block\n\nfunction Pair( car, cdr ) {\n  this.car = car;\n  this.cdr = cdr;\n}\n\nfunction isNil(x) {\n  return x == theNil || x == null || ( (x instanceof Pair) &&\n         x.car == null && x.cdr == null );\n}\n\nfunction Nil() { }\nvar theNil = new Nil();\n\nNil.prototype.Str = function() { return '()'; }\nNil.prototype.Html = dumbHtml;\nNil.prototype.ListCopy = function() { return this; }\n\n// Char class constructor - since we don't have Char type in JS\n// 2Do: Chat = String with .isChar=true ??\n\nfunction Char(c) {\n  Chars[ this.value = c ] = this;\n}\n\n// Symbol class constructor - to distinguish it from String\n\nfunction Symbol(s) {\n  Symbols[ this.name = s ] = this;\n}\n\nvar Symbols = new Object();\nvar Chars = new Object();\n\nfunction getSymbol(name,leaveCase) {\n  if( ! leaveCase ) name = name.toLowerCase(); // case-insensitive symbols!\n  if( Symbols[name] != undefined ) {\n    return Symbols[name];\n  }\n  return new Symbol(name);\n}\n\nfunction getChar(c) {\n  if( Chars[c] != undefined ) {\n    return Chars[c];\n  }\n  return new Char(c);\n}\n\n//\n// Parser\n//\n\n// Tokenizer\n\nfunction tokenize(txt) {\n  var tokens = new Array(), oldTxt=null;\n  while( txt != \"\" && oldTxt != txt ) {\n    oldTxt = txt;\n    txt = txt.replace( /^\\s*(;[^\\r\\n]*(\\r|\\n|$)|#\\\\[^\\w]|#?(\\(|\\[|{)|\\)|\\]|}|\\'|`|,@|,|\\\"(\\\\(.|$)|[^\\\"\\\\])*(\\\"|$)|[^\\s()\\[\\]{}]+)/,\n      function($0,$1) {\n        if( $1.charAt(0) != ';' ) tokens[tokens.length]=$1;\n        return \"\";\n      } );\n  }\n  return tokens;\n}\n\n// Parser class constructor\n\nfunction Parser(txt) {\n  this.tokens = tokenize(txt);\n  this.i = 0;\n}\n\n// get list items until ')'\n\nParser.prototype.getList = function( close ) {\n  var list = theNil, prev = list;\n  while( this.i < this.tokens.length ) {\n    if( this.tokens[ this.i ] == ')' ||\n        this.tokens[ this.i ] == ']' ||\n        this.tokens[ this.i ] == '}' ) {\n      this.i++; break;\n    }\n\n    if( this.tokens[ this.i ] == '.' ) {\n      this.i++;\n      var o = this.getObject();\n      if( o != null && list != theNil ) {\n        prev.cdr = o;\n      }\n    } else {\n      var cur = new Pair( this.getObject(), theNil );\n      if( list == theNil ) list = cur;\n      else prev.cdr = cur;\n      prev = cur;\n    }\n  }\n  return list;\n}\n\nParser.prototype.getVector = function( close ) {\n  var arr = new Array();\n  while( this.i < this.tokens.length ) {\n    if( this.tokens[ this.i ] == ')' ||\n        this.tokens[ this.i ] == ']' ||\n        this.tokens[ this.i ] == '}' ) { this.i++; break; }\n    arr[ arr.length ] = this.getObject();\n  }\n  return arr;\n}\n\n// get object\n\nParser.prototype.getObject = function() {\n  if( this.i >= this.tokens.length ) return null;\n  var t = this.tokens[ this.i++ ];\n\n // if( t == ')' ) return null;\n\n  var s = t == \"'\" ? 'quote' :\n          t == \"`\" ? 'quasiquote' :\n          t == \",\" ? 'unquote' :\n          t == \",@\" ? 'unquote-splicing' : false;\n  if( s || t == '(' || t == '#(' ||\n           t == '[' || t == '#[' ||\n           t == '{' || t == '#{' ) {\n    return s ? new Pair( getSymbol(s),\n               new Pair( this.getObject(),\n               theNil ))\n             : (t=='(' || t=='[' || t=='{') ? this.getList(t) : this.getVector(t);\n  } else {\n\n    var n;\n    if( /^#x[0-9a-z]+$/i.test(t) ) {  // #x... Hex\n      n = new Number('0x'+t.substring(2,t.length) );\n    } else if( /^#d[0-9\\.]+$/i.test(t) ) {  // #d... Decimal\n      n = new Number( t.substring(2,t.length) );\n    } else n = new Number(t);  // use constrictor as parser\n\n    if( ! isNaN(n) ) {\n      return n.valueOf();\n    } else if( t == '#f' || t == '#F' ) {\n      return false;\n    } else if( t == '#t' || t == '#T' ) {\n      return true;\n    } else if( t.toLowerCase() == '#\\\\newline' ) {\n      return getChar('\\n');\n    } else if( t.toLowerCase() == '#\\\\space' ) {\n      return getChar(' ');\n    } else if( /^#\\\\.$/.test(t) ) {\n      return getChar( t.charAt(2) );\n    } else if( /^\\\"(\\\\(.|$)|[^\\\"\\\\])*\\\"?$/.test(t) ) {\n       return t.replace( /^\\\"|\\\\(.|$)|\\\"$/g, function($0,$1) {\n           return $1 ? $1 : '';\n         } );\n    } else return getSymbol(t);  // 2Do: validate !!\n  }\n}\n\n//\n// Printers\n//\n\nBoolean.prototype.Str = function () {\n  return this.valueOf() ? '#t' : '#f';\n}\n\nChar.prototype.Str = function () {\n  if( this.value == ' ' ) return '#\\\\space';\n  if( this.value == '\\n' ) return '#\\\\newline';\n  return '#\\\\'+this.value;\n}\n\nNumber.prototype.Str = function () {\n  return this.toString();\n}\n\nPair.prototype.Str = function () {\n  var s = '';\n  for( var o = this; o != null && o instanceof Pair && (o.car != null || o.cdr != null); o = o.cdr ) {\n    if( o.car != null ) {\n      if(s) s += ' ';\n      s += Str(o.car);\n    }\n  }\n  if( o != theNil && o != null && !( o instanceof Pair ) )\n    s += ' . ' + Str(o);\n  return '('+s+')';\n}\n\nString.prototype.Str = function () {\n  return '\"'+this.replace(/\\\\|\\\"/g,function($0){return'\\\\'+$0;})+'\"';\n}\n\nSymbol.prototype.Str = function () {\n  return this.name;\n}\n\nFunction.prototype.Str = function () {\n  return '#primitive' + (trace ? '<'+this+'>' : '');\n}\n\nfunction Str(obj) {\n  if( obj == null ) return \"#null\";\n  if( obj.Str ) return obj.Str();\n  var c = obj.constructor, r;\n  if( c ) {\n    if( r = /^\\s*function\\s+(\\w+)\\(/.exec(c) ) c = r[1];\n    return '#obj<'+c+'>';\n  }\n  return '#<'+obj+'>';\n}\n\nfunction Html(obj) {\n  if( obj == null ) return \"#null\";\n  if( obj.Html ) return obj.Html();\n  return ( '#obj<'+obj+'>' );\n}\n\nArray.prototype.Str = function () {\n  var s='',i;\n  for( i=0; i<this.length; i++ ) {\n    if( s != '' ) s += ' ';\n    s += Str( this[i] );\n  }\n  return '#('+s+')';\n}\n\nContinuation.prototype.Str = function () {\n  return \"#continuation\";\n}\n\n// HTML output\n\nfunction escapeHTML(s) {\n  return s.replace( /(&)|(<)|(>)/g,\n    function($0,$1,$2,$3) {\n      return $1 ? '&amp;' : $2 ? '&lt;' : '&gt;';\n    } );\n}\n\nfunction dumbHtml() {\n  return ( this.Str() );\n}\n\nfunction pairHtml() {\n  return ( this.Str() );\n  // unused\n  var s1='',s2='', i, cells = new Array(), allSimple=true, firstSymbol=false;\n  for( var o = this; o instanceof Pair && !isNil(o); o = o.cdr ) {\n    if( o.car != null ) {\n      if( cells.length == 0 )\n        firstSymbol = o.car instanceof Symbol && o.car != theBegin;\n      allSimple = allSimple && !(o.car instanceof Pair) &&\n                               !(o.car instanceof Array);\n      cells[cells.length] = Html(o.car);\n    }\n  }\n  if( o != theNil && o != null && !( o instanceof Pair ) ) {\n    cells[cells.length] = '.';\n    allSimple = allSimple && !(o instanceof Array);\n    cells[cells.length] = Html(o);\n    if( firstSymbol && cells.length == 3 ) allSimple = true;\n  }\n\n  var rowSpan = allSimple ? 1 : firstSymbol ? cells.length-1 : cells.length;\n  rowSpan = rowSpan>1 ? ' rowSpan='+rowSpan : '';\n\n  var edit = ''; // \" onClick=editCell()\"\n  for( i=0; i<cells.length; i++ ) {\n    if( allSimple || i<1 || (i<2 && firstSymbol) ) {\n      s1 += \"<td\"+(cells[i]=='.'?'':edit)\n         + (i==0&&firstSymbol ? ' valign=top'+rowSpan : '')\n         + \">\" + cells[i] + \"<\\/td>\";\n    } else {\n      s2 += \"<tr><td\"+(cells[i]=='.'?'':edit)\n         + \">\" + cells[i] + \"<\\/td><\\/tr>\";\n    }\n  }\n\n  return '<table border=0 cellspacing=1 cellpadding=4>'\n       + '<tr><td valign=top'+rowSpan+'>(<\\/td>'\n       + s1 + '<td valign=bottom'+rowSpan+'>)<\\/td><\\/tr>' + s2 + '<\\/table>';\n//  onClick=hv(this)\n}\n\nBoolean.prototype.Html = dumbHtml;\nChar.prototype.Html = dumbHtml;\nNumber.prototype.Html = dumbHtml;\nPair.prototype.Html = pairHtml;\nString.prototype.Html = dumbHtml;\nSymbol.prototype.Html = dumbHtml;\nFunction.prototype.Html = dumbHtml;\nArray.prototype.Html = dumbHtml;\nContinuation.prototype.Html = dumbHtml;\n\n//\n// Environment\n//\n\nfunction Env(parent) {\n  this.parentEnv = parent;\n}\n\nEnv.prototype.get = function(name) {\n  var v = this[name]; if( v != undefined ) return v;\n  for( var o = this.parentEnv; o; o = o.parentEnv ) {\n    v = o[name]; if( v != undefined ) return v;\n  }\n // if( typeof(v) == 'undefined' ) {\n //   if( this.parentEnv ) return this.parentEnv.get(name); else\n    throw new Ex(\"unbound symbol \"+name);\n // } else return v;\n}\n\nEnv.prototype.set = function( name, value ) {\n  for( var o=this; o; o=o.parentEnv )\n    if( o[name] != undefined ) return o[name]=value;\n // if( typeof(this[name]) == 'undefined' ) {\n //   if( this.parentEnv ) this.parentEnv.set(name,value); else\n    throw new Ex(\"cannot set! unbound symbol \"+name);\n // } else this[name] = value;\n}\n\nEnv.prototype.Str = function() {\n  var s = '',i;\n  for( i in this ) {\n    if( ! Env.prototype[i] && this[i]!=TopEnv ) {\n      if( s != '' ) s += ',';\n      var v = this[i];\n      s += i + '=' + ( v instanceof Lambda ? '#lambda' :\n                       typeof(v) == 'function' ? '#js' :\n                       v ? v.Str() : v );\n    }\n  }\n  return '['+s+']';\n}\n\nEnv.prototype.With = function(a,v) { this[a]=v; this.Private=true; return this; }\n\n// Top Environment\n\nvar TopEnv = new Env();\n\n//\n\nfunction Lambda(args,body,env,compiled) {\n  this.args = args;\n  this.body = body;\n  this.env = env;\n  this.compiled = compiled;\n}\n\nLambda.prototype.clone = function(e) {\n  if( this.env.Private ) {\n    e = new Env(e);\n    var i; for( i in this.env ) if(e[i]==undefined) e[i]=this.env[i];\n  }\n\n  return new Lambda( this.args, this.body, e, this.compiled);\n}\n\nLambda.prototype.Html = dumbHtml;\n\nLambda.prototype.Str = function() {\n  return \"#lambda\" + (trace ? \"<\"+this.args.Str()\n        + ',' + this.body.Str()\n       // + ( trace ? ',' + this.env.Str() : '' )\n        + \">\" : '');\n}\n\n//\n// Evaluator - new state engine (for tail/rec and call/cc)\n//\n\nfunction State(obj,env,cc) {\n  this.obj = obj;\n  this.env = env;\n  this.cc = cc;\n}\n\nfunction stateEval(noTrace) {\n  if( this.obj == null ) this.ready = true;\n  if( ! this.ready ) {\n    if( trace && !noTrace ) printLog( \"eval: \" + this.obj.Str() );\n    this.ready = false;\n    this.obj.Eval(this);\n  }\n  return this.ready;\n}\n\nfunction stateContinue() {\n  this.cc.cont(this);\n}\n\nState.prototype.Eval = stateEval;\nState.prototype.cont = stateContinue;\n\nfunction Ex(s) { this.s = s; }\nEx.prototype.Str = function(){ return \"#error<\"+this.s+\">\"; }\nEx.prototype.Html = dumbHtml;\n\ngetSymbol('(').Eval = getSymbol(')').Eval = function() {\n  throw new Ex('unbalanced bracket '+this.name);\n}\n\nvar topCC = new Continuation(null,null,null,function(state){throw state;});\n\nfunction doEval( obj, noTrans ) {\n  try {\n    if( obj instanceof Symbol && obj.Eval == Symbol.prototype.Eval )\n      return TopEnv.get(obj.name);\n\n    if( ! noTrans ) {\n      try {\n        var xformer = TopEnv.get('transform');\n        if( xformer instanceof Lambda || xformer instanceof Function ) {\n          var o = doEval( new Pair( xformer,\n                        new Pair( new Pair( theQuote,\n                                  new Pair( obj,\n                                  theNil )),\n                        theNil)), true );\n          if( trace ) printLog( 'transformed: '+Str(o) );\n          if( ! (o instanceof Ex) ) obj = o;\n        }\n      } catch( ex ) { }\n    }\n\n    var state = new State( obj, TopEnv, topCC );\n    while( true ) {\n\n      // Both state.Eval() and state.cont()\n      // returns True if value was calculated\n      // or False if continuation\n\n      if( state.Eval(noTrans) ) {\n        state.ready = false;\n        state.cont();\n      }\n    }\n  } catch(e) {\n    if( e instanceof Ex )\n      return e;\n    else if( e instanceof State )\n      return e.obj;\n    else\n      return new Ex(e.description); // throw e;\n  }\n}\n\nfunction evalTrue(state) {\n  state.ready = true;\n}\n\nfunction evalVar(state) {\n  state.obj = state.env.get(this.name);\n  state.ready = true;\n}\n\n// ?? Continuation\n\nfunction Continuation(obj,env,cc,f) {\n  this.i = 0; // for List-cont\n  this.obj = obj;\n  this.env = env;\n  this.cc = cc;\n  this.cont = f;\n}\n\nContinuation.prototype.clone = function() {\n  var r = clone( this );\n  if( this.cc ) r.cc = this.cc.clone();\n  return r;\n}\n\nfunction continuePair(state) {\n  this[this.i++] = state.obj;\n  if( isNil(this.obj) ) {\n    // apply: 1. create arg list\n    var args = theNil, prev = args;\n    for( var i = 1; i < this.i; i++ ) {\n      var cur = new Pair( this[i], theNil );\n      if( args == theNil ) args = cur; else prev.cdr = cur;\n      prev = cur;\n    }\n    // 2. call f()\n    state.env = this.env;\n    state.cc = this.cc;\n    state.obj = callF( this[0], args, state );\n  } else {\n    state.obj = this.obj.car;\n    state.env = this.env;\n    state.cc = this;\n    this.obj = this.obj.cdr;   // 2Do: (a.b) list!!\n    state.ready = false;\n  }\n}\n\nPair.prototype.ListCopy = function() {\n  var o,p,r = new Pair(this.car);\n  for( o = this.cdr, p=r; o instanceof Pair; p=p.cdr=new Pair(o.car), o=o.cdr );\n  p.cdr = o; return r;\n}\n\nfunction callF( f, args, state ) {\n\n Again: while(true) {\n\n  if( typeof( f ) == 'function' ) {\n    state.ready = true;\n    return f(args,state);\n\n  } else if( f instanceof Lambda ) {\n\n    if( f.compiled != false ) {\n      try {\n        state.ready = true;\n        return Apply(f,args.ListCopy() );\n      } catch( e ) {\n        if( e instanceof State ) {\n          args = e.obj; f = e.cc;\n          continue Again;\n        }\n        if(e!=theCannot) printLog(e instanceof Error?e.description:Str(e));\n      }\n    }\n\n    // map arguments to new env variables\n    state.env = new Env(f.env);\n\n    for( var vars = f.args, vals = args;\n         (vars instanceof Pair) && !isNil(vars);\n         vars = vars.cdr, vals = vals.cdr ) {\n      if( vars.car instanceof Symbol ) {\n        state.env[ vars.car.name ] = vals.car;\n      } else throw new Ex(\"lambda arg is not symbol\");\n    }\n    if( vars instanceof Symbol ) {\n      state.env[ vars.name ] = vals;\n    } else if( ! isNil(vars) ) throw new Ex(\"lambda args are not symbols\");\n\n    state.ready = false;\n    return f.body;\n\n  } else if( f instanceof Continuation ) {\n    state.ready = true;\n    state.cc = f.clone();\n    // continue - multiple values case...\n    if( state.cc.cont == continuePair ) {\n      while( !isNil(args.cdr) ) {\n        state.cc[state.cc.i++] = args.car;\n        args = args.cdr;\n      }\n    }\n    // if( state.cc == topCC ) { }\n    return args.car;\n\n  } else {\n    throw new Ex(\"call to non-function \" + ( f && f.Str ? f.Str() : f)\n                 + (trace ? \" with \"+args.Str() : ''));\n  }\n}}\n\nfunction continueDefine(state) {\n  state.env = this.env;\n  state.cc = this.cc;\n  if( this.define ) {\n    state.env[this.obj.name] = state.obj;\n  } else {\n    state.env.set( this.obj.name, state.obj );\n  }\n  state.ready = true;\n}\n\nfunction continueBegin(state) {\n  state.obj = this.obj.car;\n  state.env = this.env;\n  state.ready = false;\n  if( isNil(this.obj.cdr) ) {\n    state.cc = this.cc;\n  } else {\n    this.obj = this.obj.cdr;\n    state.cc = this;\n  }\n}\n\nfunction continueIf(state) {\n  state.obj = state.obj ? this.obj.car : this.obj.cdr.car;\n  state.env = this.env;\n  state.cc = this.cc;\n  state.ready = false;\n}\n\nfunction continueSyntax(state) {\n  state.env = this.env;\n  state.cc = this.cc;\n  state.ready = false;\n  if( trace ) printLog('rewrite: '+state.obj.Str());\n}\n\nfunction evalPair(state) {\n\n  if( isNil(this) ) throw new Ex('Scheme is not Lisp, cannot eval ()');\n\n  var f = (this.car instanceof Symbol) ? state.env.get(this.car.name) : null;\n\n  // lambda, (define (f ...) ...)\n\n  if( f == theLambda || (f == theDefine && (this.cdr.car instanceof Pair)) ) {\n\n    // get function arguments and body\n\n    var args, body;\n    if( f == theLambda ) {\n      args = this.cdr.car;\n      body = this.cdr.cdr;\n    } else {  // define\n      args = this.cdr.car.cdr;\n      body = this.cdr.cdr;\n    }\n\n    // create function object\n\n    state.obj = new Lambda( args,\n                            isNil(body.cdr) ? body.car :\n                            new Pair( getSymbol(\"begin\"), body ),\n                            state.env );\n\n    // define\n\n    if( f == theDefine ) {\n      state.env[ this.cdr.car.car.name ] = state.obj;\n    }\n\n    // OK, don't need to evaluate it any more\n\n    state.ready = true;\n\n  // define, set!\n\n  } else if( f == theDefine || f == theSet ) {\n\n    state.obj = this.cdr.cdr.car;\n    state.cc = new Continuation( this.cdr.car, state.env, state.cc, continueDefine );\n    state.cc.define = f == theDefine;\n    state.ready = false; // evaluate expression first\n\n  // begin\n\n  } else if( f == theBegin ) {\n\n    state.obj = this.cdr.car;\n   // if( state.env != TopEnv )\n   //   state.env = new Env(state.env);  // 2Do: that is wrong!!\n    if( ! isNil(this.cdr.cdr) ) {\n      state.cc = new Continuation( this.cdr.cdr, state.env, state.cc, continueBegin );\n    }\n    state.ready = false;\n\n  // quote\n\n  } else if( f == theQuote ) {\n    state.obj = this.cdr.car;\n    state.ready = true;\n\n  // if\n\n  } else if( f == theIf ) {\n    state.obj = this.cdr.car;\n    state.cc = new Continuation( this.cdr.cdr, state.env, state.cc, continueIf );\n    state.ready = false;\n\n  // define-syntax\n\n  } else if( f == theDefineSyntax ) {\n\n    state.env[ (state.obj = this.cdr.car).name ] = new Syntax(\n      state.env.get(this.cdr.cdr.car.car.name), this.cdr.cdr.car.cdr );\n    state.ready = true;\n\n  // Syntax...\n\n  } else if( f instanceof Syntax ) {\n\n    state.cc = new Continuation( null, state.env, state.cc, continueSyntax );\n    state.obj = callF( f.transformer, new Pair(state.obj, f.args), state );\n\n  // (...)\n\n  } else {\n    state.obj = this.car;\n    state.cc = new Continuation( this.cdr, state.env, state.cc, continuePair );\n    state.ready = false;\n  }\n}\n\nNil.prototype.Eval = evalTrue;\nBoolean.prototype.Eval = evalTrue;\nChar.prototype.Eval = evalTrue;\nNumber.prototype.Eval = evalTrue;\nPair.prototype.Eval = evalPair;\nString.prototype.Eval = evalTrue;\nSymbol.prototype.Eval = evalVar;\nLambda.prototype.Eval = evalTrue;\nArray.prototype.Eval = evalTrue;\nContinuation.prototype.Eval = evalTrue;\nEx.prototype.Eval = evalTrue;\nFunction.prototype.Eval = evalTrue; // 2Do: throw Ex??\n\n//\n// Syntax transformers...\n//\n\nfunction Syntax( transformer, args ) {\n  this.transformer = transformer;\n  this.args = args;\n}\n\nSyntax.prototype.Eval = evalTrue;\nSyntax.prototype.Html = dumbHtml;\nSyntax.prototype.Str = function() { return '#syntax'; }\n\n// syntax keywords\n\nTopEnv['begin'] = theBegin = getSymbol('begin');\nTopEnv['quote'] = theQuote = getSymbol('quote');\nTopEnv['if'] = theIf = getSymbol('if');\nTopEnv['define'] = theDefine = getSymbol('define');\nTopEnv['set!'] = theSet = getSymbol('set!');\nTopEnv['lambda'] = theLambda = getSymbol('lambda');\nTopEnv['define-syntax'] = theDefineSyntax = getSymbol('define-syntax');\nTopEnv['unquote'] = getSymbol('unquote');\nTopEnv['unquote-splicing'] = getSymbol('unquote-splicing');\n\n//\n// Built-in functions\n//\n\nTopEnv['+'] = function(list) {\n  var result = 0;\n  while( list instanceof Pair ) {\n    if( typeof(list.car)=='number' ) result += list.car;\n    list = list.cdr;\n  }\n  return result;\n}\n\nTopEnv['*'] = function(list) {\n  var result = 1;\n  while( ! isNil(list) ) {\n    result *= list.car.valueOf();\n    list = list.cdr;\n  }\n  return result;\n}\n\nTopEnv['-'] = function(list) {\n  var result = 0, count = 0;\n  while( ! isNil(list) ) {\n    var o = list.car.valueOf();\n    result += (count++ > 0 ? -o : o);\n    list = list.cdr;\n  }\n  return count > 1 ? result : -result;\n}\n\nTopEnv['/'] = function(list) {\n  var result = 1, count = 0;\n  while( ! isNil(list) ) {\n    var o = list.car.valueOf();\n    result *= (count++ > 0 ? 1/o : o);\n    list = list.cdr;\n  }\n  return count > 1 ? result : 1/result;\n}\n\nTopEnv['string-append'] = function(list) {\n  var result = '';\n  while( ! isNil(list) ) {\n    result += list.car;\n    list = list.cdr;\n  }\n  return result;\n}\n\nTopEnv['string'] = function(list) {\n  var result = '';\n  while( ! isNil(list) ) {\n    result += list.car.value;\n    list = list.cdr;\n  }\n  return result;\n}\n\nTopEnv['vector'] = function(list) {\n  var result = new Array();\n  while( ! isNil(list) ) {\n    result[result.length] = list.car;\n    list = list.cdr;\n  }\n  return result;\n}\n\nTopEnv['string->list'] = function(list) {\n  var i, result = theNil;\n  for( i = list.car.length-1; i >= 0; --i ) {\n    result = new Pair( getChar(list.car.charAt(i)), result );\n  }\n  return result;\n}\n\n// fixed arguments\n\nTopEnv['car'] = function(list) { return list.car.car; }\nTopEnv['cdr'] = function(list) { return list.car.cdr; }\nTopEnv['cons'] = function(list) { return new Pair(list.car,list.cdr.car); }\n\nTopEnv['eval'] = function(list) { return doEval(list.car); }\nTopEnv['string->symbol'] = function(list) { return getSymbol(list.car,true); }\nTopEnv['symbol->string'] = function(list) { return list.car.name; }\n\nTopEnv['encode'] = function(list) { return encodeURIComponent(list.car); }\n\nfunction truncate(x) {\n  return x > 0 ? Math.floor(x) : Math.ceil(x);\n}\n\nTopEnv['ceiling'] = function(list) { return Math.ceil(list.car); }\nTopEnv['floor'] = function(list) { return Math.floor(list.car); }\nTopEnv['truncate'] = function(list) { return truncate(list.car); }\nTopEnv['sqrt'] = function(list) { return Math.sqrt(list.car); }\nTopEnv['exp'] = function(list) { return Math.exp(list.car); }\nTopEnv['expt'] = function(list) { return Math.pow(list.car,list.cdr.car); }\nTopEnv['log'] = function(list) { return Math.log(list.car); }\nTopEnv['sin'] = function(list) { return Math.sin(list.car); }\nTopEnv['cos'] = function(list) { return Math.cos(list.car); }\nTopEnv['asin'] = function(list) { return Math.asin(list.car); }\nTopEnv['acos'] = function(list) { return Math.acos(list.car); }\nTopEnv['tan'] = function(list) { return Math.tan(list.car); }\n\nTopEnv['atan'] = function(list) {\n  return isNil(list.cdr) ? Math.atan(list.car)\n                         : Math.atan2(list.car,list.cdr.car);\n}\n\nTopEnv['integer?'] = function(list) { return list.car == Math.round(list.car); }\nTopEnv['quotient'] = function(list) { return truncate(list.car / list.cdr.car); }\nTopEnv['remainder'] = function(list) { return list.car % list.cdr.car; }\nTopEnv['modulo'] = function(list) {\n  var v = list.car % list.cdr.car;\n  if( v && (list.car < 0) != (list.cdr.car < 0) ) v += list.cdr.car;\n  return v;\n}\nTopEnv['round'] = function(list) { return Math.round(list.car); }\n\nTopEnv['apply'] = function(list,state) {\n  var f = list.car, cur;\n  for( cur = list; !isNil(cur.cdr.cdr); cur = cur.cdr );\n  cur.cdr = cur.cdr.car;\n  return callF( list.car, list.cdr, state );\n}\n\nTopEnv['clone'] = function(list,state) {\n  return list.car.clone(state.env);\n}\n\nfunction isEq(a,b) { return a==b || isNil(a)&&isNil(b); }\n\nTopEnv['string=?'] =\nTopEnv['char=?'] =\nTopEnv['eqv?'] =\nTopEnv['='] =\nTopEnv['eq?'] = function(list) { return isEq(list.car,list.cdr.car); }\n\nTopEnv['substring'] = function(list) {\n  return list.car.substring( list.cdr.car, list.cdr.cdr.car );\n}\n\nTopEnv['string>?'] =\nTopEnv['>'] = function(list) { return list.car > list.cdr.car; }\nTopEnv['string<?'] =\nTopEnv['<'] = function(list) { return list.car < list.cdr.car; }\nTopEnv['string>=?'] =\nTopEnv['>='] = function(list) { return list.car >= list.cdr.car; }\nTopEnv['string<=?'] =\nTopEnv['<='] = function(list) { return list.car <= list.cdr.car; }\n\nTopEnv['char>?'] = function(list) { return list.car.value > list.cdr.car.value; }\nTopEnv['char<?'] = function(list) { return list.car.value < list.cdr.car.value; }\nTopEnv['char>=?'] = function(list) { return list.car.value >= list.cdr.car.value; }\nTopEnv['char<=?'] = function(list) { return list.car.value <= list.cdr.car.value; }\n\nTopEnv['char-downcase'] = function(list) { return getChar(list.car.value.toLowerCase()); }\nTopEnv['char-upcase'] = function(list) { return getChar(list.car.value.toUpperCase()); }\nTopEnv['string-downcase'] = function(list) { return list.car.toLowerCase(); }\nTopEnv['string-upcase'] = function(list) { return list.car.toUpperCase(); }\n\nTopEnv['char->integer'] = function(list) { return list.car.value.charCodeAt(0); }\nTopEnv['integer->char'] = function(list) {\n  return getChar( String.fromCharCode(list.car) );\n}\n\nTopEnv['make-string'] = function(list) {\n  var s = '', i;\n  for( i = 0; i < list.car; i++ ) {\n    s += list.cdr.car.value;\n  }\n  return s;\n}\nTopEnv['rnd'] = function(list) { return Math.random(); }\nTopEnv['string->number'] = function(list) {\n  return list.cdr.car ? parseInt(list.car,list.cdr.car) : parseFloat(list.car);\n}\nTopEnv['number->string'] = function(list) {\n  return list.cdr.car ? list.car.toString(list.cdr.car) : ''+list.car;\n}\n\nTopEnv['set-car!'] = function(list) { list.car.car = list.cdr.car; return list.car; }\nTopEnv['set-cdr!'] = function(list) { list.car.cdr = list.cdr.car; return list.car; }\n\nTopEnv['vector-length'] =\nTopEnv['string-length'] = function(list) { return list.car.length; }\n\nTopEnv['string-ref'] = function(list) {\n  return getChar(list.car.charAt(list.cdr.car));\n}\nTopEnv['get-prop'] =\nTopEnv['vector-ref'] = function(list) { return list.car[list.cdr.car]; }\nTopEnv['set-prop!'] =\nTopEnv['vector-set!'] = function(list) { list.car[list.cdr.car] = list.cdr.cdr.car; }\nTopEnv['make-vector'] = function(list) { var v = new Array(), i;\nfor( i=0; i<list.car; i++ ) v[i]=list.cdr.car; return v;\n}\n\nTopEnv['str'] = function(list) { return Str(list.car); }\nTopEnv['html'] = function(list) { return Html(list.car); }\n\n/* (alert \"a message\") */\nTopEnv['alert'] = function(list) {\n  alert(list.car);\n}\n\n/* (ajax-get url function) */\nTopEnv['ajax-get'] = function(list) {\n  $.get(list.car, function (xml) {\n    doEval (new Pair(list.cdr.car, new Pair(new Pair(theQuote, new\n    Pair(xml,theNil)), theNil)), true)\n  })\n}\n\n/* (set-timeout! handler timeout) */\nTopEnv['set-timeout!'] = function(list) {\n  setTimeout(function () {\n    doEval (new Pair(list.car, theNil), true);\n  }, list.cdr.car)\n}\n\n/* (set-handler! object name handler) */\nTopEnv['set-handler!'] = function(list) {\n  list.car[list.cdr.car] = function() {\n    doEval( new Pair( list.cdr.cdr.car,\n            new Pair( new Pair( theQuote,\n                      new Pair( this, theNil )), theNil)), true);\n  }\n}\nTopEnv['list-props'] = function(list) {\n  var r = theNil, i;\n  for( i in list.car ) r = new Pair(i,r);\n  return r;\n}\nTopEnv['parse'] = function(list) {\n  var r = theNil, c = r, p = new Parser(list.car), o;\n  while( (o = p.getObject()) != null ) {\n    o = new Pair(o, theNil );\n    if( r == theNil ) r = o; else c.cdr = o;\n    c = o;\n  }\n  return r;\n}\nTopEnv['type-of'] = function(list) { return objType(list.car); }\nTopEnv['js-call'] = function(list) {\n  if( isNil( list.cdr ) ) {\n    return list.car();\n  } else if( isNil( list.cdr.cdr ) ) {\n    return list.car( list.cdr.car );\n  } else if( isNil( list.cdr.cdr.cdr ) ) {\n    return list.car( list.cdr.car, list.cdr.cdr.car );\n  } else {\n    return list.car( list.cdr.car, list.cdr.cdr.car, list.cdr.cdr.cdr.car );\n  }\n}\nTopEnv['js-invoke'] = function(list) {\n  if( isNil( list.cdr.cdr ) ) {\n    return list.car[list.cdr.car]();\n  } else if( isNil( list.cdr.cdr.cdr ) ) {\n    return list.car[list.cdr.car]( list.cdr.cdr.car );\n  } else if( isNil( list.cdr.cdr.cdr.cdr ) ) {\n    return list.car[list.cdr.car]( list.cdr.cdr.car, list.cdr.cdr.cdr.car );\n  } else {\n    return list.car[list.cdr.car]( list.cdr.cdr.car, list.cdr.cdr.cdr.car, list.cdr.cdr.cdr.cdr.car );\n  }\n}\n\nfunction isPair(x) { return (x instanceof Pair) && !isNil(x); }\nTopEnv['pair?'] = function(list) { return isPair(list.car); }\n\nTopEnv['boolean?'] = function(list) { return typeof(list.car)=='boolean'; }\nTopEnv['string?'] = function(list) { return typeof(list.car)=='string'; }\nTopEnv['number?'] = function(list) { return typeof(list.car)=='number'; }\nTopEnv['null?'] = function(list) { return isNil(list.car); }\nTopEnv['symbol?'] = function(list) { return list.car instanceof Symbol; }\nTopEnv['syntax?'] = function(list) { return list.car instanceof Syntax; }\nTopEnv['char?'] = function(list) { return list.car instanceof Char; }\nTopEnv['vector?'] = function(list) { return list.car instanceof Array; }\nTopEnv['procedure?'] = function(list) {\n  return list.car instanceof Function ||\n         list.car instanceof Lambda ||\n         list.car instanceof Continuation;\n}\nTopEnv['lambda?'] = function(list) { return list.car instanceof Lambda; }\nTopEnv['function?'] = function(list) { return list.car instanceof Function; }\nTopEnv['continuation?'] = function(list) { return list.car instanceof Continuation; }\n\nTopEnv['js-eval'] = function(list) { return eval(list.car); }\nTopEnv['error'] = function(list) { throw new Ex(list.car); }\n\nTopEnv['trace'] = function(list) { trace = list.car.valueOf(); }\nTopEnv['read'] = function(list) { return TopParser.getObject(); }\nTopEnv['write'] = function(list) {\n  consoleBuffer += list.car.Str()+\"\\n\"; }\nTopEnv['newline'] = function(list) { consoleBuffer += \"\\n\"; }\nTopEnv['write-char'] =\nTopEnv['display'] = function(list) {\n  consoleBuffer += (list.car instanceof Char) ? list.car.value :\n           ((typeof(list.car)=='string') ? list.car : Str(list.car));\n}\n\nTopEnv['eof-object?'] =\nTopEnv['js-null?'] = function(list) { return list.car == null; }\n\ntheCallCC =\nTopEnv['call-with-current-continuation'] = function(list,state) {\n  state.ready = false;\n  return callF( list.car, new Pair( state.cc.clone(), theNil ), state );\n}\n\nvar genSymBase = 0;\nTopEnv['gen-sym'] = function() { return getSymbol('_'+(genSymBase++)+'_'); }\n\n//\n// Read-Eval-Print-Loop\n//\nvar consoleBuffer = \"\";\nfunction clickEval(txt) {\n  init();\n  var o, res = null,time0=new Date();\n  TopParser = new Parser( txt );\n  var results = [];\n  var outputs = [];\n  while( ( o = TopParser.getObject() ) != null ) {\n    consoleBuffer = \"\";\n    o = doEval( o );\n    if(consoleBuffer != \"\") {\n      outputs.push(consoleBuffer);\n      continue;\n    }\n    if( o != null ) { \n      res = o; \n      if(o.Html ) results.push(o.Html()); else results.push('#obj<'+o+'>');\n    }\n  }\n\n  var time1 = new Date();\n  if(results.length == 0) return outputs.join(\"\\n\") + \"\";\n  if(outputs.length > 0 && $.trim(results[results.length-1]) == $.trim(outputs[outputs.length-1])) \n    return outputs.join(\"\\n\") + \"\";\n  return outputs.join(\"\\n\") + results[results.length-1]; \n}\n\nfunction showRes(res) {\n  if( res != null ) {\n    console.log(Html( res ));\n  }\n}\n\nfunction printLog(s,no) {\n  console.log(s+(no?'':\"\\n\"));\n}\n\n// Need to wrap alert as calling it from Scheme\n// in Firefox otherwise doesn't work\nfunction jsAlert(text) {\n  alert(text)\n}\n\n// Need to wrap settimeout as calling it from Scheme\n// in Firefox otherwise doesn't work\nfunction jsSetTimeout(f,t) {\n  setTimeout(f,t)\n}\n\nfunction init() {\n\n// Library begin\n\n/*\n  var o, p = new Parser( document.getElementById('lib').innerHTML );\n  while( (o = p.getObject()) != null ) {\n    doEval(o);\n  }\n*/\n\nvar e=TopEnv;\ne['call/cc']=e.get('call-with-current-continuation');\ne['list']=new Lambda(getSymbol('x'),getSymbol('x'),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list;r=e['x'];if(r!=theTC||r.f!=this)return r}});\ne['not']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('if'),new Pair(getSymbol('x'),new Pair(false,new Pair(true,theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=((e['x'])!=false?false:true);if(r!=theTC||r.f!=this)return r}});\ne['negative?']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('<'),new Pair(getSymbol('x'),new Pair(0,theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x']<0;if(r!=theTC||r.f!=this)return r}});\ne['positive?']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('>'),new Pair(getSymbol('x'),new Pair(0,theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x']>0;if(r!=theTC||r.f!=this)return r}});\ne['even?']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('='),new Pair(new Pair(getSymbol('remainder'),new Pair(getSymbol('x'),new Pair(2,theNil))),new Pair(0,theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=isEq(Apply(TopEnv.get('remainder'),new Pair(e['x'],new Pair(2,theNil))),0);if(r!=theTC||r.f!=this)return r}});\ne['odd?']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('even?'),new Pair(getSymbol('x'),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=(Apply(TopEnv.get('even?'),new Pair(e['x'],theNil))==false);if(r!=theTC||r.f!=this)return r}});\ne['zero?']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('='),new Pair(getSymbol('x'),new Pair(0,theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=isEq(e['x'],0);if(r!=theTC||r.f!=this)return r}});\ne['abs']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('<'),new Pair(getSymbol('x'),new Pair(0,theNil))),new Pair(new Pair(getSymbol('-'),new Pair(getSymbol('x'),theNil)),new Pair(getSymbol('x'),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=((e['x']<0)!=false?(-e['x']):e['x']);if(r!=theTC||r.f!=this)return r}});\ne['magnitude']=e.get('abs');\ne['exact?']=e.get('integer?');\ne['inexact?']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('exact?'),new Pair(getSymbol('x'),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=(Apply(TopEnv.get('exact?'),new Pair(e['x'],theNil))==false);if(r!=theTC||r.f!=this)return r}});\ne['random']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('floor'),new Pair(new Pair(getSymbol('*'),new Pair(new Pair(getSymbol('rnd'),theNil),new Pair(getSymbol('x'),theNil))),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=TC(TopEnv.get('floor'),list=new Pair((Apply(TopEnv.get('rnd'),theNil)*e['x']),theNil));if(r!=theTC||r.f!=this)return r}});\ne['char-ci=?']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil)),new Pair(getSymbol('char=?'),new Pair(new Pair(getSymbol('char-downcase'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('char-downcase'),new Pair(getSymbol('y'),theNil)),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['y']=list.cdr.car;r=isEq(Apply(TopEnv.get('char-downcase'),new Pair(e['x'],theNil)),Apply(TopEnv.get('char-downcase'),new Pair(e['y'],theNil)));if(r!=theTC||r.f!=this)return r}});\ne['char-ci>?']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil)),new Pair(getSymbol('char>?'),new Pair(new Pair(getSymbol('char-downcase'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('char-downcase'),new Pair(getSymbol('y'),theNil)),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['y']=list.cdr.car;r=TC(TopEnv.get('char>?'),list=new Pair(Apply(TopEnv.get('char-downcase'),new Pair(e['x'],theNil)),new Pair(Apply(TopEnv.get('char-downcase'),new Pair(e['y'],theNil)),theNil)));if(r!=theTC||r.f!=this)return r}});\ne['char-ci<?']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil)),new Pair(getSymbol('char<?'),new Pair(new Pair(getSymbol('char-downcase'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('char-downcase'),new Pair(getSymbol('y'),theNil)),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['y']=list.cdr.car;r=TC(TopEnv.get('char<?'),list=new Pair(Apply(TopEnv.get('char-downcase'),new Pair(e['x'],theNil)),new Pair(Apply(TopEnv.get('char-downcase'),new Pair(e['y'],theNil)),theNil)));if(r!=theTC||r.f!=this)return r}});\ne['char-ci>=?']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil)),new Pair(getSymbol('char>=?'),new Pair(new Pair(getSymbol('char-downcase'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('char-downcase'),new Pair(getSymbol('y'),theNil)),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['y']=list.cdr.car;r=TC(TopEnv.get('char>=?'),list=new Pair(Apply(TopEnv.get('char-downcase'),new Pair(e['x'],theNil)),new Pair(Apply(TopEnv.get('char-downcase'),new Pair(e['y'],theNil)),theNil)));if(r!=theTC||r.f!=this)return r}});\ne['char-ci<=?']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil)),new Pair(getSymbol('char<=?'),new Pair(new Pair(getSymbol('char-downcase'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('char-downcase'),new Pair(getSymbol('y'),theNil)),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['y']=list.cdr.car;r=TC(TopEnv.get('char<=?'),list=new Pair(Apply(TopEnv.get('char-downcase'),new Pair(e['x'],theNil)),new Pair(Apply(TopEnv.get('char-downcase'),new Pair(e['y'],theNil)),theNil)));if(r!=theTC||r.f!=this)return r}});\ne['char-lower-case?']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('char=?'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('char-downcase'),new Pair(getSymbol('x'),theNil)),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=isEq(e['x'],Apply(TopEnv.get('char-downcase'),new Pair(e['x'],theNil)));if(r!=theTC||r.f!=this)return r}});\ne['char-upper-case?']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('char=?'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('char-upcase'),new Pair(getSymbol('x'),theNil)),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=isEq(e['x'],Apply(TopEnv.get('char-upcase'),new Pair(e['x'],theNil)));if(r!=theTC||r.f!=this)return r}});\ne['char-alphabetic?']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('char-ci>=?'),new Pair(getSymbol('x'),new Pair(getChar('a'),theNil))),new Pair(new Pair(getSymbol('char-ci<=?'),new Pair(getSymbol('x'),new Pair(getChar('z'),theNil))),new Pair(false,theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=((Apply(TopEnv.get('char-ci>=?'),new Pair(e['x'],new Pair(getChar('a'),theNil))))!=false?TC(TopEnv.get('char-ci<=?'),list=new Pair(e['x'],new Pair(getChar('z'),theNil))):false);if(r!=theTC||r.f!=this)return r}});\ne['char-numeric?']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('char>=?'),new Pair(getSymbol('x'),new Pair(getChar('0'),theNil))),new Pair(new Pair(getSymbol('char<=?'),new Pair(getSymbol('x'),new Pair(getChar('9'),theNil))),new Pair(false,theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=((Apply(TopEnv.get('char>=?'),new Pair(e['x'],new Pair(getChar('0'),theNil))))!=false?TC(TopEnv.get('char<=?'),list=new Pair(e['x'],new Pair(getChar('9'),theNil))):false);if(r!=theTC||r.f!=this)return r}});\ne['char-whitespace?']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('char<=?'),new Pair(getSymbol('x'),new Pair(getChar(' '),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=TC(TopEnv.get('char<=?'),list=new Pair(e['x'],new Pair(getChar(' '),theNil)));if(r!=theTC||r.f!=this)return r}});\ne['string-ci=?']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil)),new Pair(getSymbol('string=?'),new Pair(new Pair(getSymbol('string-downcase'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('string-downcase'),new Pair(getSymbol('y'),theNil)),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['y']=list.cdr.car;r=isEq(Apply(TopEnv.get('string-downcase'),new Pair(e['x'],theNil)),Apply(TopEnv.get('string-downcase'),new Pair(e['y'],theNil)));if(r!=theTC||r.f!=this)return r}});\ne['string-ci>?']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil)),new Pair(getSymbol('string>?'),new Pair(new Pair(getSymbol('string-downcase'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('string-downcase'),new Pair(getSymbol('y'),theNil)),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['y']=list.cdr.car;r=TC(TopEnv.get('string>?'),list=new Pair(Apply(TopEnv.get('string-downcase'),new Pair(e['x'],theNil)),new Pair(Apply(TopEnv.get('string-downcase'),new Pair(e['y'],theNil)),theNil)));if(r!=theTC||r.f!=this)return r}});\ne['string-ci<?']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil)),new Pair(getSymbol('string<?'),new Pair(new Pair(getSymbol('string-downcase'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('string-downcase'),new Pair(getSymbol('y'),theNil)),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['y']=list.cdr.car;r=TC(TopEnv.get('string<?'),list=new Pair(Apply(TopEnv.get('string-downcase'),new Pair(e['x'],theNil)),new Pair(Apply(TopEnv.get('string-downcase'),new Pair(e['y'],theNil)),theNil)));if(r!=theTC||r.f!=this)return r}});\ne['string-ci>=?']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil)),new Pair(getSymbol('string>=?'),new Pair(new Pair(getSymbol('string-downcase'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('string-downcase'),new Pair(getSymbol('y'),theNil)),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['y']=list.cdr.car;r=TC(TopEnv.get('string>=?'),list=new Pair(Apply(TopEnv.get('string-downcase'),new Pair(e['x'],theNil)),new Pair(Apply(TopEnv.get('string-downcase'),new Pair(e['y'],theNil)),theNil)));if(r!=theTC||r.f!=this)return r}});\ne['string-ci<=?']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil)),new Pair(getSymbol('string<=?'),new Pair(new Pair(getSymbol('string-downcase'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('string-downcase'),new Pair(getSymbol('y'),theNil)),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['y']=list.cdr.car;r=TC(TopEnv.get('string<=?'),list=new Pair(Apply(TopEnv.get('string-downcase'),new Pair(e['x'],theNil)),new Pair(Apply(TopEnv.get('string-downcase'),new Pair(e['y'],theNil)),theNil)));if(r!=theTC||r.f!=this)return r}});\ne['map']=new Lambda(new Pair(getSymbol('f'),new Pair(getSymbol('ls'),getSymbol('more'))),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('map1'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_8_'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('map-more'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_9_'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('more'),theNil)),new Pair(new Pair(getSymbol('map1'),new Pair(getSymbol('ls'),theNil)),new Pair(new Pair(getSymbol('map-more'),new Pair(getSymbol('ls'),new Pair(getSymbol('more'),theNil))),theNil)))),theNil)))),new Env(e).With('_8_',new Lambda(new Pair(getSymbol('l'),theNil),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('l'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('l'),theNil)),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('f'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('l'),theNil)),theNil)),new Pair(new Pair(getSymbol('map1'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('l'),theNil)),theNil)),theNil))),new Pair(new Pair(getSymbol('f'),new Pair(getSymbol('l'),theNil)),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['l']=list.car;r=(((e['l']==theNil))!=false?theNil:((((e['l'])instanceof Pair))!=false?new Pair(Apply(e.parentEnv['f'],new Pair(e['l'].car,theNil)),Apply(e.parentEnv['map1'],new Pair(e['l'].cdr,theNil))):TC(e.parentEnv['f'],list=new Pair(e['l'],theNil))));if(r!=theTC||r.f!=this)return r}})).With('_9_',new Lambda(new Pair(getSymbol('l'),new Pair(getSymbol('m'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('l'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('l'),theNil)),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('apply'),new Pair(getSymbol('f'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('l'),theNil)),new Pair(new Pair(getSymbol('map'),new Pair(getSymbol('car'),new Pair(getSymbol('m'),theNil))),theNil)))),new Pair(new Pair(getSymbol('map-more'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('l'),theNil)),new Pair(new Pair(getSymbol('map'),new Pair(getSymbol('cdr'),new Pair(getSymbol('m'),theNil))),theNil))),theNil))),new Pair(new Pair(getSymbol('apply'),new Pair(getSymbol('f'),new Pair(getSymbol('l'),new Pair(getSymbol('m'),theNil)))),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['l']=list.car;e['m']=list.cdr.car;r=(((e['l']==theNil))!=false?theNil:((((e['l'])instanceof Pair))!=false?new Pair(Apply(e.parentEnv['f'],new Pair(e['l'].car,Apply(TopEnv.get('map'),new Pair(TopEnv.get('car'),new Pair(e['m'],theNil))).ListCopy())),Apply(e.parentEnv['map-more'],new Pair(e['l'].cdr,new Pair(Apply(TopEnv.get('map'),new Pair(TopEnv.get('cdr'),new Pair(e['m'],theNil))),theNil)))):TC(e.parentEnv['f'],list=new Pair(e['l'],e['m'].ListCopy()))));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['f']=list.car;e['ls']=list.cdr.car;e['more']=list.cdr.cdr;r=(e['map1']=e.parentEnv['_8_'].clone(e),e['map-more']=e.parentEnv['_9_'].clone(e),(((e['more']==theNil))!=false?TC(e['map1'],list=new Pair(e['ls'],theNil)):TC(e['map-more'],list=new Pair(e['ls'],new Pair(e['more'],theNil)))));if(r!=theTC||r.f!=this)return r}});\ne['map+']=new Lambda(new Pair(getSymbol('f'),getSymbol('lst')),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('r'),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('o'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('p'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('map-lst'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_10_'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('do-map'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_11_'),theNil)),theNil))),new Pair(new Pair(getSymbol('do-map'),theNil),new Pair(getSymbol('r'),theNil)))))))),new Env(e).With('_10_',new Lambda(new Pair(getSymbol('op'),new Pair(getSymbol('l'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('l'),theNil)),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('op'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('l'),theNil)),theNil)),new Pair(new Pair(getSymbol('map-lst'),new Pair(getSymbol('op'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('l'),theNil)),theNil))),theNil))),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['op']=list.car;e['l']=list.cdr.car;r=((((e['l'])instanceof Pair))!=false?new Pair(Apply(e['op'],new Pair(e['l'].car,theNil)),Apply(e.parentEnv['map-lst'],new Pair(e['op'],new Pair(e['l'].cdr,theNil)))):theNil);if(r!=theTC||r.f!=this)return r}})).With('_11_',new Lambda(theNil,new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil)),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('o'),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('apply'),new Pair(getSymbol('f'),new Pair(new Pair(getSymbol('map'),new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil))),theNil))),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),theNil))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('r'),theNil)),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('r'),new Pair(getSymbol('o'),theNil))),new Pair(new Pair(getSymbol('set-cdr!'),new Pair(getSymbol('p'),new Pair(getSymbol('o'),theNil))),theNil)))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('p'),new Pair(getSymbol('o'),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('lst'),new Pair(new Pair(getSymbol('map'),new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil))),theNil))),new Pair(new Pair(getSymbol('do-map'),theNil),theNil)))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil)),theNil)),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('p'),new Pair(new Pair(getSymbol('set-cdr!'),new Pair(getSymbol('p'),new Pair(new Pair(getSymbol('apply'),new Pair(getSymbol('f'),new Pair(getSymbol('lst'),theNil))),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('r'),new Pair(new Pair(getSymbol('apply'),new Pair(getSymbol('f'),new Pair(getSymbol('lst'),theNil))),theNil))),theNil)))),theNil))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){r=((((e.parentEnv['lst'].car)instanceof Pair))!=false?(e.set('o',new Pair(Apply(e.parentEnv['f'],Apply(TopEnv.get('map'),new Pair(TopEnv.get('car'),new Pair(e.parentEnv['lst'],theNil))).ListCopy()),theNil)),(((e.parentEnv['r']==theNil))!=false?e.set('r',e.parentEnv['o']):Apply(TopEnv.get('set-cdr!'),new Pair(e.parentEnv['p'],new Pair(e.parentEnv['o'],theNil)))),e.set('p',e.parentEnv['o']),e.set('lst',Apply(TopEnv.get('map'),new Pair(TopEnv.get('cdr'),new Pair(e.parentEnv['lst'],theNil)))),TC(e.parentEnv['do-map'],list=theNil)):((((e.parentEnv['lst'].car==theNil)==false))!=false?((e.parentEnv['p'])!=false?TC(TopEnv.get('set-cdr!'),list=new Pair(e.parentEnv['p'],new Pair(Apply(e.parentEnv['f'],e.parentEnv['lst'].ListCopy()),theNil))):e.set('r',Apply(e.parentEnv['f'],e.parentEnv['lst'].ListCopy()))):null));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['f']=list.car;e['lst']=list.cdr;r=(e['r']=theNil,e['o']=false,e['p']=false,e['map-lst']=e.parentEnv['_10_'].clone(e),e['do-map']=e.parentEnv['_11_'].clone(e),Apply(e['do-map'],theNil),e['r']);if(r!=theTC||r.f!=this)return r}});\ne['caar']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('car'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('x'),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'].car.car;if(r!=theTC||r.f!=this)return r}});\ne['cadr']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('car'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'].cdr.car;if(r!=theTC||r.f!=this)return r}});\ne['cdar']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('x'),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'].car.cdr;if(r!=theTC||r.f!=this)return r}});\ne['cddr']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'].cdr.cdr;if(r!=theTC||r.f!=this)return r}});\ne['caaar']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('car'),new Pair(new Pair(getSymbol('car'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('x'),theNil)),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'].car.car.car;if(r!=theTC||r.f!=this)return r}});\ne['caadr']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('car'),new Pair(new Pair(getSymbol('car'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'].cdr.car.car;if(r!=theTC||r.f!=this)return r}});\ne['cadar']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('car'),new Pair(new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('x'),theNil)),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'].car.cdr.car;if(r!=theTC||r.f!=this)return r}});\ne['caddr']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('car'),new Pair(new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'].cdr.cdr.car;if(r!=theTC||r.f!=this)return r}});\ne['cdaar']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('car'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('x'),theNil)),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'].car.car.cdr;if(r!=theTC||r.f!=this)return r}});\ne['cdadr']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('car'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'].cdr.car.cdr;if(r!=theTC||r.f!=this)return r}});\ne['cddar']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('x'),theNil)),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'].car.cdr.cdr;if(r!=theTC||r.f!=this)return r}});\ne['cdddr']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'].cdr.cdr.cdr;if(r!=theTC||r.f!=this)return r}});\ne['caaddr']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('car'),new Pair(new Pair(getSymbol('car'),new Pair(new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),theNil)),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'].cdr.cdr.car.car;if(r!=theTC||r.f!=this)return r}});\ne['cadddr']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('car'),new Pair(new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),theNil)),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'].cdr.cdr.cdr.car;if(r!=theTC||r.f!=this)return r}});\ne['cdaddr']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('car'),new Pair(new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),theNil)),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'].cdr.cdr.car.cdr;if(r!=theTC||r.f!=this)return r}});\ne['cddddr']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('cdr'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),theNil)),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'].cdr.cdr.cdr.cdr;if(r!=theTC||r.f!=this)return r}});\ne['length']=new Lambda(new Pair(getSymbol('lst'),getSymbol('x')),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('l'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('x'),theNil)),new Pair(0,new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('x'),theNil)),theNil)))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('lst'),theNil)),new Pair(new Pair(getSymbol('length'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),new Pair(new Pair(getSymbol('+'),new Pair(getSymbol('l'),new Pair(1,theNil))),theNil))),new Pair(getSymbol('l'),theNil)))),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['lst']=list.car;e['x']=list.cdr;r=(e['l']=(((e['x']==theNil))!=false?0:e['x'].car),((((e['lst'])instanceof Pair))!=false?TC(TopEnv.get('length'),list=new Pair(e['lst'].cdr,new Pair((e['l']+1),theNil))):e['l']));if(r!=theTC||r.f!=this)return r}});\ne['length+']=new Lambda(new Pair(getSymbol('lst'),getSymbol('x')),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('l'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('x'),theNil)),new Pair(0,new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('x'),theNil)),theNil)))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('l'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('lst'),theNil)),new Pair(new Pair(getSymbol('length+'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),new Pair(new Pair(getSymbol('+'),new Pair(getSymbol('l'),new Pair(1,theNil))),theNil))),new Pair(new Pair(getSymbol('+'),new Pair(getSymbol('l'),new Pair(1,theNil))),theNil)))),theNil)))),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['lst']=list.car;e['x']=list.cdr;r=(e['l']=(((e['x']==theNil))!=false?0:e['x'].car),(((e['lst']==theNil))!=false?e['l']:((((e['lst'])instanceof Pair))!=false?TC(TopEnv.get('length+'),list=new Pair(e['lst'].cdr,new Pair((e['l']+1),theNil))):(e['l']+1))));if(r!=theTC||r.f!=this)return r}});\ne['list-ref']=new Lambda(new Pair(getSymbol('lst'),new Pair(getSymbol('n'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('='),new Pair(getSymbol('n'),new Pair(0,theNil))),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil)),new Pair(new Pair(getSymbol('list-ref'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),new Pair(new Pair(getSymbol('-'),new Pair(getSymbol('n'),new Pair(1,theNil))),theNil))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['lst']=list.car;e['n']=list.cdr.car;r=((isEq(e['n'],0))!=false?e['lst'].car:TC(TopEnv.get('list-ref'),list=new Pair(e['lst'].cdr,new Pair((e['n']-1),theNil))));if(r!=theTC||r.f!=this)return r}});\ne['list-tail']=new Lambda(new Pair(getSymbol('lst'),new Pair(getSymbol('n'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('='),new Pair(getSymbol('n'),new Pair(0,theNil))),new Pair(getSymbol('lst'),new Pair(new Pair(getSymbol('list-tail'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),new Pair(new Pair(getSymbol('-'),new Pair(getSymbol('n'),new Pair(1,theNil))),theNil))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['lst']=list.car;e['n']=list.cdr.car;r=((isEq(e['n'],0))!=false?e['lst']:TC(TopEnv.get('list-tail'),list=new Pair(e['lst'].cdr,new Pair((e['n']-1),theNil))));if(r!=theTC||r.f!=this)return r}});\ne['reverse']=new Lambda(new Pair(getSymbol('lst'),getSymbol('l2')),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('r'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('l2'),theNil)),new Pair(getSymbol('l2'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('l2'),theNil)),theNil)))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('r'),new Pair(new Pair(getSymbol('reverse'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('r'),theNil))),theNil))),theNil)))),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['lst']=list.car;e['l2']=list.cdr;r=(e['r']=(((e['l2']==theNil))!=false?e['l2']:e['l2'].car),(((e['lst']==theNil))!=false?e['r']:TC(TopEnv.get('reverse'),list=new Pair(e['lst'].cdr,new Pair(new Pair(e['lst'].car,e['r']),theNil)))));if(r!=theTC||r.f!=this)return r}});\ne['append']=new Lambda(new Pair(getSymbol('l1'),getSymbol('more')),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('more'),theNil)),new Pair(getSymbol('l1'),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('l2'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('more'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('m2'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('more'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('l1'),theNil)),new Pair(new Pair(getSymbol('apply'),new Pair(getSymbol('append'),new Pair(getSymbol('l2'),new Pair(getSymbol('m2'),theNil)))),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('l1'),theNil)),new Pair(new Pair(getSymbol('apply'),new Pair(getSymbol('append'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('l1'),theNil)),new Pair(getSymbol('l2'),new Pair(getSymbol('m2'),theNil))))),theNil))),theNil)))),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['l1']=list.car;e['more']=list.cdr;r=(((e['more']==theNil))!=false?e['l1']:(e['l2']=e['more'].car,e['m2']=e['more'].cdr,(((e['l1']==theNil))!=false?TC(TopEnv.get('append'),list=new Pair(e['l2'],e['m2'].ListCopy())):new Pair(e['l1'].car,Apply(TopEnv.get('append'),new Pair(e['l1'].cdr,new Pair(e['l2'],e['m2'].ListCopy())))))));if(r!=theTC||r.f!=this)return r}});\ne['sort']=false;\ne['merge']=false;\nApply(new Lambda(theNil,new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('dosort'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_12_'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('domerge'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_13_'),theNil)),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('sort'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_14_'),theNil)),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('merge'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_15_'),theNil)),theNil))),theNil))))),new Env(e).With('_12_',new Lambda(new Pair(getSymbol('pred?'),new Pair(getSymbol('ls'),new Pair(getSymbol('n'),theNil))),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('='),new Pair(getSymbol('n'),new Pair(1,theNil))),new Pair(new Pair(getSymbol('list'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ls'),theNil)),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('='),new Pair(getSymbol('n'),new Pair(2,theNil))),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ls'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('y'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ls'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pred?'),new Pair(getSymbol('y'),new Pair(getSymbol('x'),theNil))),new Pair(new Pair(getSymbol('list'),new Pair(getSymbol('y'),new Pair(getSymbol('x'),theNil))),new Pair(new Pair(getSymbol('list'),new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil))),theNil)))),theNil)))),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('i'),new Pair(new Pair(getSymbol('quotient'),new Pair(getSymbol('n'),new Pair(2,theNil))),theNil))),new Pair(new Pair(getSymbol('domerge'),new Pair(getSymbol('pred?'),new Pair(new Pair(getSymbol('dosort'),new Pair(getSymbol('pred?'),new Pair(getSymbol('ls'),new Pair(getSymbol('i'),theNil)))),new Pair(new Pair(getSymbol('dosort'),new Pair(getSymbol('pred?'),new Pair(new Pair(getSymbol('list-tail'),new Pair(getSymbol('ls'),new Pair(getSymbol('i'),theNil))),new Pair(new Pair(getSymbol('-'),new Pair(getSymbol('n'),new Pair(getSymbol('i'),theNil))),theNil)))),theNil)))),theNil))),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['pred?']=list.car;e['ls']=list.cdr.car;e['n']=list.cdr.cdr.car;r=((isEq(e['n'],1))!=false?new Pair(e['ls'].car,theNil):((isEq(e['n'],2))!=false?(e['x']=e['ls'].car,e['y']=e['ls'].cdr.car,((Apply(e['pred?'],new Pair(e['y'],new Pair(e['x'],theNil))))!=false?new Pair(e['y'],new Pair(e['x'],theNil)):new Pair(e['x'],new Pair(e['y'],theNil)))):(e['i']=Apply(TopEnv.get('quotient'),new Pair(e['n'],new Pair(2,theNil))),TC(e.parentEnv['domerge'],list=new Pair(e['pred?'],new Pair(Apply(e.parentEnv['dosort'],new Pair(e['pred?'],new Pair(e['ls'],new Pair(e['i'],theNil)))),new Pair(Apply(e.parentEnv['dosort'],new Pair(e['pred?'],new Pair(Apply(TopEnv.get('list-tail'),new Pair(e['ls'],new Pair(e['i'],theNil))),new Pair((e['n']-e['i']),theNil)))),theNil)))))));if(r!=theTC||r.f!=this)return r}})).With('_13_',new Lambda(new Pair(getSymbol('pred?'),new Pair(getSymbol('l1'),new Pair(getSymbol('l2'),theNil))),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('l1'),theNil)),new Pair(getSymbol('l2'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('l2'),theNil)),new Pair(getSymbol('l1'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pred?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('l2'),theNil)),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('l1'),theNil)),theNil))),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('l2'),theNil)),new Pair(new Pair(getSymbol('domerge'),new Pair(getSymbol('pred?'),new Pair(getSymbol('l1'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('l2'),theNil)),theNil)))),theNil))),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('l1'),theNil)),new Pair(new Pair(getSymbol('domerge'),new Pair(getSymbol('pred?'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('l1'),theNil)),new Pair(getSymbol('l2'),theNil)))),theNil))),theNil)))),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['pred?']=list.car;e['l1']=list.cdr.car;e['l2']=list.cdr.cdr.car;r=(((e['l1']==theNil))!=false?e['l2']:(((e['l2']==theNil))!=false?e['l1']:((Apply(e['pred?'],new Pair(e['l2'].car,new Pair(e['l1'].car,theNil))))!=false?new Pair(e['l2'].car,Apply(e.parentEnv['domerge'],new Pair(e['pred?'],new Pair(e['l1'],new Pair(e['l2'].cdr,theNil))))):new Pair(e['l1'].car,Apply(e.parentEnv['domerge'],new Pair(e['pred?'],new Pair(e['l1'].cdr,new Pair(e['l2'],theNil))))))));if(r!=theTC||r.f!=this)return r}})).With('_14_',new Lambda(new Pair(getSymbol('pred?'),new Pair(getSymbol('l'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('l'),theNil)),new Pair(getSymbol('l'),new Pair(new Pair(getSymbol('dosort'),new Pair(getSymbol('pred?'),new Pair(getSymbol('l'),new Pair(new Pair(getSymbol('length'),new Pair(getSymbol('l'),theNil)),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['pred?']=list.car;e['l']=list.cdr.car;r=(((e['l']==theNil))!=false?e['l']:TC(e.parentEnv['dosort'],list=new Pair(e['pred?'],new Pair(e['l'],new Pair(Apply(TopEnv.get('length'),new Pair(e['l'],theNil)),theNil)))));if(r!=theTC||r.f!=this)return r}})).With('_15_',new Lambda(new Pair(getSymbol('pred?'),new Pair(getSymbol('l1'),new Pair(getSymbol('l2'),theNil))),new Pair(getSymbol('domerge'),new Pair(getSymbol('pred?'),new Pair(getSymbol('l1'),new Pair(getSymbol('l2'),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['pred?']=list.car;e['l1']=list.cdr.car;e['l2']=list.cdr.cdr.car;r=TC(e.parentEnv['domerge'],list=new Pair(e['pred?'],new Pair(e['l1'],new Pair(e['l2'],theNil))));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){r=(e['dosort']=e.parentEnv['_12_'].clone(e),e['domerge']=e.parentEnv['_13_'].clone(e),e.set('sort',e.parentEnv['_14_'].clone(e)),e.set('merge',e.parentEnv['_15_'].clone(e)));if(r!=theTC||r.f!=this)return r}}),theNil);\ne['iota']=new Lambda(new Pair(getSymbol('count'),getSymbol('x')),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('start'),new Pair(0,theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('step'),new Pair(1,theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('x'),theNil)),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('start'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('x'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),theNil)),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('step'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('x'),theNil)),theNil))),theNil)),theNil))),theNil))),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('do-step'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_16_'),theNil)),theNil))),new Pair(new Pair(getSymbol('do-step'),new Pair(new Pair(getSymbol('-'),new Pair(getSymbol('count'),new Pair(1,theNil))),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),theNil))),theNil)))))),new Env(e).With('_16_',new Lambda(new Pair(getSymbol('cnt'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('<'),new Pair(getSymbol('cnt'),new Pair(0,theNil))),new Pair(getSymbol('lst'),new Pair(new Pair(getSymbol('do-step'),new Pair(new Pair(getSymbol('-'),new Pair(getSymbol('cnt'),new Pair(1,theNil))),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('+'),new Pair(new Pair(getSymbol('*'),new Pair(getSymbol('step'),new Pair(getSymbol('cnt'),theNil))),new Pair(getSymbol('start'),theNil))),new Pair(getSymbol('lst'),theNil))),theNil))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['cnt']=list.car;e['lst']=list.cdr.car;r=((e['cnt']<0)!=false?e['lst']:TC(e.parentEnv['do-step'],list=new Pair((e['cnt']-1),new Pair(new Pair(((e.parentEnv['step']*e['cnt'])+e.parentEnv['start']),e['lst']),theNil))));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['count']=list.car;e['x']=list.cdr;r=(e['start']=0,e['step']=1,((((e['x']==theNil)==false))!=false?(e['start']=e['x'].car,((((e['x'].cdr==theNil)==false))!=false?e['step']=e['x'].cdr.car:null)):null),e['do-step']=e.parentEnv['_16_'].clone(e),TC(e['do-step'],list=new Pair((e['count']-1),new Pair(theNil,theNil))));if(r!=theTC||r.f!=this)return r}});\ne['list->string']=new Lambda(new Pair(getSymbol('lst'),theNil),new Pair(getSymbol('apply'),new Pair(getSymbol('string'),new Pair(getSymbol('lst'),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['lst']=list.car;r=TC(TopEnv.get('string'),list=e['lst'].ListCopy());if(r!=theTC||r.f!=this)return r}});\ne['gcd']=new Lambda(new Pair(getSymbol('a'),new Pair(getSymbol('b'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('='),new Pair(getSymbol('b'),new Pair(0,theNil))),new Pair(getSymbol('a'),new Pair(new Pair(getSymbol('gcd'),new Pair(getSymbol('b'),new Pair(new Pair(getSymbol('remainder'),new Pair(getSymbol('a'),new Pair(getSymbol('b'),theNil))),theNil))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['a']=list.car;e['b']=list.cdr.car;r=((isEq(e['b'],0))!=false?e['a']:TC(TopEnv.get('gcd'),list=new Pair(e['b'],new Pair(Apply(TopEnv.get('remainder'),new Pair(e['a'],new Pair(e['b'],theNil))),theNil))));if(r!=theTC||r.f!=this)return r}});\ne['lcm']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil)),new Pair(getSymbol('/'),new Pair(new Pair(getSymbol('*'),new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil))),new Pair(new Pair(getSymbol('gcd'),new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil))),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['y']=list.cdr.car;r=((e['x']*e['y'])/Apply(TopEnv.get('gcd'),new Pair(e['x'],new Pair(e['y'],theNil))));if(r!=theTC||r.f!=this)return r}});\ne['max']=new Lambda(new Pair(getSymbol('x'),getSymbol('l')),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('l'),theNil)),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('apply'),new Pair(getSymbol('max'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('>'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('l'),theNil)),theNil))),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('l'),theNil)),theNil)))),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('l'),theNil)),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['l']=list.cdr;r=(((e['l']==theNil))!=false?e['x']:TC(TopEnv.get('max'),list=new Pair(((e['x']>e['l'].car)!=false?e['x']:e['l'].car),e['l'].cdr.ListCopy())));if(r!=theTC||r.f!=this)return r}});\ne['min']=new Lambda(new Pair(getSymbol('x'),getSymbol('l')),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('l'),theNil)),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('apply'),new Pair(getSymbol('max'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('<'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('l'),theNil)),theNil))),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('l'),theNil)),theNil)))),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('l'),theNil)),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['l']=list.cdr;r=(((e['l']==theNil))!=false?e['x']:TC(TopEnv.get('max'),list=new Pair(((e['x']<e['l'].car)!=false?e['x']:e['l'].car),e['l'].cdr.ListCopy())));if(r!=theTC||r.f!=this)return r}});\ne['syntax-quasiquote']=Apply(new Lambda(theNil,new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('ql'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_17_'),theNil)),theNil))),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_18_'),theNil)),theNil))),new Env(e).With('_17_',new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('unquote'),theNil)),theNil))),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('x'),theNil)),theNil)),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('caar'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('unquote-splicing'),theNil)),theNil))),new Pair(false,theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),theNil)),new Pair(new Pair(getSymbol('cadar'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('list'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('append'),theNil)),new Pair(new Pair(getSymbol('cadar'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('ql'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),theNil)),theNil)))),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),theNil)),new Pair(new Pair(getSymbol('list'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('list'),theNil)),new Pair(new Pair(getSymbol('ql'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('x'),theNil)),theNil)),theNil))),new Pair(new Pair(getSymbol('list'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('cons'),theNil)),new Pair(new Pair(getSymbol('ql'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('x'),theNil)),theNil)),new Pair(new Pair(getSymbol('ql'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),theNil)),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('symbol?'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('list'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('quote'),theNil)),new Pair(getSymbol('x'),theNil))),new Pair(getSymbol('x'),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=((((e['x'])instanceof Pair))!=false?(((e['x']==theNil))!=false?new Pair(getSymbol('quote'),new Pair(theNil,theNil)):((isEq(e['x'].car,getSymbol('unquote')))!=false?e['x'].cdr.car:((((((e['x'].car)instanceof Pair))!=false?isEq(e['x'].car.car,getSymbol('unquote-splicing')):false))!=false?(((e['x'].cdr==theNil))!=false?TC(TopEnv.get('cadar'),list=new Pair(e['x'],theNil)):new Pair(getSymbol('append'),new Pair(Apply(TopEnv.get('cadar'),new Pair(e['x'],theNil)),new Pair(Apply(e.parentEnv['ql'],new Pair(e['x'].cdr,theNil)),theNil)))):(((e['x'].cdr==theNil))!=false?new Pair(getSymbol('list'),new Pair(Apply(e.parentEnv['ql'],new Pair(e['x'].car,theNil)),theNil)):new Pair(getSymbol('cons'),new Pair(Apply(e.parentEnv['ql'],new Pair(e['x'].car,theNil)),new Pair(Apply(e.parentEnv['ql'],new Pair(e['x'].cdr,theNil)),theNil))))))):((((e['x'])instanceof Symbol))!=false?new Pair(getSymbol('quote'),new Pair(e['x'],theNil)):e['x']));if(r!=theTC||r.f!=this)return r}})).With('_18_',new Lambda(new Pair(getSymbol('expr'),theNil),new Pair(getSymbol('ql'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('expr'),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['expr']=list.car;r=TC(e.parentEnv['ql'],list=new Pair(e['expr'].cdr.car,theNil));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){r=(e['ql']=e.parentEnv['_17_'].clone(e),e.parentEnv['_18_'].clone(e));if(r!=theTC||r.f!=this)return r}}),theNil);\ne['quasiquote']=new Syntax(e.get('syntax-quasiquote'),theNil);\ne['f-and']=new Lambda(getSymbol('lst'),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('lst'),theNil)),new Pair(true,new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil)),new Pair(new Pair(getSymbol('apply'),new Pair(getSymbol('f-and'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),theNil))),new Pair(false,theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['lst']=list;r=(((e['lst']==theNil))!=false?true:((e['lst'].car)!=false?TC(TopEnv.get('f-and'),list=e['lst'].cdr.ListCopy()):false));if(r!=theTC||r.f!=this)return r}});\ne['f-or']=new Lambda(getSymbol('lst'),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('lst'),theNil)),new Pair(false,new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil)),new Pair(true,new Pair(new Pair(getSymbol('apply'),new Pair(getSymbol('f-or'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),theNil))),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['lst']=list;r=(((e['lst']==theNil))!=false?false:((e['lst'].car)!=false?true:TC(TopEnv.get('f-or'),list=e['lst'].cdr.ListCopy())));if(r!=theTC||r.f!=this)return r}});\ne['syntax-rules']=new Lambda(new Pair(getSymbol('expr'),new Pair(getSymbol('literals'),new Pair(getSymbol('p1'),getSymbol('more')))),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('vars'),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('match'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_19_'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('match-many'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_20_'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('find-all'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_21_'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('p-each'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_22_'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('process-many'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_23_'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('gen-many'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_24_'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('ren'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_25_'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('gen'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_26_'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('match'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('expr'),theNil)),new Pair(new Pair(getSymbol('cdar'),new Pair(getSymbol('p1'),theNil)),theNil))),new Pair(new Pair(getSymbol('gen'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('p1'),theNil)),new Pair(true,theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('more'),theNil)),new Pair(new Pair(getSymbol('error'),new Pair(new Pair(getSymbol('string-append'),new Pair(\"no pattern matches \",new Pair(new Pair(getSymbol('symbol->string'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('expr'),theNil)),theNil)),theNil))),theNil)),new Pair(new Pair(getSymbol('apply'),new Pair(getSymbol('syntax-rules'),new Pair(getSymbol('expr'),new Pair(getSymbol('literals'),new Pair(getSymbol('more'),theNil))))),theNil)))),theNil)))),theNil))))))))))),new Env(e).With('_19_',new Lambda(new Pair(getSymbol('ex'),new Pair(getSymbol('pat'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('pat'),theNil)),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('symbol?'),new Pair(getSymbol('pat'),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('vars'),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('cons'),new Pair(getSymbol('pat'),new Pair(getSymbol('ex'),theNil))),new Pair(getSymbol('vars'),theNil))),theNil))),new Pair(true,theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('pat'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('...'),theNil)),theNil))),new Pair(new Pair(getSymbol('match-many'),new Pair(getSymbol('ex'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('pat'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('ex'),theNil)),new Pair(false,new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('memq+'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('pat'),theNil)),new Pair(getSymbol('literals'),theNil))),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('pat'),theNil)),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('symbol?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('pat'),theNil)),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('vars'),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('pat'),theNil)),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),theNil))),new Pair(getSymbol('vars'),theNil))),theNil))),new Pair(true,theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('pat'),theNil)),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(true,new Pair(new Pair(getSymbol('pair?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),theNil)),theNil)))),new Pair(false,theNil)))),new Pair(new Pair(getSymbol('match'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('pat'),theNil)),theNil))),new Pair(new Pair(getSymbol('eqv?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('pat'),theNil)),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),theNil))),theNil)))),theNil)))),theNil)))),theNil)))),new Pair(new Pair(getSymbol('match'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('pat'),theNil)),theNil))),new Pair(false,theNil)))),theNil)))),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['ex']=list.car;e['pat']=list.cdr.car;r=(((e['pat']==theNil))!=false?(e['ex']==theNil):((((e['pat'])instanceof Symbol))!=false?(e.set('vars',new Pair(new Pair(e['pat'],e['ex']),e.parentEnv['vars'])),true):((isEq(e['pat'].cdr.car,getSymbol('...')))!=false?TC(e.parentEnv['match-many'],list=new Pair(e['ex'],new Pair(e['pat'].car,theNil))):(((((e['ex']==theNil))!=false?false:((Apply(TopEnv.get('memq+'),new Pair(e['pat'].car,new Pair(e.parentEnv['literals'],theNil))))!=false?isEq(e['pat'].car,e['ex'].car):((((e['pat'].car)instanceof Symbol))!=false?(e.set('vars',new Pair(new Pair(e['pat'].car,e['ex'].car),e.parentEnv['vars'])),true):((((((e['pat'].car)instanceof Pair))!=false?(((e['ex'].car==theNil))!=false?true:((e['ex'].car)instanceof Pair)):false))!=false?Apply(e.parentEnv['match'],new Pair(e['ex'].car,new Pair(e['pat'].car,theNil))):isEq(e['pat'].car,e['ex'].car))))))!=false?TC(e.parentEnv['match'],list=new Pair(e['ex'].cdr,new Pair(e['pat'].cdr,theNil))):false))));if(r!=theTC||r.f!=this)return r}})).With('_20_',new Lambda(new Pair(getSymbol('ex'),new Pair(getSymbol('pat'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('ex'),theNil)),new Pair(true,new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('match'),new Pair(new Pair(getSymbol('list'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(new Pair(getSymbol('list'),new Pair(getSymbol('pat'),theNil)),theNil))),new Pair(new Pair(getSymbol('match-many'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('pat'),theNil))),new Pair(false,theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['ex']=list.car;e['pat']=list.cdr.car;r=(((e['ex']==theNil))!=false?true:((Apply(e.parentEnv['match'],new Pair(new Pair(e['ex'].car,theNil),new Pair(new Pair(e['pat'],theNil),theNil))))!=false?TC(e.parentEnv['match-many'],list=new Pair(e['ex'].cdr,new Pair(e['pat'],theNil))):false));if(r!=theTC||r.f!=this)return r}})).With('_21_',new Lambda(new Pair(getSymbol('var'),new Pair(getSymbol('lst'),new Pair(getSymbol('out'),theNil))),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('out'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(getSymbol('var'),new Pair(new Pair(getSymbol('caar'),new Pair(getSymbol('lst'),theNil)),theNil))),new Pair(new Pair(getSymbol('find-all'),new Pair(getSymbol('var'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('cdar'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('out'),theNil))),theNil)))),new Pair(new Pair(getSymbol('find-all'),new Pair(getSymbol('var'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('out'),theNil)))),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['var']=list.car;e['lst']=list.cdr.car;e['out']=list.cdr.cdr.car;r=(((e['lst']==theNil))!=false?e['out']:((isEq(e['var'],e['lst'].car.car))!=false?TC(e.parentEnv['find-all'],list=new Pair(e['var'],new Pair(e['lst'].cdr,new Pair(new Pair(e['lst'].car.cdr,e['out']),theNil)))):TC(e.parentEnv['find-all'],list=new Pair(e['var'],new Pair(e['lst'].cdr,new Pair(e['out'],theNil))))));if(r!=theTC||r.f!=this)return r}})).With('_22_',new Lambda(new Pair(getSymbol('lst'),new Pair(getSymbol('templ'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('lst'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil)),theNil)),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('templ'),theNil)),new Pair(new Pair(getSymbol('caar'),new Pair(getSymbol('lst'),theNil)),theNil)))),new Pair(new Pair(getSymbol('p-each'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('templ'),theNil)),theNil))),theNil))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['lst']=list.car;e['templ']=list.cdr.car;r=(((e['lst']==theNil))!=false?theNil:new Pair((((e['lst'].car==theNil))!=false?e['templ'].car:e['lst'].car.car),Apply(e.parentEnv['p-each'],new Pair(e['lst'].cdr,new Pair(e['templ'].cdr,theNil)))));if(r!=theTC||r.f!=this)return r}})).With('_23_',new Lambda(new Pair(getSymbol('lst'),new Pair(getSymbol('templ'),theNil)),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('not-empty'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('l2'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_27_'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('ll'),new Pair(new Pair(getSymbol('l2'),new Pair(getSymbol('lst'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('not-empty'),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('p-each'),new Pair(getSymbol('lst'),new Pair(getSymbol('templ'),theNil))),new Pair(new Pair(getSymbol('process-many'),new Pair(getSymbol('ll'),new Pair(getSymbol('templ'),theNil))),theNil))),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),theNil)))),theNil))))),new Env(e).With('_27_',new Lambda(new Pair(getSymbol('l'),theNil),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('l'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('a'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('l'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('a'),theNil)),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('not-empty'),new Pair(true,theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('a'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('a'),theNil)),theNil))),theNil))),theNil))),new Pair(new Pair(getSymbol('cons'),new Pair(getSymbol('a'),new Pair(new Pair(getSymbol('l2'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('l'),theNil)),theNil)),theNil))),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['l']=list.car;r=(((e['l']==theNil))!=false?theNil:(e['a']=e['l'].car,((((e['a']==theNil)==false))!=false?(e.set('not-empty',true),e['a']=e['a'].cdr):null),new Pair(e['a'],Apply(e.parentEnv['l2'],new Pair(e['l'].cdr,theNil)))));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['lst']=list.car;e['templ']=list.cdr.car;r=(e['not-empty']=false,e['l2']=e.parentEnv['_27_'].clone(e),e['ll']=Apply(e['l2'],new Pair(e['lst'],theNil)),((e['not-empty'])!=false?new Pair(Apply(e.parentEnv.parentEnv['p-each'],new Pair(e['lst'],new Pair(e['templ'],theNil))),Apply(e.parentEnv.parentEnv['process-many'],new Pair(e['ll'],new Pair(e['templ'],theNil)))):theNil));if(r!=theTC||r.f!=this)return r}})).With('_24_',new Lambda(new Pair(getSymbol('templ'),theNil),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('templ'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('templ'),theNil)),new Pair(new Pair(getSymbol('process-many'),new Pair(new Pair(getSymbol('map+'),new Pair(getSymbol('gen-many'),new Pair(getSymbol('templ'),theNil))),new Pair(getSymbol('templ'),theNil))),new Pair(new Pair(getSymbol('find-all'),new Pair(getSymbol('templ'),new Pair(getSymbol('vars'),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),theNil)))),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['templ']=list.car;r=(((e['templ']==theNil))!=false?theNil:((((e['templ'])instanceof Pair))!=false?TC(e.parentEnv['process-many'],list=new Pair(Apply(TopEnv.get('map+'),new Pair(e.parentEnv['gen-many'],new Pair(e['templ'],theNil))),new Pair(e['templ'],theNil))):TC(e.parentEnv['find-all'],list=new Pair(e['templ'],new Pair(e.parentEnv['vars'],new Pair(theNil,theNil))))));if(r!=theTC||r.f!=this)return r}})).With('_25_',new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('new'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('...'),theNil)),theNil))),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('new'),new Pair(new Pair(getSymbol('gen-sym'),new Pair(getSymbol('x'),theNil)),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('vars'),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('cons'),new Pair(getSymbol('x'),new Pair(getSymbol('new'),theNil))),new Pair(getSymbol('vars'),theNil))),theNil))),new Pair(getSymbol('new'),theNil)))),theNil)))),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=(e['new']=false,((isEq(e['x'],getSymbol('...')))!=false?e['x']:(e['new']=Apply(TopEnv.get('gen-sym'),new Pair(e['x'],theNil)),e.set('vars',new Pair(new Pair(e['x'],e['new']),e.parentEnv['vars'])),e['new'])));if(r!=theTC||r.f!=this)return r}})).With('_26_',new Lambda(new Pair(getSymbol('templ'),new Pair(getSymbol('no...'),theNil)),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('old-vars'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('args'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('body'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('new'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('x'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('templ'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('templ'),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('no...'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('templ'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('...'),theNil)),theNil))),new Pair(false,theNil)))),new Pair(new Pair(getSymbol('append'),new Pair(new Pair(getSymbol('gen-many'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('templ'),theNil)),theNil)),new Pair(new Pair(getSymbol('gen'),new Pair(new Pair(getSymbol('cddr'),new Pair(getSymbol('templ'),theNil)),new Pair(getSymbol('no...'),theNil))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('no...'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('templ'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('lambda'),theNil)),theNil))),new Pair(false,theNil)))),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('old-vars'),new Pair(getSymbol('vars'),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('args'),new Pair(new Pair(getSymbol('gen'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('templ'),theNil)),new Pair(getSymbol('no...'),theNil))),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('body'),new Pair(new Pair(getSymbol('gen'),new Pair(new Pair(getSymbol('cddr'),new Pair(getSymbol('templ'),theNil)),new Pair(getSymbol('no...'),theNil))),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('vars'),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('new'),new Pair(new Pair(getSymbol('map+'),new Pair(getSymbol('ren'),new Pair(getSymbol('args'),theNil))),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('new'),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('templ'),theNil)),new Pair(new Pair(getSymbol('cons'),new Pair(getSymbol('new'),new Pair(new Pair(getSymbol('gen'),new Pair(getSymbol('body'),new Pair(false,theNil))),theNil))),theNil))),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('vars'),new Pair(getSymbol('old-vars'),theNil))),new Pair(getSymbol('new'),theNil))))))))),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('gen'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('templ'),theNil)),new Pair(getSymbol('no...'),theNil))),new Pair(new Pair(getSymbol('gen'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('templ'),theNil)),new Pair(getSymbol('no...'),theNil))),theNil))),theNil)))),theNil)))),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('assq'),new Pair(getSymbol('templ'),new Pair(getSymbol('vars'),theNil))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),new Pair(getSymbol('templ'),theNil)))),theNil))),theNil)))),theNil)))),theNil))))))),e,function(list){var r,e=new Env(this.env);while(true){e['templ']=list.car;e['no...']=list.cdr.car;r=(e['old-vars']=false,e['args']=false,e['body']=false,e['new']=false,e['x']=false,(((e['templ']==theNil))!=false?theNil:((((e['templ'])instanceof Pair))!=false?((((e['no...'])!=false?isEq(e['templ'].cdr.car,getSymbol('...')):false))!=false?TC(TopEnv.get('append'),list=new Pair(Apply(e.parentEnv['gen-many'],new Pair(e['templ'].car,theNil)),new Pair(Apply(e.parentEnv['gen'],new Pair(e['templ'].cdr.cdr,new Pair(e['no...'],theNil))),theNil))):((((e['no...'])!=false?isEq(e['templ'].car,getSymbol('lambda')):false))!=false?(e['old-vars']=e.parentEnv['vars'],e['args']=Apply(e.parentEnv['gen'],new Pair(e['templ'].cdr.car,new Pair(e['no...'],theNil))),e['body']=Apply(e.parentEnv['gen'],new Pair(e['templ'].cdr.cdr,new Pair(e['no...'],theNil))),e.set('vars',theNil),e['new']=Apply(TopEnv.get('map+'),new Pair(e.parentEnv['ren'],new Pair(e['args'],theNil))),e['new']=new Pair(e['templ'].car,new Pair(e['new'],Apply(e.parentEnv['gen'],new Pair(e['body'],new Pair(false,theNil))))),e.set('vars',e['old-vars']),e['new']):new Pair(Apply(e.parentEnv['gen'],new Pair(e['templ'].car,new Pair(e['no...'],theNil))),Apply(e.parentEnv['gen'],new Pair(e['templ'].cdr,new Pair(e['no...'],theNil)))))):(e['x']=Apply(TopEnv.get('assq'),new Pair(e['templ'],new Pair(e.parentEnv['vars'],theNil))),((e['x'])!=false?e['x'].cdr:e['templ'])))));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['expr']=list.car;e['literals']=list.cdr.car;e['p1']=list.cdr.cdr.car;e['more']=list.cdr.cdr.cdr;r=(e['vars']=theNil,e['match']=e.parentEnv['_19_'].clone(e),e['match-many']=e.parentEnv['_20_'].clone(e),e['find-all']=e.parentEnv['_21_'].clone(e),e['p-each']=e.parentEnv['_22_'].clone(e),e['process-many']=e.parentEnv['_23_'].clone(e),e['gen-many']=e.parentEnv['_24_'].clone(e),e['ren']=e.parentEnv['_25_'].clone(e),e['gen']=e.parentEnv['_26_'].clone(e),((Apply(e['match'],new Pair(e['expr'].cdr,new Pair(e['p1'].car.cdr,theNil))))!=false?TC(e['gen'],list=new Pair(e['p1'].cdr.car,new Pair(true,theNil))):(((e['more']==theNil))!=false?TC(TopEnv.get('error'),list=new Pair((\"no pattern matches \"+e['expr'].car.name),theNil)):TC(TopEnv.get('syntax-rules'),list=new Pair(e['expr'],new Pair(e['literals'],e['more'].ListCopy()))))));if(r!=theTC||r.f!=this)return r}});\ne['and']=new Syntax(e.get('syntax-rules'),new Pair(theNil,new Pair(new Pair(new Pair(getSymbol('_'),theNil),new Pair(true,theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(getSymbol('test'),theNil)),new Pair(getSymbol('test'),theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(getSymbol('test1'),new Pair(getSymbol('test2'),new Pair(getSymbol('...'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('test1'),new Pair(new Pair(getSymbol('and'),new Pair(getSymbol('test2'),new Pair(getSymbol('...'),theNil))),new Pair(false,theNil)))),theNil)),theNil)))));\ne['or']=new Syntax(e.get('syntax-rules'),new Pair(theNil,new Pair(new Pair(new Pair(getSymbol('_'),theNil),new Pair(false,theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(getSymbol('test'),theNil)),new Pair(getSymbol('test'),theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(getSymbol('test1'),new Pair(getSymbol('test2'),new Pair(getSymbol('...'),theNil)))),new Pair(new Pair(getSymbol('let'),new Pair(new Pair(new Pair(getSymbol('_tmp_'),new Pair(getSymbol('test1'),theNil)),theNil),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('_tmp_'),new Pair(getSymbol('_tmp_'),new Pair(new Pair(getSymbol('or'),new Pair(getSymbol('test2'),new Pair(getSymbol('...'),theNil))),theNil)))),theNil))),theNil)),theNil)))));\ne['let']=new Syntax(e.get('syntax-rules'),new Pair(theNil,new Pair(new Pair(new Pair(getSymbol('_'),new Pair(new Pair(new Pair(getSymbol('name'),new Pair(getSymbol('val'),theNil)),new Pair(getSymbol('...'),theNil)),new Pair(getSymbol('body1'),new Pair(getSymbol('...'),theNil)))),new Pair(new Pair(new Pair(getSymbol('lambda'),new Pair(new Pair(getSymbol('name'),new Pair(getSymbol('...'),theNil)),new Pair(getSymbol('body1'),new Pair(getSymbol('...'),theNil)))),new Pair(getSymbol('val'),new Pair(getSymbol('...'),theNil))),theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(getSymbol('tag'),new Pair(new Pair(new Pair(getSymbol('name'),new Pair(getSymbol('val'),theNil)),new Pair(getSymbol('...'),theNil)),new Pair(getSymbol('body1'),new Pair(getSymbol('...'),theNil))))),new Pair(new Pair(new Pair(getSymbol('letrec'),new Pair(new Pair(new Pair(getSymbol('tag'),new Pair(new Pair(getSymbol('lambda'),new Pair(new Pair(getSymbol('name'),new Pair(getSymbol('...'),theNil)),new Pair(getSymbol('body1'),new Pair(getSymbol('...'),theNil)))),theNil)),theNil),new Pair(getSymbol('tag'),theNil))),new Pair(getSymbol('val'),new Pair(getSymbol('...'),theNil))),theNil)),theNil))));\ne['cond']=new Syntax(e.get('syntax-rules'),new Pair(new Pair(getSymbol('else'),new Pair(getSymbol('=>'),theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(new Pair(getSymbol('else'),new Pair(getSymbol('result1'),new Pair(getSymbol('...'),theNil))),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(getSymbol('result1'),new Pair(getSymbol('...'),theNil))),theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(new Pair(getSymbol('test'),new Pair(getSymbol('=>'),new Pair(getSymbol('result'),theNil))),theNil)),new Pair(new Pair(getSymbol('let'),new Pair(new Pair(new Pair(getSymbol('_tmp_'),new Pair(getSymbol('test'),theNil)),theNil),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('_tmp_'),new Pair(new Pair(getSymbol('result'),new Pair(getSymbol('_tmp_'),theNil)),theNil))),theNil))),theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(new Pair(getSymbol('test'),new Pair(getSymbol('=>'),new Pair(getSymbol('result'),theNil))),new Pair(getSymbol('clause1'),new Pair(getSymbol('...'),theNil)))),new Pair(new Pair(getSymbol('let'),new Pair(new Pair(new Pair(getSymbol('_tmp_'),new Pair(getSymbol('test'),theNil)),theNil),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('_tmp_'),new Pair(new Pair(getSymbol('result'),new Pair(getSymbol('_tmp_'),theNil)),new Pair(new Pair(getSymbol('cond'),new Pair(getSymbol('clause1'),new Pair(getSymbol('...'),theNil))),theNil)))),theNil))),theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(new Pair(getSymbol('test'),theNil),theNil)),new Pair(getSymbol('test'),theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(new Pair(getSymbol('test'),theNil),new Pair(getSymbol('clause1'),new Pair(getSymbol('...'),theNil)))),new Pair(new Pair(getSymbol('let'),new Pair(new Pair(new Pair(getSymbol('_tmp_'),new Pair(getSymbol('test'),theNil)),theNil),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('_tmp_'),new Pair(getSymbol('_tmp_'),new Pair(new Pair(getSymbol('cond'),new Pair(getSymbol('clause1'),new Pair(getSymbol('...'),theNil))),theNil)))),theNil))),theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(new Pair(getSymbol('test'),new Pair(getSymbol('result1'),new Pair(getSymbol('...'),theNil))),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('test'),new Pair(new Pair(getSymbol('begin'),new Pair(getSymbol('result1'),new Pair(getSymbol('...'),theNil))),theNil))),theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(new Pair(getSymbol('test'),new Pair(getSymbol('result1'),new Pair(getSymbol('...'),theNil))),new Pair(getSymbol('clause1'),new Pair(getSymbol('...'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('test'),new Pair(new Pair(getSymbol('begin'),new Pair(getSymbol('result1'),new Pair(getSymbol('...'),theNil))),new Pair(new Pair(getSymbol('cond'),new Pair(getSymbol('clause1'),new Pair(getSymbol('...'),theNil))),theNil)))),theNil)),theNil)))))))));\ne['let*']=new Syntax(e.get('syntax-rules'),new Pair(theNil,new Pair(new Pair(new Pair(getSymbol('_'),new Pair(theNil,new Pair(getSymbol('body1'),new Pair(getSymbol('...'),theNil)))),new Pair(new Pair(getSymbol('begin'),new Pair(getSymbol('body1'),new Pair(getSymbol('...'),theNil))),theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(new Pair(new Pair(getSymbol('name1'),new Pair(getSymbol('val1'),theNil)),new Pair(new Pair(getSymbol('name2'),new Pair(getSymbol('val2'),theNil)),new Pair(getSymbol('...'),theNil))),new Pair(getSymbol('body1'),new Pair(getSymbol('...'),theNil)))),new Pair(new Pair(new Pair(getSymbol('lambda'),new Pair(new Pair(getSymbol('name1'),theNil),new Pair(new Pair(getSymbol('let*'),new Pair(new Pair(new Pair(getSymbol('name2'),new Pair(getSymbol('val2'),theNil)),new Pair(getSymbol('...'),theNil)),new Pair(getSymbol('body1'),new Pair(getSymbol('...'),theNil)))),theNil))),new Pair(getSymbol('val1'),theNil)),theNil)),theNil))));\ne['letrec']=new Syntax(e.get('syntax-rules'),new Pair(theNil,new Pair(new Pair(new Pair(getSymbol('_'),new Pair(new Pair(new Pair(getSymbol('var1'),new Pair(getSymbol('init1'),theNil)),new Pair(getSymbol('...'),theNil)),new Pair(getSymbol('body'),new Pair(getSymbol('...'),theNil)))),new Pair(new Pair(new Pair(getSymbol('lambda'),new Pair(theNil,new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('var1'),new Pair(false,theNil))),new Pair(getSymbol('...'),new Pair(new Pair(new Pair(getSymbol('lambda'),new Pair(getSymbol('_tmplst_'),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('var1'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('_tmplst_'),theNil)),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('_tmplst_'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('_tmplst_'),theNil)),theNil))),theNil))),new Pair(getSymbol('...'),theNil)))),new Pair(getSymbol('init1'),new Pair(getSymbol('...'),theNil))),new Pair(getSymbol('body'),new Pair(getSymbol('...'),theNil))))))),theNil),theNil)),theNil)));\ne['let-syntax']=new Syntax(e.get('syntax-rules'),new Pair(theNil,new Pair(new Pair(new Pair(getSymbol('_'),new Pair(new Pair(new Pair(getSymbol('_var1_'),new Pair(getSymbol('_init1_'),theNil)),new Pair(getSymbol('...'),theNil)),new Pair(getSymbol('_body_'),new Pair(getSymbol('...'),theNil)))),new Pair(new Pair(new Pair(getSymbol('lambda'),new Pair(theNil,new Pair(new Pair(getSymbol('define-syntax'),new Pair(getSymbol('_var1_'),new Pair(getSymbol('_init1_'),theNil))),new Pair(getSymbol('...'),new Pair(getSymbol('_body_'),new Pair(getSymbol('...'),theNil)))))),theNil),theNil)),theNil)));\ne['letrec-syntax']=e.get('let-syntax');\ne['case']=new Syntax(e.get('syntax-rules'),new Pair(new Pair(getSymbol('else'),theNil),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(new Pair(getSymbol('key'),new Pair(getSymbol('...'),theNil)),new Pair(getSymbol('clauses'),new Pair(getSymbol('...'),theNil)))),new Pair(new Pair(getSymbol('let'),new Pair(new Pair(new Pair(getSymbol('_tmp_'),new Pair(new Pair(getSymbol('key'),new Pair(getSymbol('...'),theNil)),theNil)),theNil),new Pair(new Pair(getSymbol('case'),new Pair(getSymbol('_tmp_'),new Pair(getSymbol('clauses'),new Pair(getSymbol('...'),theNil)))),theNil))),theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(getSymbol('key'),new Pair(new Pair(getSymbol('else'),new Pair(getSymbol('result1'),new Pair(getSymbol('...'),theNil))),theNil))),new Pair(new Pair(getSymbol('begin'),new Pair(getSymbol('result1'),new Pair(getSymbol('...'),theNil))),theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(getSymbol('key'),new Pair(new Pair(new Pair(getSymbol('atoms'),new Pair(getSymbol('...'),theNil)),new Pair(getSymbol('result1'),new Pair(getSymbol('...'),theNil))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('memv'),new Pair(getSymbol('key'),new Pair(new Pair(getSymbol('quote'),new Pair(new Pair(getSymbol('atoms'),new Pair(getSymbol('...'),theNil)),theNil)),theNil))),new Pair(new Pair(getSymbol('begin'),new Pair(getSymbol('result1'),new Pair(getSymbol('...'),theNil))),theNil))),theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(getSymbol('key'),new Pair(new Pair(new Pair(getSymbol('atoms'),new Pair(getSymbol('...'),theNil)),new Pair(getSymbol('result1'),new Pair(getSymbol('...'),theNil))),new Pair(getSymbol('clause'),new Pair(getSymbol('...'),theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('memv'),new Pair(getSymbol('key'),new Pair(new Pair(getSymbol('quote'),new Pair(new Pair(getSymbol('atoms'),new Pair(getSymbol('...'),theNil)),theNil)),theNil))),new Pair(new Pair(getSymbol('begin'),new Pair(getSymbol('result1'),new Pair(getSymbol('...'),theNil))),new Pair(new Pair(getSymbol('case'),new Pair(getSymbol('key'),new Pair(getSymbol('clause'),new Pair(getSymbol('...'),theNil)))),theNil)))),theNil)),theNil))))));\ne['do']=new Syntax(e.get('syntax-rules'),new Pair(theNil,new Pair(new Pair(new Pair(getSymbol('_'),new Pair(new Pair(new Pair(getSymbol('var'),new Pair(getSymbol('init'),new Pair(getSymbol('step'),theNil))),new Pair(getSymbol('...'),theNil)),new Pair(new Pair(getSymbol('test'),new Pair(getSymbol('expr'),new Pair(getSymbol('...'),theNil))),new Pair(getSymbol('command'),new Pair(getSymbol('...'),theNil))))),new Pair(new Pair(getSymbol('letrec'),new Pair(new Pair(new Pair(getSymbol('_loop_'),new Pair(new Pair(getSymbol('lambda'),new Pair(new Pair(getSymbol('var'),new Pair(getSymbol('...'),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('test'),new Pair(new Pair(getSymbol('begin'),new Pair(getSymbol('expr'),new Pair(getSymbol('...'),theNil))),new Pair(new Pair(getSymbol('begin'),new Pair(getSymbol('command'),new Pair(getSymbol('...'),new Pair(new Pair(getSymbol('_loop_'),new Pair(new Pair(getSymbol('do'),new Pair(\"step\",new Pair(getSymbol('var'),new Pair(getSymbol('step'),theNil)))),new Pair(getSymbol('...'),theNil))),theNil)))),theNil)))),theNil))),theNil)),theNil),new Pair(new Pair(getSymbol('_loop_'),new Pair(getSymbol('init'),new Pair(getSymbol('...'),theNil))),theNil))),theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(\"step\",new Pair(getSymbol('x'),theNil))),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(new Pair(getSymbol('_'),new Pair(\"step\",new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil)))),new Pair(getSymbol('y'),theNil)),theNil)))));\ne['memq+']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('ls'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('ls'),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ls'),theNil)),new Pair(getSymbol('x'),theNil))),new Pair(getSymbol('ls'),new Pair(new Pair(getSymbol('memq+'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ls'),theNil)),theNil))),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(getSymbol('x'),new Pair(getSymbol('ls'),theNil))),new Pair(getSymbol('ls'),new Pair(false,theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['ls']=list.cdr.car;r=((((e['ls'])instanceof Pair))!=false?((isEq(e['ls'].car,e['x']))!=false?e['ls']:TC(TopEnv.get('memq+'),list=new Pair(e['x'],new Pair(e['ls'].cdr,theNil)))):((isEq(e['x'],e['ls']))!=false?e['ls']:false));if(r!=theTC||r.f!=this)return r}});\ne['memq']=e.get('memq+');\ne['memv']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('ls'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('ls'),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eqv?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ls'),theNil)),new Pair(getSymbol('x'),theNil))),new Pair(getSymbol('ls'),new Pair(new Pair(getSymbol('memv'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ls'),theNil)),theNil))),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eqv?'),new Pair(getSymbol('x'),new Pair(getSymbol('ls'),theNil))),new Pair(getSymbol('ls'),new Pair(false,theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['ls']=list.cdr.car;r=((((e['ls'])instanceof Pair))!=false?((isEq(e['ls'].car,e['x']))!=false?e['ls']:TC(TopEnv.get('memv'),list=new Pair(e['x'],new Pair(e['ls'].cdr,theNil)))):((isEq(e['x'],e['ls']))!=false?e['ls']:false));if(r!=theTC||r.f!=this)return r}});\ne['member']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('ls'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('ls'),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('equal?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ls'),theNil)),new Pair(getSymbol('x'),theNil))),new Pair(getSymbol('ls'),new Pair(new Pair(getSymbol('member'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ls'),theNil)),theNil))),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('equal?'),new Pair(getSymbol('x'),new Pair(getSymbol('ls'),theNil))),new Pair(getSymbol('ls'),new Pair(false,theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['ls']=list.cdr.car;r=((((e['ls'])instanceof Pair))!=false?((Apply(TopEnv.get('equal?'),new Pair(e['ls'].car,new Pair(e['x'],theNil))))!=false?e['ls']:TC(TopEnv.get('member'),list=new Pair(e['x'],new Pair(e['ls'].cdr,theNil)))):((Apply(TopEnv.get('equal?'),new Pair(e['x'],new Pair(e['ls'],theNil))))!=false?e['ls']:false));if(r!=theTC||r.f!=this)return r}});\ne['assq']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('ls'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('ls'),theNil)),new Pair(false,new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('caar'),new Pair(getSymbol('ls'),theNil)),new Pair(getSymbol('x'),theNil))),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ls'),theNil)),new Pair(new Pair(getSymbol('assq'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ls'),theNil)),theNil))),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['ls']=list.cdr.car;r=(((e['ls']==theNil))!=false?false:((isEq(e['ls'].car.car,e['x']))!=false?e['ls'].car:TC(TopEnv.get('assq'),list=new Pair(e['x'],new Pair(e['ls'].cdr,theNil)))));if(r!=theTC||r.f!=this)return r}});\ne['assv']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('ls'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('ls'),theNil)),new Pair(false,new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eqv?'),new Pair(new Pair(getSymbol('caar'),new Pair(getSymbol('ls'),theNil)),new Pair(getSymbol('x'),theNil))),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ls'),theNil)),new Pair(new Pair(getSymbol('assv'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ls'),theNil)),theNil))),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['ls']=list.cdr.car;r=(((e['ls']==theNil))!=false?false:((isEq(e['ls'].car.car,e['x']))!=false?e['ls'].car:TC(TopEnv.get('assv'),list=new Pair(e['x'],new Pair(e['ls'].cdr,theNil)))));if(r!=theTC||r.f!=this)return r}});\ne['assoc']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('ls'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('ls'),theNil)),new Pair(false,new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('equal?'),new Pair(new Pair(getSymbol('caar'),new Pair(getSymbol('ls'),theNil)),new Pair(getSymbol('x'),theNil))),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ls'),theNil)),new Pair(new Pair(getSymbol('assoc'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ls'),theNil)),theNil))),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['ls']=list.cdr.car;r=(((e['ls']==theNil))!=false?false:((Apply(TopEnv.get('equal?'),new Pair(e['ls'].car.car,new Pair(e['x'],theNil))))!=false?e['ls'].car:TC(TopEnv.get('assoc'),list=new Pair(e['x'],new Pair(e['ls'].cdr,theNil)))));if(r!=theTC||r.f!=this)return r}});\ne['list?']=Apply(new Lambda(theNil,new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('race'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_28_'),theNil)),theNil))),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_29_'),theNil)),theNil))),new Env(e).With('_28_',new Lambda(new Pair(getSymbol('h'),new Pair(getSymbol('t'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('h'),theNil)),new Pair(new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_30_'),theNil)),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('h'),theNil)),theNil)),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('h'),theNil)),theNil)))),new Env(e).With('_30_',new Lambda(new Pair(getSymbol('h'),theNil),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('h'),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('eq?'),new Pair(getSymbol('h'),new Pair(getSymbol('t'),theNil))),theNil)),new Pair(new Pair(getSymbol('race'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('h'),theNil)),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('t'),theNil)),theNil))),new Pair(false,theNil)))),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('h'),theNil)),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['h']=list.car;r=((((e['h'])instanceof Pair))!=false?(((isEq(e['h'],e.parentEnv['t'])==false))!=false?TC(e.parentEnv.parentEnv.parentEnv['race'],list=new Pair(e['h'].cdr,new Pair(e.parentEnv['t'].cdr,theNil))):false):(e['h']==theNil));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['h']=list.car;e['t']=list.cdr.car;r=((((e['h'])instanceof Pair))!=false?TC(e.parentEnv['_30_'].clone(e),list=new Pair(e['h'].cdr,theNil)):(e['h']==theNil));if(r!=theTC||r.f!=this)return r}})).With('_29_',new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('race'),new Pair(getSymbol('x'),new Pair(getSymbol('x'),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=TC(e.parentEnv['race'],list=new Pair(e['x'],new Pair(e['x'],theNil)));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){r=(e['race']=e.parentEnv['_28_'].clone(e),e.parentEnv['_29_'].clone(e));if(r!=theTC||r.f!=this)return r}}),theNil);\ne['equal?']=new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil)),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_31_'),theNil)),new Pair(new Pair(getSymbol('eqv?'),new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil))),theNil)),new Env(e).With('_31_',new Lambda(new Pair(getSymbol('eqv'),theNil),new Pair(getSymbol('if'),new Pair(getSymbol('eqv'),new Pair(getSymbol('eqv'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('y'),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('equal?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('y'),theNil)),theNil))),new Pair(new Pair(getSymbol('equal?'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('y'),theNil)),theNil))),new Pair(false,theNil)))),new Pair(false,theNil)))),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('vector?'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('vector?'),new Pair(getSymbol('y'),theNil)),new Pair(new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_32_'),theNil)),new Pair(new Pair(getSymbol('vector-length'),new Pair(getSymbol('x'),theNil)),theNil)),new Pair(false,theNil)))),new Pair(false,theNil)))),theNil)))),theNil)))),new Env(e).With('_32_',new Lambda(new Pair(getSymbol('n'),theNil),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('='),new Pair(new Pair(getSymbol('vector-length'),new Pair(getSymbol('y'),theNil)),new Pair(getSymbol('n'),theNil))),new Pair(new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('loop'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_33_'),theNil)),theNil))),new Pair(getSymbol('loop'),theNil))),new Pair(0,theNil)),new Pair(false,theNil)))),new Env(e).With('_33_',new Lambda(new Pair(getSymbol('i'),theNil),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_34_'),theNil)),new Pair(new Pair(getSymbol('='),new Pair(getSymbol('i'),new Pair(getSymbol('n'),theNil))),theNil)),new Env(e).With('_34_',new Lambda(new Pair(getSymbol('eq-len'),theNil),new Pair(getSymbol('if'),new Pair(getSymbol('eq-len'),new Pair(getSymbol('eq-len'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('equal?'),new Pair(new Pair(getSymbol('vector-ref'),new Pair(getSymbol('x'),new Pair(getSymbol('i'),theNil))),new Pair(new Pair(getSymbol('vector-ref'),new Pair(getSymbol('y'),new Pair(getSymbol('i'),theNil))),theNil))),new Pair(new Pair(getSymbol('loop'),new Pair(new Pair(getSymbol('+'),new Pair(getSymbol('i'),new Pair(1,theNil))),theNil)),new Pair(false,theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['eq-len']=list.car;r=((e['eq-len'])!=false?e['eq-len']:((Apply(TopEnv.get('equal?'),new Pair(Apply(TopEnv.get('vector-ref'),new Pair(e.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv['x'],new Pair(e.parentEnv['i'],theNil))),new Pair(Apply(TopEnv.get('vector-ref'),new Pair(e.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv['y'],new Pair(e.parentEnv['i'],theNil))),theNil))))!=false?TC(e.parentEnv.parentEnv.parentEnv['loop'],list=new Pair((e.parentEnv['i']+1),theNil)):false));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['i']=list.car;r=TC(e.parentEnv['_34_'].clone(e),list=new Pair(isEq(e['i'],e.parentEnv.parentEnv['n']),theNil));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['n']=list.car;r=((isEq(Apply(TopEnv.get('vector-length'),new Pair(e.parentEnv.parentEnv.parentEnv.parentEnv['y'],theNil)),e['n']))!=false?TC((e['loop']=e.parentEnv['_33_'].clone(e),e['loop']),list=new Pair(0,theNil)):false);if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['eqv']=list.car;r=((e['eqv'])!=false?e['eqv']:((((e.parentEnv.parentEnv['x'])instanceof Pair))!=false?((((e.parentEnv.parentEnv['y'])instanceof Pair))!=false?((Apply(TopEnv.get('equal?'),new Pair(e.parentEnv.parentEnv['x'].car,new Pair(e.parentEnv.parentEnv['y'].car,theNil))))!=false?TC(TopEnv.get('equal?'),list=new Pair(e.parentEnv.parentEnv['x'].cdr,new Pair(e.parentEnv.parentEnv['y'].cdr,theNil))):false):false):((Apply(TopEnv.get('vector?'),new Pair(e.parentEnv.parentEnv['x'],theNil)))!=false?((Apply(TopEnv.get('vector?'),new Pair(e.parentEnv.parentEnv['y'],theNil)))!=false?TC(e.parentEnv['_32_'].clone(e),list=new Pair(Apply(TopEnv.get('vector-length'),new Pair(e.parentEnv.parentEnv['x'],theNil)),theNil)):false):false)));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['y']=list.cdr.car;r=TC(e.parentEnv['_31_'].clone(e),list=new Pair(isEq(e['x'],e['y']),theNil));if(r!=theTC||r.f!=this)return r}});\ne['values']=new Lambda(getSymbol('things'),new Pair(getSymbol('call/cc'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_35_'),theNil)),theNil)),new Env(e).With('_35_',new Lambda(new Pair(getSymbol('cont'),theNil),new Pair(getSymbol('apply'),new Pair(getSymbol('cont'),new Pair(getSymbol('things'),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['cont']=list.car;r=TC(e['cont'],list=e.parentEnv['things'].ListCopy());if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['things']=list;r=TC(TopEnv.get('call/cc'),list=new Pair(e.parentEnv['_35_'].clone(e),theNil));if(r!=theTC||r.f!=this)return r}});\ne['call-with-values']=new Lambda(new Pair(getSymbol('producer'),new Pair(getSymbol('consumer'),theNil)),new Pair(getSymbol('consumer'),new Pair(new Pair(getSymbol('producer'),theNil),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['producer']=list.car;e['consumer']=list.cdr.car;r=TC(e['consumer'],list=new Pair(Apply(e['producer'],theNil),theNil));if(r!=theTC||r.f!=this)return r}});\ne['for-each']=new Lambda(new Pair(getSymbol('f'),getSymbol('lst')),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil)),theNil)),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('apply'),new Pair(getSymbol('f'),new Pair(new Pair(getSymbol('map+'),new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil))),theNil))),new Pair(new Pair(getSymbol('apply'),new Pair(getSymbol('for-each'),new Pair(getSymbol('f'),new Pair(new Pair(getSymbol('map+'),new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil))),theNil)))),theNil))),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['f']=list.car;e['lst']=list.cdr;r=((((e['lst'].car==theNil)==false))!=false?(Apply(e['f'],Apply(TopEnv.get('map+'),new Pair(TopEnv.get('car'),new Pair(e['lst'],theNil))).ListCopy()),TC(TopEnv.get('for-each'),list=new Pair(e['f'],Apply(TopEnv.get('map+'),new Pair(TopEnv.get('cdr'),new Pair(e['lst'],theNil))).ListCopy()))):null);if(r!=theTC||r.f!=this)return r}});\ne['delay']=new Syntax(e.get('syntax-rules'),new Pair(theNil,new Pair(new Pair(new Pair(getSymbol('_'),new Pair(getSymbol('exp'),theNil)),new Pair(new Pair(getSymbol('make-promise'),new Pair(new Pair(getSymbol('lambda'),new Pair(theNil,new Pair(getSymbol('exp'),theNil))),theNil)),theNil)),theNil)));\ne['make-promise']=new Lambda(new Pair(getSymbol('p'),theNil),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_36_'),theNil)),theNil),new Env(e).With('_36_',new Lambda(theNil,new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('val'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('set?'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_37_'),theNil)),theNil)))),new Env(e).With('_37_',new Lambda(theNil,new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(getSymbol('set?'),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('p'),theNil),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(getSymbol('set?'),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('val'),new Pair(getSymbol('x'),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('set?'),new Pair(true,theNil))),theNil))),theNil))),theNil))),theNil))),new Pair(getSymbol('val'),theNil))),e,function(list){var r,e=new Env(this.env);while(true){r=((((e.parentEnv['set?']==false))!=false?(e['x']=Apply(e.parentEnv.parentEnv.parentEnv['p'],theNil),(((e.parentEnv['set?']==false))!=false?(e.set('val',e['x']),e.set('set?',true)):null)):null),e.parentEnv['val']);if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){r=(e['val']=false,e['set?']=false,e.parentEnv['_37_'].clone(e));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['p']=list.car;r=TC(e.parentEnv['_36_'].clone(e),list=theNil);if(r!=theTC||r.f!=this)return r}});\ne['force']=new Lambda(new Pair(getSymbol('promise'),theNil),new Pair(getSymbol('promise'),theNil),e,function(list){var r,e=new Env(this.env);while(true){e['promise']=list.car;r=TC(e['promise'],list=theNil);if(r!=theTC||r.f!=this)return r}});\ne['string-copy']=new Lambda(new Pair(getSymbol('x'),theNil),getSymbol('x'),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=e['x'];if(r!=theTC||r.f!=this)return r}});\ne['vector-fill!']=new Lambda(new Pair(getSymbol('v'),new Pair(getSymbol('obj'),theNil)),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('l'),new Pair(new Pair(getSymbol('vector-length'),new Pair(getSymbol('v'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('vf'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_38_'),theNil)),theNil))),new Pair(new Pair(getSymbol('vf'),new Pair(0,theNil)),theNil)))),new Env(e).With('_38_',new Lambda(new Pair(getSymbol('i'),theNil),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('<'),new Pair(getSymbol('i'),new Pair(getSymbol('l'),theNil))),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('vector-set!'),new Pair(getSymbol('v'),new Pair(getSymbol('i'),new Pair(getSymbol('obj'),theNil)))),new Pair(new Pair(getSymbol('vf'),new Pair(new Pair(getSymbol('+'),new Pair(getSymbol('i'),new Pair(1,theNil))),theNil)),theNil))),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['i']=list.car;r=((e['i']<e.parentEnv['l'])!=false?(Apply(TopEnv.get('vector-set!'),new Pair(e.parentEnv['v'],new Pair(e['i'],new Pair(e.parentEnv['obj'],theNil)))),TC(e.parentEnv['vf'],list=new Pair((e['i']+1),theNil))):null);if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['v']=list.car;e['obj']=list.cdr.car;r=(e['l']=Apply(TopEnv.get('vector-length'),new Pair(e['v'],theNil)),e['vf']=e.parentEnv['_38_'].clone(e),TC(e['vf'],list=new Pair(0,theNil)));if(r!=theTC||r.f!=this)return r}});\ne['vector->list']=new Lambda(new Pair(getSymbol('v'),theNil),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('loop'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_39_'),theNil)),theNil))),new Pair(new Pair(getSymbol('loop'),new Pair(new Pair(getSymbol('-'),new Pair(new Pair(getSymbol('vector-length'),new Pair(getSymbol('v'),theNil)),new Pair(1,theNil))),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),theNil))),theNil))),new Env(e).With('_39_',new Lambda(new Pair(getSymbol('i'),new Pair(getSymbol('l'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('<'),new Pair(getSymbol('i'),new Pair(0,theNil))),new Pair(getSymbol('l'),new Pair(new Pair(getSymbol('loop'),new Pair(new Pair(getSymbol('-'),new Pair(getSymbol('i'),new Pair(1,theNil))),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('vector-ref'),new Pair(getSymbol('v'),new Pair(getSymbol('i'),theNil))),new Pair(getSymbol('l'),theNil))),theNil))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['i']=list.car;e['l']=list.cdr.car;r=((e['i']<0)!=false?e['l']:TC(e.parentEnv['loop'],list=new Pair((e['i']-1),new Pair(new Pair(Apply(TopEnv.get('vector-ref'),new Pair(e.parentEnv['v'],new Pair(e['i'],theNil))),e['l']),theNil))));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['v']=list.car;r=(e['loop']=e.parentEnv['_39_'].clone(e),TC(e['loop'],list=new Pair((Apply(TopEnv.get('vector-length'),new Pair(e['v'],theNil))-1),new Pair(theNil,theNil))));if(r!=theTC||r.f!=this)return r}});\ne['list->vector']=new Lambda(new Pair(getSymbol('l'),theNil),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('v'),new Pair(new Pair(getSymbol('make-vector'),new Pair(0,theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('loop'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_40_'),theNil)),theNil))),new Pair(new Pair(getSymbol('loop'),new Pair(0,new Pair(getSymbol('l'),theNil))),new Pair(getSymbol('v'),theNil))))),new Env(e).With('_40_',new Lambda(new Pair(getSymbol('i'),new Pair(getSymbol('l'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('l'),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('vector-set!'),new Pair(getSymbol('v'),new Pair(getSymbol('i'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('l'),theNil)),theNil)))),new Pair(new Pair(getSymbol('loop'),new Pair(new Pair(getSymbol('+'),new Pair(getSymbol('i'),new Pair(1,theNil))),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('l'),theNil)),theNil))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('l'),theNil)),theNil)),new Pair(new Pair(getSymbol('vector-set!'),new Pair(getSymbol('v'),new Pair(getSymbol('i'),new Pair(getSymbol('l'),theNil)))),theNil))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['i']=list.car;e['l']=list.cdr.car;r=((((e['l'])instanceof Pair))!=false?(Apply(TopEnv.get('vector-set!'),new Pair(e.parentEnv['v'],new Pair(e['i'],new Pair(e['l'].car,theNil)))),TC(e.parentEnv['loop'],list=new Pair((e['i']+1),new Pair(e['l'].cdr,theNil)))):((((e['l']==theNil)==false))!=false?TC(TopEnv.get('vector-set!'),list=new Pair(e.parentEnv['v'],new Pair(e['i'],new Pair(e['l'],theNil)))):null));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['l']=list.car;r=(e['v']=Apply(TopEnv.get('make-vector'),new Pair(0,theNil)),e['loop']=e.parentEnv['_40_'].clone(e),Apply(e['loop'],new Pair(0,new Pair(e['l'],theNil))),e['v']);if(r!=theTC||r.f!=this)return r}});\ne['dynamic-wind']=false;\nApply(new Lambda(theNil,new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('winders'),new Pair(new Pair(getSymbol('quote'),new Pair(theNil,theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('common-tail'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_41_'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('do-wind'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_42_'),theNil)),theNil))),new Pair(new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_43_'),theNil)),new Pair(getSymbol('call/cc'),theNil)),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('call-with-current-continuation'),new Pair(getSymbol('call/cc'),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('dynamic-wind'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_44_'),theNil)),theNil))),theNil))))))),new Env(e).With('_41_',new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil)),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('lx'),new Pair(new Pair(getSymbol('length'),new Pair(getSymbol('x'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('ly'),new Pair(new Pair(getSymbol('length'),new Pair(getSymbol('y'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('loop'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_45_'),theNil)),theNil))),new Pair(new Pair(getSymbol('loop'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('>'),new Pair(getSymbol('lx'),new Pair(getSymbol('ly'),theNil))),new Pair(new Pair(getSymbol('list-tail'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('-'),new Pair(getSymbol('lx'),new Pair(getSymbol('ly'),theNil))),theNil))),new Pair(getSymbol('x'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('>'),new Pair(getSymbol('ly'),new Pair(getSymbol('lx'),theNil))),new Pair(new Pair(getSymbol('list-tail'),new Pair(getSymbol('y'),new Pair(new Pair(getSymbol('-'),new Pair(getSymbol('ly'),new Pair(getSymbol('lx'),theNil))),theNil))),new Pair(getSymbol('y'),theNil)))),theNil))),theNil))))),new Env(e).With('_45_',new Lambda(new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(getSymbol('x'),new Pair(getSymbol('y'),theNil))),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('loop'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('y'),theNil)),theNil))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['y']=list.cdr.car;r=((isEq(e['x'],e['y']))!=false?e['x']:TC(e.parentEnv['loop'],list=new Pair(e['x'].cdr,new Pair(e['y'].cdr,theNil))));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;e['y']=list.cdr.car;r=(e['lx']=Apply(TopEnv.get('length'),new Pair(e['x'],theNil)),e['ly']=Apply(TopEnv.get('length'),new Pair(e['y'],theNil)),e['loop']=e.parentEnv['_45_'].clone(e),TC(e['loop'],list=new Pair(((e['lx']>e['ly'])!=false?Apply(TopEnv.get('list-tail'),new Pair(e['x'],new Pair((e['lx']-e['ly']),theNil))):e['x']),new Pair(((e['ly']>e['lx'])!=false?Apply(TopEnv.get('list-tail'),new Pair(e['y'],new Pair((e['ly']-e['lx']),theNil))):e['y']),theNil))));if(r!=theTC||r.f!=this)return r}})).With('_42_',new Lambda(new Pair(getSymbol('new'),theNil),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('tail'),new Pair(new Pair(getSymbol('common-tail'),new Pair(getSymbol('new'),new Pair(getSymbol('winders'),theNil))),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('f1'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_46_'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('f2'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_47_'),theNil)),theNil))),new Pair(new Pair(getSymbol('f1'),new Pair(getSymbol('winders'),theNil)),new Pair(new Pair(getSymbol('f2'),new Pair(getSymbol('new'),theNil)),theNil)))))),new Env(e).With('_46_',new Lambda(new Pair(getSymbol('l'),theNil),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('eq?'),new Pair(getSymbol('l'),new Pair(getSymbol('tail'),theNil))),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('winders'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('l'),theNil)),theNil))),new Pair(new Pair(new Pair(getSymbol('cdar'),new Pair(getSymbol('l'),theNil)),theNil),new Pair(new Pair(getSymbol('f1'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('l'),theNil)),theNil)),theNil)))),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['l']=list.car;r=(((isEq(e['l'],e.parentEnv['tail'])==false))!=false?(e.set('winders',e['l'].cdr),Apply(e['l'].car.cdr,theNil),TC(e.parentEnv['f1'],list=new Pair(e['l'].cdr,theNil))):null);if(r!=theTC||r.f!=this)return r}})).With('_47_',new Lambda(new Pair(getSymbol('l'),theNil),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('eq?'),new Pair(getSymbol('l'),new Pair(getSymbol('tail'),theNil))),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('f2'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('l'),theNil)),theNil)),new Pair(new Pair(new Pair(getSymbol('caar'),new Pair(getSymbol('l'),theNil)),theNil),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('winders'),new Pair(getSymbol('l'),theNil))),theNil)))),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['l']=list.car;r=(((isEq(e['l'],e.parentEnv['tail'])==false))!=false?(Apply(e.parentEnv['f2'],new Pair(e['l'].cdr,theNil)),Apply(e['l'].car.car,theNil),e.set('winders',e['l'])):null);if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['new']=list.car;r=(e['tail']=Apply(e.parentEnv.parentEnv['common-tail'],new Pair(e['new'],new Pair(e.parentEnv.parentEnv['winders'],theNil))),e['f1']=e.parentEnv['_46_'].clone(e),e['f2']=e.parentEnv['_47_'].clone(e),Apply(e['f1'],new Pair(e.parentEnv.parentEnv['winders'],theNil)),TC(e['f2'],list=new Pair(e['new'],theNil)));if(r!=theTC||r.f!=this)return r}})).With('_43_',new Lambda(new Pair(getSymbol('c'),theNil),new Pair(getSymbol('set!'),new Pair(getSymbol('call/cc'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_48_'),theNil)),theNil))),new Env(e).With('_48_',new Lambda(new Pair(getSymbol('f'),theNil),new Pair(getSymbol('c'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_49_'),theNil)),theNil)),new Env(e).With('_49_',new Lambda(new Pair(getSymbol('k'),theNil),new Pair(getSymbol('f'),new Pair(new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_50_'),theNil)),new Pair(getSymbol('winders'),theNil)),theNil)),new Env(e).With('_50_',new Lambda(new Pair(getSymbol('save'),theNil),new Pair(getSymbol('clone'),new Pair(getSymbol('_51_'),theNil)),new Env(e).With('_51_',new Lambda(getSymbol('x'),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('eq?'),new Pair(getSymbol('save'),new Pair(getSymbol('winders'),theNil))),theNil)),new Pair(new Pair(getSymbol('do-wind'),new Pair(getSymbol('save'),theNil)),theNil))),new Pair(new Pair(getSymbol('apply'),new Pair(getSymbol('k'),new Pair(getSymbol('x'),theNil))),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list;r=((((isEq(e.parentEnv['save'],e.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv['winders'])==false))!=false?Apply(e.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv['do-wind'],new Pair(e.parentEnv['save'],theNil)):null),TC(e.parentEnv.parentEnv.parentEnv['k'],list=e['x'].ListCopy()));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['save']=list.car;r=e.parentEnv['_51_'].clone(e);if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['k']=list.car;r=TC(e.parentEnv.parentEnv['f'],list=new Pair(Apply(e.parentEnv['_50_'].clone(e),new Pair(e.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv.parentEnv['winders'],theNil)),theNil));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['f']=list.car;r=TC(e.parentEnv.parentEnv['c'],list=new Pair(e.parentEnv['_49_'].clone(e),theNil));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['c']=list.car;r=e.set('call/cc',e.parentEnv['_48_'].clone(e));if(r!=theTC||r.f!=this)return r}})).With('_44_',new Lambda(new Pair(getSymbol('in'),new Pair(getSymbol('body'),new Pair(getSymbol('out'),theNil))),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('ans'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('in'),theNil),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('winders'),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('cons'),new Pair(getSymbol('in'),new Pair(getSymbol('out'),theNil))),new Pair(getSymbol('winders'),theNil))),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('ans'),new Pair(new Pair(getSymbol('body'),theNil),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('winders'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('winders'),theNil)),theNil))),new Pair(new Pair(getSymbol('out'),theNil),new Pair(getSymbol('ans'),theNil)))))))),e,function(list){var r,e=new Env(this.env);while(true){e['in']=list.car;e['body']=list.cdr.car;e['out']=list.cdr.cdr.car;r=(e['ans']=false,Apply(e['in'],theNil),e.set('winders',new Pair(new Pair(e['in'],e['out']),e.parentEnv['winders'])),e['ans']=Apply(e['body'],theNil),e.set('winders',e.parentEnv['winders'].cdr),Apply(e['out'],theNil),e['ans']);if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){r=(e['winders']=theNil,e['common-tail']=e.parentEnv['_41_'].clone(e),e['do-wind']=e.parentEnv['_42_'].clone(e),Apply(e.parentEnv['_43_'].clone(e),new Pair(TopEnv.get('call/cc'),theNil)),e.set('call-with-current-continuation',TopEnv.get('call/cc')),e.set('dynamic-wind',e.parentEnv['_44_'].clone(e)));if(r!=theTC||r.f!=this)return r}}),theNil);\ne['js-char']=new Lambda(new Pair(getSymbol('c'),theNil),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('char-code'),new Pair(new Pair(getSymbol('char->integer'),new Pair(getSymbol('c'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('>='),new Pair(getSymbol('char-code'),new Pair(32,theNil))),new Pair(new Pair(getSymbol('string'),new Pair(getSymbol('c'),theNil)),new Pair(new Pair(getSymbol('string-append'),new Pair(\"\\\\x\",new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('<'),new Pair(getSymbol('char-code'),new Pair(16,theNil))),new Pair(\"0\",new Pair(\"\",theNil)))),new Pair(new Pair(getSymbol('number->string'),new Pair(getSymbol('char-code'),new Pair(16,theNil))),theNil)))),theNil)))),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['c']=list.car;r=(e['char-code']=Apply(TopEnv.get('char->integer'),new Pair(e['c'],theNil)),((e['char-code']>=32)!=false?TC(TopEnv.get('string'),list=new Pair(e['c'],theNil)):(\"\\\\x\"+((e['char-code']<16)!=false?\"0\":\"\")+Apply(TopEnv.get('number->string'),new Pair(e['char-code'],new Pair(16,theNil))))));if(r!=theTC||r.f!=this)return r}});\ne['compile']=new Lambda(new Pair(getSymbol('ex'),getSymbol('tt')),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('tail'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('locs'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('app'),new Pair(\"Apply\",theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('prefix'),new Pair(\"\",theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('suffix'),new Pair(\"\",theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('tt'),theNil)),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('locs'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('tt'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('tt'),theNil)),theNil)),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('tail'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('tt'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('cddr'),new Pair(getSymbol('tt'),theNil)),theNil)),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('caddr'),new Pair(getSymbol('tt'),theNil)),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('suffix'),new Pair(new Pair(getSymbol('cadddr'),new Pair(getSymbol('tt'),theNil)),theNil))),theNil))),theNil))),theNil))),theNil))),theNil))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('tail'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('app'),new Pair(\"TC\",theNil))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('number?'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('number->string'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('suffix'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('symbol?'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('locs'),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('locs'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('gen'),theNil)),new Pair(getSymbol('ex'),new Pair(\"e\",theNil)))),new Pair(getSymbol('suffix'),theNil)))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"e.get('\",new Pair(new Pair(getSymbol('symbol->string'),new Pair(getSymbol('ex'),theNil)),new Pair(\"')\",new Pair(getSymbol('suffix'),theNil)))))),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('string?'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('str'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('suffix'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('char?'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"getChar('\",new Pair(new Pair(getSymbol('js-char'),new Pair(getSymbol('ex'),theNil)),new Pair(\"')\",new Pair(getSymbol('suffix'),theNil)))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('error'),new Pair(\"cannot compile ()\",theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('boolean?'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('ex'),new Pair(\"true\",new Pair(\"false\",theNil)))),new Pair(getSymbol('suffix'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('vector?'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(getSymbol('app'),new Pair(\"(e.get('list->vector'),\",new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('tail'),new Pair(\"list=\",new Pair(\"\",theNil)))),new Pair(\"new Pair(\",new Pair(new Pair(getSymbol('compile-quote'),new Pair(new Pair(getSymbol('vector->list'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(\",theNil),e)\",new Pair(getSymbol('suffix'),theNil))))))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(new Pair(getSymbol('error'),new Pair(new Pair(getSymbol('string-append'),new Pair(\"cannot compile \",new Pair(new Pair(getSymbol('str'),new Pair(getSymbol('ex'),theNil)),theNil))),theNil)),new Pair(new Pair(getSymbol('compile-pair'),new Pair(getSymbol('ex'),new Pair(getSymbol('locs'),new Pair(getSymbol('tail'),new Pair(getSymbol('prefix'),new Pair(getSymbol('suffix'),new Pair(getSymbol('app'),theNil))))))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil))))))))),e,function(list){var r,e=new Env(this.env);while(true){e['ex']=list.car;e['tt']=list.cdr;r=(e['tail']=false,e['locs']=false,e['app']=\"Apply\",e['prefix']=\"\",e['suffix']=\"\",((((e['tt']==theNil)==false))!=false?(e['locs']=e['tt'].car,((((e['tt'].cdr==theNil)==false))!=false?(e['tail']=e['tt'].cdr.car,((((e['tt'].cdr.cdr==theNil)==false))!=false?(e['prefix']=e['tt'].cdr.cdr.car,e['suffix']=e['tt'].cdr.cdr.cdr.car):null)):null)):null),((e['tail'])!=false?e['app']=\"TC\":null),(((typeof(e['ex'])=='number'))!=false?(e['prefix']+Apply(TopEnv.get('number->string'),new Pair(e['ex'],theNil))+e['suffix']):((((e['ex'])instanceof Symbol))!=false?((e['locs'])!=false?(e['prefix']+Apply(e['locs'],new Pair(getSymbol('gen'),new Pair(e['ex'],new Pair(\"e\",theNil))))+e['suffix']):(e['prefix']+\"e.get('\"+e['ex'].name+\"')\"+e['suffix'])):(((typeof(e['ex'])=='string'))!=false?(e['prefix']+Str(e['ex'])+e['suffix']):((((e['ex'])instanceof Char))!=false?(e['prefix']+\"getChar('\"+Apply(TopEnv.get('js-char'),new Pair(e['ex'],theNil))+\"')\"+e['suffix']):(((e['ex']==theNil))!=false?TC(TopEnv.get('error'),list=new Pair(\"cannot compile ()\",theNil)):(((typeof(e['ex'])=='boolean'))!=false?(e['prefix']+((e['ex'])!=false?\"true\":\"false\")+e['suffix']):((Apply(TopEnv.get('vector?'),new Pair(e['ex'],theNil)))!=false?(e['prefix']+e['app']+\"(e.get('list->vector'),\"+((e['tail'])!=false?\"list=\":\"\")+\"new Pair(\"+Apply(TopEnv.get('compile-quote'),new Pair(Apply(TopEnv.get('vector->list'),new Pair(e['ex'],theNil)),theNil))+\",theNil),e)\"+e['suffix']):(((((e['ex'])instanceof Pair)==false))!=false?TC(TopEnv.get('error'),list=new Pair((\"cannot compile \"+Str(e['ex'])),theNil)):TC(TopEnv.get('compile-pair'),list=new Pair(e['ex'],new Pair(e['locs'],new Pair(e['tail'],new Pair(e['prefix'],new Pair(e['suffix'],new Pair(e['app'],theNil))))))))))))))));if(r!=theTC||r.f!=this)return r}});\ne['compile-pair']=new Lambda(new Pair(getSymbol('ex'),new Pair(getSymbol('locs'),new Pair(getSymbol('tail'),new Pair(getSymbol('prefix'),new Pair(getSymbol('suffix'),new Pair(getSymbol('app'),theNil)))))),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('list-len'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('locs'),theNil)),new Pair(new Pair(getSymbol('length'),new Pair(getSymbol('locs'),theNil)),new Pair(false,theNil)))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('begin'),theNil)),theNil))),new Pair(new Pair(getSymbol('compile-begin'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),new Pair(getSymbol('tail'),new Pair(getSymbol('prefix'),new Pair(getSymbol('suffix'),theNil)))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('quote'),theNil)),theNil))),new Pair(new Pair(getSymbol('compile-quote'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('prefix'),new Pair(getSymbol('suffix'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('not'),theNil)),theNil))),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),new Pair(false,new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"(\",theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(\"==false)\",new Pair(getSymbol('suffix'),theNil))),theNil)))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('symbol->string'),theNil)),theNil))),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),new Pair(false,new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('suffix'),new Pair(\".name\",theNil))),theNil)))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('car'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\".car\",new Pair(getSymbol('suffix'),theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('cdr'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\".cdr\",new Pair(getSymbol('suffix'),theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('caar'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\".car.car\",new Pair(getSymbol('suffix'),theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('cadr'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\".cdr.car\",new Pair(getSymbol('suffix'),theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('cdar'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\".car.cdr\",new Pair(getSymbol('suffix'),theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('cddr'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\".cdr.cdr\",new Pair(getSymbol('suffix'),theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('caaar'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\".car.car.car\",new Pair(getSymbol('suffix'),theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('caddr'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\".cdr.cdr.car\",new Pair(getSymbol('suffix'),theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('cdaar'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\".car.car.cdr\",new Pair(getSymbol('suffix'),theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('cdddr'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\".cdr.cdr.cdr\",new Pair(getSymbol('suffix'),theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('caaddr'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\".cdr.cdr.car.car\",new Pair(getSymbol('suffix'),theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('cadddr'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\".cdr.cdr.cdr.car\",new Pair(getSymbol('suffix'),theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('cdaddr'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\".cdr.cdr.car.cdr\",new Pair(getSymbol('suffix'),theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('cddddr'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\".cdr.cdr.cdr.cdr\",new Pair(getSymbol('suffix'),theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('cons'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"new Pair(\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\",\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('caddr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\")\",new Pair(getSymbol('suffix'),theNil)))))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('boolean?'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"(typeof(\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\")=='boolean')\",new Pair(getSymbol('suffix'),theNil)))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('string?'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"(typeof(\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\")=='string')\",new Pair(getSymbol('suffix'),theNil)))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('number?'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"(typeof(\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\")=='number')\",new Pair(getSymbol('suffix'),theNil)))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('char?'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"((\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\")instanceof Char)\",new Pair(getSymbol('suffix'),theNil)))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('symbol?'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"((\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\")instanceof Symbol)\",new Pair(getSymbol('suffix'),theNil)))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('syntax?'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"((\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\")instanceof Syntax)\",new Pair(getSymbol('suffix'),theNil)))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('null?'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"(\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\"==theNil)\",new Pair(getSymbol('suffix'),theNil)))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('pair?'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"((\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\")instanceof Pair)\",new Pair(getSymbol('suffix'),theNil)))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('str'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"Str(\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\")\",new Pair(getSymbol('suffix'),theNil)))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('clone'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\".clone(e)\",new Pair(getSymbol('suffix'),theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('get-prop'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\"[\",new Pair(new Pair(getSymbol('str'),new Pair(new Pair(getSymbol('caddr'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(\"]\",new Pair(getSymbol('suffix'),theNil))))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('>'),theNil)),theNil))),new Pair(true,new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('<'),theNil)),theNil))),new Pair(true,new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('>='),theNil)),theNil))),new Pair(true,new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('<='),theNil)),theNil))),theNil)))),theNil)))),theNil)))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile-predicate'),new Pair(new Pair(getSymbol('symbol->string'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil)))),new Pair(getSymbol('suffix'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('+'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile-append'),new Pair(\"0\",new Pair(\"+\",new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))))),new Pair(getSymbol('suffix'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('*'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile-append'),new Pair(\"1\",new Pair(\"*\",new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))))),new Pair(getSymbol('suffix'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('-'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile-minus'),new Pair(\"-\",new Pair(\"-\",new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))))),new Pair(getSymbol('suffix'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('/'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile-minus'),new Pair(\"1/\",new Pair(\"/\",new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))))),new Pair(getSymbol('suffix'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('string-append'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile-append'),new Pair(\"''\",new Pair(\"+\",new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))))),new Pair(getSymbol('suffix'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('eq?'),theNil)),theNil))),new Pair(true,new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('='),theNil)),theNil))),new Pair(true,new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('eqv?'),theNil)),theNil))),new Pair(true,new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('string=?'),theNil)),theNil))),new Pair(true,new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('char=?'),theNil)),theNil))),theNil)))),theNil)))),theNil)))),theNil)))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"isEq(\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\",\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('caddr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\")\",new Pair(getSymbol('suffix'),theNil)))))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('list'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile-list'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(getSymbol('suffix'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('if'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('cdddr'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('caddr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),new Pair(getSymbol('tail'),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"((\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\")!=false?\",theNil))))),new Pair(new Pair(getSymbol('string-append'),new Pair(\":null)\",new Pair(getSymbol('suffix'),theNil))),theNil)))))),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadddr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),new Pair(getSymbol('tail'),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"((\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\")!=false?\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('caddr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),new Pair(getSymbol('tail'),theNil)))),new Pair(\":\",theNil))))))),new Pair(new Pair(getSymbol('string-append'),new Pair(\")\",new Pair(getSymbol('suffix'),theNil))),theNil)))))),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('define-syntax'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"e['\",new Pair(new Pair(getSymbol('symbol->string'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(\"']=new Syntax(e.get('\",new Pair(new Pair(getSymbol('symbol->string'),new Pair(new Pair(getSymbol('caaddr'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(\"'),\",new Pair(new Pair(getSymbol('compile-quote'),new Pair(new Pair(getSymbol('cdaddr'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(\")\",new Pair(getSymbol('suffix'),theNil)))))))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('define'),theNil)),theNil))),new Pair(new Pair(getSymbol('symbol?'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(false,theNil)))),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('locs'),new Pair(new Pair(getSymbol('locs'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('add'),theNil)),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),theNil))),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"e['\",new Pair(new Pair(getSymbol('symbol->string'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(\"']=\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('caddr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(getSymbol('suffix'),theNil))))))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('set!'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('locs'),new Pair(new Pair(getSymbol('locs'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('memq'),theNil)),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),theNil))),new Pair(false,theNil)))),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('caddr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),new Pair(false,new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"e['\",new Pair(new Pair(getSymbol('symbol->string'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(\"']=\",theNil))))),new Pair(getSymbol('suffix'),theNil)))))),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('caddr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),new Pair(false,new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"e.set('\",new Pair(new Pair(getSymbol('symbol->string'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(\"',\",theNil))))),new Pair(new Pair(getSymbol('string-append'),new Pair(\")\",new Pair(getSymbol('suffix'),theNil))),theNil)))))),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('lambda'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('compile-lambda-obj'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('cddr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil)))),new Pair(getSymbol('suffix'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('define'),theNil)),theNil))),new Pair(new Pair(getSymbol('pair?'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(false,theNil)))),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('locs'),new Pair(new Pair(getSymbol('locs'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('add'),theNil)),new Pair(new Pair(getSymbol('caadr'),new Pair(getSymbol('ex'),theNil)),theNil))),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"e['\",new Pair(new Pair(getSymbol('symbol->string'),new Pair(new Pair(getSymbol('caadr'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(\"']=\",new Pair(new Pair(getSymbol('compile-lambda-obj'),new Pair(new Pair(getSymbol('cdadr'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('cddr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil)))),new Pair(getSymbol('suffix'),theNil))))))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('apply'),theNil)),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(getSymbol('app'),new Pair(\"(\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\",\",new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('tail'),new Pair(\"list=\",new Pair(\"\",theNil)))),new Pair(new Pair(getSymbol('compile-apply-list'),new Pair(new Pair(getSymbol('cddr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\")\",new Pair(getSymbol('suffix'),theNil)))))))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('tail'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('number?'),new Pair(getSymbol('list-len'),theNil)),new Pair(new Pair(getSymbol('>='),new Pair(getSymbol('list-len'),new Pair(new Pair(getSymbol('length'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),theNil)),theNil))),new Pair(false,theNil)))),new Pair(false,theNil)))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"(\",new Pair(new Pair(getSymbol('compile-reuse'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),new Pair(\"list\",new Pair(getSymbol('locs'),theNil)))),new Pair(\",\",new Pair(\"theTC.f=\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\",theTC.args=list,theTC)\",new Pair(getSymbol('suffix'),theNil))))))))),new Pair(new Pair(getSymbol('compile-list'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(getSymbol('app'),new Pair(\"(\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\",\",new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('tail'),new Pair(\"list=\",new Pair(\"\",theNil)))),theNil))))))),new Pair(new Pair(getSymbol('string-append'),new Pair(\")\",new Pair(getSymbol('suffix'),theNil))),theNil))))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil)))),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['ex']=list.car;e['locs']=list.cdr.car;e['tail']=list.cdr.cdr.car;e['prefix']=list.cdr.cdr.cdr.car;e['suffix']=list.cdr.cdr.cdr.cdr.car;e['app']=list.cdr.cdr.cdr.cdr.cdr.car;r=(e['list-len']=((((e['locs'])instanceof Pair))!=false?Apply(TopEnv.get('length'),new Pair(e['locs'],theNil)):false),((isEq(e['ex'].car,getSymbol('begin')))!=false?TC(TopEnv.get('compile-begin'),list=new Pair(e['ex'].cdr,new Pair(e['locs'],new Pair(e['tail'],new Pair(e['prefix'],new Pair(e['suffix'],theNil)))))):((isEq(e['ex'].car,getSymbol('quote')))!=false?TC(TopEnv.get('compile-quote'),list=new Pair(e['ex'].cdr.car,new Pair(e['prefix'],new Pair(e['suffix'],theNil)))):((isEq(e['ex'].car,getSymbol('not')))!=false?TC(TopEnv.get('compile'),list=new Pair(e['ex'].cdr.car,new Pair(e['locs'],new Pair(false,new Pair((e['prefix']+\"(\"),new Pair((\"==false)\"+e['suffix']),theNil)))))):((isEq(e['ex'].car,getSymbol('symbol->string')))!=false?TC(TopEnv.get('compile'),list=new Pair(e['ex'].cdr.car,new Pair(e['locs'],new Pair(false,new Pair(e['prefix'],new Pair((e['suffix']+\".name\"),theNil)))))):((isEq(e['ex'].car,getSymbol('car')))!=false?(e['prefix']+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\".car\"+e['suffix']):((isEq(e['ex'].car,getSymbol('cdr')))!=false?(e['prefix']+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\".cdr\"+e['suffix']):((isEq(e['ex'].car,getSymbol('caar')))!=false?(e['prefix']+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\".car.car\"+e['suffix']):((isEq(e['ex'].car,getSymbol('cadr')))!=false?(e['prefix']+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\".cdr.car\"+e['suffix']):((isEq(e['ex'].car,getSymbol('cdar')))!=false?(e['prefix']+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\".car.cdr\"+e['suffix']):((isEq(e['ex'].car,getSymbol('cddr')))!=false?(e['prefix']+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\".cdr.cdr\"+e['suffix']):((isEq(e['ex'].car,getSymbol('caaar')))!=false?(e['prefix']+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\".car.car.car\"+e['suffix']):((isEq(e['ex'].car,getSymbol('caddr')))!=false?(e['prefix']+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\".cdr.cdr.car\"+e['suffix']):((isEq(e['ex'].car,getSymbol('cdaar')))!=false?(e['prefix']+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\".car.car.cdr\"+e['suffix']):((isEq(e['ex'].car,getSymbol('cdddr')))!=false?(e['prefix']+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\".cdr.cdr.cdr\"+e['suffix']):((isEq(e['ex'].car,getSymbol('caaddr')))!=false?(e['prefix']+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\".cdr.cdr.car.car\"+e['suffix']):((isEq(e['ex'].car,getSymbol('cadddr')))!=false?(e['prefix']+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\".cdr.cdr.cdr.car\"+e['suffix']):((isEq(e['ex'].car,getSymbol('cdaddr')))!=false?(e['prefix']+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\".cdr.cdr.car.cdr\"+e['suffix']):((isEq(e['ex'].car,getSymbol('cddddr')))!=false?(e['prefix']+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\".cdr.cdr.cdr.cdr\"+e['suffix']):((isEq(e['ex'].car,getSymbol('cons')))!=false?(e['prefix']+\"new Pair(\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\",\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.cdr.car,new Pair(e['locs'],theNil)))+\")\"+e['suffix']):((isEq(e['ex'].car,getSymbol('boolean?')))!=false?(e['prefix']+\"(typeof(\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\")=='boolean')\"+e['suffix']):((isEq(e['ex'].car,getSymbol('string?')))!=false?(e['prefix']+\"(typeof(\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\")=='string')\"+e['suffix']):((isEq(e['ex'].car,getSymbol('number?')))!=false?(e['prefix']+\"(typeof(\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\")=='number')\"+e['suffix']):((isEq(e['ex'].car,getSymbol('char?')))!=false?(e['prefix']+\"((\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\")instanceof Char)\"+e['suffix']):((isEq(e['ex'].car,getSymbol('symbol?')))!=false?(e['prefix']+\"((\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\")instanceof Symbol)\"+e['suffix']):((isEq(e['ex'].car,getSymbol('syntax?')))!=false?(e['prefix']+\"((\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\")instanceof Syntax)\"+e['suffix']):((isEq(e['ex'].car,getSymbol('null?')))!=false?(e['prefix']+\"(\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\"==theNil)\"+e['suffix']):((isEq(e['ex'].car,getSymbol('pair?')))!=false?(e['prefix']+\"((\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\")instanceof Pair)\"+e['suffix']):((isEq(e['ex'].car,getSymbol('str')))!=false?(e['prefix']+\"Str(\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\")\"+e['suffix']):((isEq(e['ex'].car,getSymbol('clone')))!=false?(e['prefix']+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\".clone(e)\"+e['suffix']):((isEq(e['ex'].car,getSymbol('get-prop')))!=false?(e['prefix']+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\"[\"+Str(e['ex'].cdr.cdr.car)+\"]\"+e['suffix']):((((isEq(e['ex'].car,getSymbol('>')))!=false?true:((isEq(e['ex'].car,getSymbol('<')))!=false?true:((isEq(e['ex'].car,getSymbol('>=')))!=false?true:isEq(e['ex'].car,getSymbol('<='))))))!=false?(e['prefix']+Apply(TopEnv.get('compile-predicate'),new Pair(e['ex'].car.name,new Pair(e['ex'].cdr,new Pair(e['locs'],theNil))))+e['suffix']):((isEq(e['ex'].car,getSymbol('+')))!=false?(e['prefix']+Apply(TopEnv.get('compile-append'),new Pair(\"0\",new Pair(\"+\",new Pair(e['ex'].cdr,new Pair(e['locs'],theNil)))))+e['suffix']):((isEq(e['ex'].car,getSymbol('*')))!=false?(e['prefix']+Apply(TopEnv.get('compile-append'),new Pair(\"1\",new Pair(\"*\",new Pair(e['ex'].cdr,new Pair(e['locs'],theNil)))))+e['suffix']):((isEq(e['ex'].car,getSymbol('-')))!=false?(e['prefix']+Apply(TopEnv.get('compile-minus'),new Pair(\"-\",new Pair(\"-\",new Pair(e['ex'].cdr,new Pair(e['locs'],theNil)))))+e['suffix']):((isEq(e['ex'].car,getSymbol('/')))!=false?(e['prefix']+Apply(TopEnv.get('compile-minus'),new Pair(\"1/\",new Pair(\"/\",new Pair(e['ex'].cdr,new Pair(e['locs'],theNil)))))+e['suffix']):((isEq(e['ex'].car,getSymbol('string-append')))!=false?(e['prefix']+Apply(TopEnv.get('compile-append'),new Pair(\"''\",new Pair(\"+\",new Pair(e['ex'].cdr,new Pair(e['locs'],theNil)))))+e['suffix']):((((isEq(e['ex'].car,getSymbol('eq?')))!=false?true:((isEq(e['ex'].car,getSymbol('=')))!=false?true:((isEq(e['ex'].car,getSymbol('eqv?')))!=false?true:((isEq(e['ex'].car,getSymbol('string=?')))!=false?true:isEq(e['ex'].car,getSymbol('char=?')))))))!=false?(e['prefix']+\"isEq(\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\",\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.cdr.car,new Pair(e['locs'],theNil)))+\")\"+e['suffix']):((isEq(e['ex'].car,getSymbol('list')))!=false?(e['prefix']+Apply(TopEnv.get('compile-list'),new Pair(e['ex'].cdr,new Pair(e['locs'],theNil)))+e['suffix']):((isEq(e['ex'].car,getSymbol('if')))!=false?(((e['ex'].cdr.cdr.cdr==theNil))!=false?TC(TopEnv.get('compile'),list=new Pair(e['ex'].cdr.cdr.car,new Pair(e['locs'],new Pair(e['tail'],new Pair((e['prefix']+\"((\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\")!=false?\"),new Pair((\":null)\"+e['suffix']),theNil)))))):TC(TopEnv.get('compile'),list=new Pair(e['ex'].cdr.cdr.cdr.car,new Pair(e['locs'],new Pair(e['tail'],new Pair((e['prefix']+\"((\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\")!=false?\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.cdr.car,new Pair(e['locs'],new Pair(e['tail'],theNil))))+\":\"),new Pair((\")\"+e['suffix']),theNil))))))):((isEq(e['ex'].car,getSymbol('define-syntax')))!=false?(e['prefix']+\"e['\"+e['ex'].cdr.car.name+\"']=new Syntax(e.get('\"+e['ex'].cdr.cdr.car.car.name+\"'),\"+Apply(TopEnv.get('compile-quote'),new Pair(e['ex'].cdr.cdr.car.cdr,theNil))+\")\"+e['suffix']):((((isEq(e['ex'].car,getSymbol('define')))!=false?((e['ex'].cdr.car)instanceof Symbol):false))!=false?(((e['locs'])!=false?Apply(e['locs'],new Pair(getSymbol('add'),new Pair(e['ex'].cdr.car,theNil))):null),(e['prefix']+\"e['\"+e['ex'].cdr.car.name+\"']=\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.cdr.car,new Pair(e['locs'],theNil)))+e['suffix'])):((isEq(e['ex'].car,getSymbol('set!')))!=false?((((e['locs'])!=false?Apply(e['locs'],new Pair(getSymbol('memq'),new Pair(e['ex'].cdr.car,theNil))):false))!=false?TC(TopEnv.get('compile'),list=new Pair(e['ex'].cdr.cdr.car,new Pair(e['locs'],new Pair(false,new Pair((e['prefix']+\"e['\"+e['ex'].cdr.car.name+\"']=\"),new Pair(e['suffix'],theNil)))))):TC(TopEnv.get('compile'),list=new Pair(e['ex'].cdr.cdr.car,new Pair(e['locs'],new Pair(false,new Pair((e['prefix']+\"e.set('\"+e['ex'].cdr.car.name+\"',\"),new Pair((\")\"+e['suffix']),theNil))))))):((isEq(e['ex'].car,getSymbol('lambda')))!=false?(e['prefix']+Apply(TopEnv.get('compile-lambda-obj'),new Pair(e['ex'].cdr.car,new Pair(e['ex'].cdr.cdr,new Pair(e['locs'],theNil))))+e['suffix']):((((isEq(e['ex'].car,getSymbol('define')))!=false?((e['ex'].cdr.car)instanceof Pair):false))!=false?(((e['locs'])!=false?Apply(e['locs'],new Pair(getSymbol('add'),new Pair(Apply(TopEnv.get('caadr'),new Pair(e['ex'],theNil)),theNil))):null),(e['prefix']+\"e['\"+Apply(TopEnv.get('caadr'),new Pair(e['ex'],theNil)).name+\"']=\"+Apply(TopEnv.get('compile-lambda-obj'),new Pair(Apply(TopEnv.get('cdadr'),new Pair(e['ex'],theNil)),new Pair(e['ex'].cdr.cdr,new Pair(e['locs'],theNil))))+e['suffix'])):((isEq(e['ex'].car,getSymbol('apply')))!=false?(e['prefix']+e['app']+\"(\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].cdr.car,new Pair(e['locs'],theNil)))+\",\"+((e['tail'])!=false?\"list=\":\"\")+Apply(TopEnv.get('compile-apply-list'),new Pair(e['ex'].cdr.cdr,new Pair(e['locs'],theNil)))+\")\"+e['suffix']):((((e['tail'])!=false?(((typeof(e['list-len'])=='number'))!=false?e['list-len']>=Apply(TopEnv.get('length'),new Pair(e['ex'].cdr,theNil)):false):false))!=false?(e['prefix']+\"(\"+Apply(TopEnv.get('compile-reuse'),new Pair(e['ex'].cdr,new Pair(\"list\",new Pair(e['locs'],theNil))))+\",\"+\"theTC.f=\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].car,new Pair(e['locs'],theNil)))+\",theTC.args=list,theTC)\"+e['suffix']):TC(TopEnv.get('compile-list'),list=new Pair(e['ex'].cdr,new Pair(e['locs'],new Pair((e['prefix']+e['app']+\"(\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].car,new Pair(e['locs'],theNil)))+\",\"+((e['tail'])!=false?\"list=\":\"\")),new Pair((\")\"+e['suffix']),theNil))))))))))))))))))))))))))))))))))))))))))))))))))));if(r!=theTC||r.f!=this)return r}});\ne['compile-reuse']=new Lambda(new Pair(getSymbol('lst'),new Pair(getSymbol('var'),new Pair(getSymbol('locs'),theNil))),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('lst'),theNil)),new Pair(new Pair(getSymbol('string-append'),new Pair(\"(\",new Pair(getSymbol('var'),new Pair(\".car=\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\"),\",new Pair(new Pair(getSymbol('compile-reuse'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('var'),new Pair(\".cdr\",theNil))),new Pair(getSymbol('locs'),theNil)))),theNil))))))),new Pair(new Pair(getSymbol('string-append'),new Pair(\"(\",new Pair(getSymbol('var'),new Pair(\"=\",new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('lst'),theNil)),new Pair(\"theNil\",new Pair(new Pair(getSymbol('compile'),new Pair(getSymbol('lst'),new Pair(getSymbol('locs'),theNil))),theNil)))),new Pair(\")\",theNil)))))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['lst']=list.car;e['var']=list.cdr.car;e['locs']=list.cdr.cdr.car;r=((((e['lst'])instanceof Pair))!=false?(\"(\"+e['var']+\".car=\"+Apply(TopEnv.get('compile'),new Pair(e['lst'].car,new Pair(e['locs'],theNil)))+\"),\"+Apply(TopEnv.get('compile-reuse'),new Pair(e['lst'].cdr,new Pair((e['var']+\".cdr\"),new Pair(e['locs'],theNil))))):(\"(\"+e['var']+\"=\"+(((e['lst']==theNil))!=false?\"theNil\":Apply(TopEnv.get('compile'),new Pair(e['lst'],new Pair(e['locs'],theNil))))+\")\"));if(r!=theTC||r.f!=this)return r}});\ne['compile-predicate']=new Lambda(new Pair(getSymbol('op'),new Pair(getSymbol('lst'),new Pair(getSymbol('locs'),theNil))),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('s'),new Pair(new Pair(getSymbol('string-append'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(getSymbol('op'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('locs'),theNil))),theNil)))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('cddr'),new Pair(getSymbol('lst'),theNil)),theNil)),new Pair(getSymbol('s'),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('s'),new Pair(\"&&\",new Pair(new Pair(getSymbol('compile-predicate'),new Pair(getSymbol('op'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('locs'),theNil)))),theNil)))),theNil)))),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['op']=list.car;e['lst']=list.cdr.car;e['locs']=list.cdr.cdr.car;r=(e['s']=(Apply(TopEnv.get('compile'),new Pair(e['lst'].car,new Pair(e['locs'],theNil)))+e['op']+Apply(TopEnv.get('compile'),new Pair(e['lst'].cdr.car,new Pair(e['locs'],theNil)))),(((e['lst'].cdr.cdr==theNil))!=false?e['s']:(e['s']+\"&&\"+Apply(TopEnv.get('compile-predicate'),new Pair(e['op'],new Pair(e['lst'].cdr,new Pair(e['locs'],theNil)))))));if(r!=theTC||r.f!=this)return r}});\ne['compile-minus']=new Lambda(new Pair(getSymbol('one'),new Pair(getSymbol('op'),new Pair(getSymbol('lst'),new Pair(getSymbol('locs'),theNil)))),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),theNil)),new Pair(new Pair(getSymbol('string-append'),new Pair(\"(\",new Pair(getSymbol('one'),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\")\",theNil))))),new Pair(new Pair(getSymbol('compile-append'),new Pair(\"0\",new Pair(getSymbol('op'),new Pair(getSymbol('lst'),new Pair(getSymbol('locs'),theNil))))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['one']=list.car;e['op']=list.cdr.car;e['lst']=list.cdr.cdr.car;e['locs']=list.cdr.cdr.cdr.car;r=(((e['lst'].cdr==theNil))!=false?(\"(\"+e['one']+Apply(TopEnv.get('compile'),new Pair(e['lst'].car,new Pair(e['locs'],theNil)))+\")\"):TC(TopEnv.get('compile-append'),list=new Pair(\"0\",new Pair(e['op'],new Pair(e['lst'],new Pair(e['locs'],theNil))))));if(r!=theTC||r.f!=this)return r}});\ne['compile-append']=new Lambda(new Pair(getSymbol('zero'),new Pair(getSymbol('op'),new Pair(getSymbol('lst'),new Pair(getSymbol('locs'),getSymbol('q'))))),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('zero'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),theNil)),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('q'),theNil)),new Pair(\"(\",new Pair(\"\",theNil)))),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(getSymbol('op'),new Pair(new Pair(getSymbol('compile-append'),new Pair(getSymbol('zero'),new Pair(getSymbol('op'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('locs'),new Pair(true,theNil)))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('q'),theNil)),new Pair(\")\",new Pair(\"\",theNil)))),theNil)))))),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['zero']=list.car;e['op']=list.cdr.car;e['lst']=list.cdr.cdr.car;e['locs']=list.cdr.cdr.cdr.car;e['q']=list.cdr.cdr.cdr.cdr;r=(((e['lst']==theNil))!=false?e['zero']:(((e['lst'].cdr==theNil))!=false?TC(TopEnv.get('compile'),list=new Pair(e['lst'].car,new Pair(e['locs'],theNil))):((((e['q']==theNil))!=false?\"(\":\"\")+Apply(TopEnv.get('compile'),new Pair(e['lst'].car,new Pair(e['locs'],theNil)))+e['op']+Apply(TopEnv.get('compile-append'),new Pair(e['zero'],new Pair(e['op'],new Pair(e['lst'].cdr,new Pair(e['locs'],new Pair(true,theNil))))))+(((e['q']==theNil))!=false?\")\":\"\"))));if(r!=theTC||r.f!=this)return r}});\ne['compile-list']=new Lambda(new Pair(getSymbol('ex'),new Pair(getSymbol('locs'),getSymbol('tt'))),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('prefix'),new Pair(\"\",theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('suffix'),new Pair(\"\",theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('tt'),theNil)),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('tt'),theNil)),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('suffix'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('tt'),theNil)),theNil))),theNil))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"theNil\",new Pair(getSymbol('suffix'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('compile-list'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"new Pair(\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\",\",theNil))))),new Pair(new Pair(getSymbol('string-append'),new Pair(\")\",new Pair(getSymbol('suffix'),theNil))),theNil))))),new Pair(new Pair(getSymbol('compile'),new Pair(getSymbol('ex'),new Pair(getSymbol('locs'),new Pair(false,new Pair(getSymbol('prefix'),new Pair(getSymbol('suffix'),theNil)))))),theNil)))),theNil)))),theNil))))),e,function(list){var r,e=new Env(this.env);while(true){e['ex']=list.car;e['locs']=list.cdr.car;e['tt']=list.cdr.cdr;r=(e['prefix']=\"\",e['suffix']=\"\",((((e['tt']==theNil)==false))!=false?(e['prefix']=e['tt'].car,e['suffix']=e['tt'].cdr.car):null),(((e['ex']==theNil))!=false?(e['prefix']+\"theNil\"+e['suffix']):((((e['ex'])instanceof Pair))!=false?TC(TopEnv.get('compile-list'),list=new Pair(e['ex'].cdr,new Pair(e['locs'],new Pair((e['prefix']+\"new Pair(\"+Apply(TopEnv.get('compile'),new Pair(e['ex'].car,new Pair(e['locs'],theNil)))+\",\"),new Pair((\")\"+e['suffix']),theNil))))):TC(TopEnv.get('compile'),list=new Pair(e['ex'],new Pair(e['locs'],new Pair(false,new Pair(e['prefix'],new Pair(e['suffix'],theNil)))))))));if(r!=theTC||r.f!=this)return r}});\ne['compile-quote']=new Lambda(new Pair(getSymbol('ex'),getSymbol('tt')),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('prefix'),new Pair(\"\",theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('suffix'),new Pair(\"\",theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('tt'),theNil)),theNil)),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('tt'),theNil)),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('suffix'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('tt'),theNil)),theNil))),theNil))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"theNil\",new Pair(getSymbol('suffix'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('symbol?'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"getSymbol('\",new Pair(new Pair(getSymbol('symbol->string'),new Pair(getSymbol('ex'),theNil)),new Pair(\"')\",new Pair(getSymbol('suffix'),theNil)))))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('compile-quote'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"new Pair(\",new Pair(new Pair(getSymbol('compile-quote'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(\",\",theNil))))),new Pair(new Pair(getSymbol('string-append'),new Pair(\")\",new Pair(getSymbol('suffix'),theNil))),theNil)))),new Pair(new Pair(getSymbol('compile'),new Pair(getSymbol('ex'),new Pair(false,new Pair(false,new Pair(getSymbol('prefix'),new Pair(getSymbol('suffix'),theNil)))))),theNil)))),theNil)))),theNil)))),theNil))))),e,function(list){var r,e=new Env(this.env);while(true){e['ex']=list.car;e['tt']=list.cdr;r=(e['prefix']=\"\",e['suffix']=\"\",((((e['tt']==theNil)==false))!=false?(e['prefix']=e['tt'].car,e['suffix']=e['tt'].cdr.car):null),(((e['ex']==theNil))!=false?(e['prefix']+\"theNil\"+e['suffix']):((((e['ex'])instanceof Symbol))!=false?(e['prefix']+\"getSymbol('\"+e['ex'].name+\"')\"+e['suffix']):((((e['ex'])instanceof Pair))!=false?TC(TopEnv.get('compile-quote'),list=new Pair(e['ex'].cdr,new Pair((e['prefix']+\"new Pair(\"+Apply(TopEnv.get('compile-quote'),new Pair(e['ex'].car,theNil))+\",\"),new Pair((\")\"+e['suffix']),theNil)))):TC(TopEnv.get('compile'),list=new Pair(e['ex'],new Pair(false,new Pair(false,new Pair(e['prefix'],new Pair(e['suffix'],theNil))))))))));if(r!=theTC||r.f!=this)return r}});\ne['compile-begin']=new Lambda(new Pair(getSymbol('ex'),new Pair(getSymbol('locs'),new Pair(getSymbol('tail'),new Pair(getSymbol('prefix'),new Pair(getSymbol('suffix'),getSymbol('q')))))),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(\"null\",new Pair(getSymbol('suffix'),theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),new Pair(getSymbol('tail'),new Pair(getSymbol('prefix'),new Pair(getSymbol('suffix'),theNil)))))),new Pair(new Pair(getSymbol('compile-begin'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),new Pair(getSymbol('tail'),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('prefix'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('q'),theNil)),new Pair(\"(\",new Pair(\"\",theNil)))),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\",\",theNil))))),new Pair(new Pair(getSymbol('string-append'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('q'),theNil)),new Pair(\")\",new Pair(\"\",theNil)))),new Pair(getSymbol('suffix'),theNil))),new Pair(true,theNil))))))),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['ex']=list.car;e['locs']=list.cdr.car;e['tail']=list.cdr.cdr.car;e['prefix']=list.cdr.cdr.cdr.car;e['suffix']=list.cdr.cdr.cdr.cdr.car;e['q']=list.cdr.cdr.cdr.cdr.cdr;r=(((e['ex']==theNil))!=false?(e['prefix']+\"null\"+e['suffix']):(((e['ex'].cdr==theNil))!=false?TC(TopEnv.get('compile'),list=new Pair(e['ex'].car,new Pair(e['locs'],new Pair(e['tail'],new Pair(e['prefix'],new Pair(e['suffix'],theNil)))))):TC(TopEnv.get('compile-begin'),list=new Pair(e['ex'].cdr,new Pair(e['locs'],new Pair(e['tail'],new Pair((e['prefix']+(((e['q']==theNil))!=false?\"(\":\"\")+Apply(TopEnv.get('compile'),new Pair(e['ex'].car,new Pair(e['locs'],theNil)))+\",\"),new Pair(((((e['q']==theNil))!=false?\")\":\"\")+e['suffix']),new Pair(true,theNil)))))))));if(r!=theTC||r.f!=this)return r}});\ne['compile-apply-list']=new Lambda(new Pair(getSymbol('lst'),new Pair(getSymbol('locs'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),theNil)),new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('locs'),new Pair(false,new Pair(\"\",new Pair(\".ListCopy()\",theNil)))))),new Pair(new Pair(getSymbol('string-append'),new Pair(\"new Pair(\",new Pair(new Pair(getSymbol('compile'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\",\",new Pair(new Pair(getSymbol('compile-apply-list'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('lst'),theNil)),new Pair(getSymbol('locs'),theNil))),new Pair(\")\",theNil)))))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['lst']=list.car;e['locs']=list.cdr.car;r=(((e['lst'].cdr==theNil))!=false?TC(TopEnv.get('compile'),list=new Pair(e['lst'].car,new Pair(e['locs'],new Pair(false,new Pair(\"\",new Pair(\".ListCopy()\",theNil)))))):(\"new Pair(\"+Apply(TopEnv.get('compile'),new Pair(e['lst'].car,new Pair(e['locs'],theNil)))+\",\"+Apply(TopEnv.get('compile-apply-list'),new Pair(e['lst'].cdr,new Pair(e['locs'],theNil)))+\")\"));if(r!=theTC||r.f!=this)return r}});\ne['compile-lambda-args']=new Lambda(new Pair(getSymbol('args'),new Pair(getSymbol('var'),theNil)),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('args'),theNil)),new Pair(\"\",new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('symbol?'),new Pair(getSymbol('args'),theNil)),new Pair(new Pair(getSymbol('string-append'),new Pair(\"e['\",new Pair(new Pair(getSymbol('symbol->string'),new Pair(getSymbol('args'),theNil)),new Pair(\"']=\",new Pair(getSymbol('var'),new Pair(\";\",theNil)))))),new Pair(new Pair(getSymbol('string-append'),new Pair(\"e['\",new Pair(new Pair(getSymbol('symbol->string'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('args'),theNil)),theNil)),new Pair(\"']=\",new Pair(getSymbol('var'),new Pair(\".car;\",new Pair(new Pair(getSymbol('compile-lambda-args'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('args'),theNil)),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('var'),new Pair(\".cdr\",theNil))),theNil))),theNil))))))),theNil)))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['args']=list.car;e['var']=list.cdr.car;r=(((e['args']==theNil))!=false?\"\":((((e['args'])instanceof Symbol))!=false?(\"e['\"+e['args'].name+\"']=\"+e['var']+\";\"):(\"e['\"+e['args'].car.name+\"']=\"+e['var']+\".car;\"+Apply(TopEnv.get('compile-lambda-args'),new Pair(e['args'].cdr,new Pair((e['var']+\".cdr\"),theNil))))));if(r!=theTC||r.f!=this)return r}});\ne['compile-extract-children']=new Lambda(new Pair(getSymbol('obj'),getSymbol('c')),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('tmp-name'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('a'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('d'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('obj'),theNil)),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('obj'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('quote'),theNil)),theNil))),theNil)),new Pair(false,theNil)))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('obj'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('lambda'),theNil)),theNil))),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('tmp-name'),new Pair(new Pair(getSymbol('gen-sym'),theNil),theNil))),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('list'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('clone'),theNil)),new Pair(getSymbol('tmp-name'),theNil))),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('cons'),new Pair(getSymbol('tmp-name'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('obj'),theNil)),theNil))),new Pair(getSymbol('c'),theNil))),theNil))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('obj'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('define'),theNil)),theNil))),new Pair(new Pair(getSymbol('pair?'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('obj'),theNil)),theNil)),new Pair(false,theNil)))),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('tmp-name'),new Pair(new Pair(getSymbol('gen-sym'),theNil),theNil))),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('list'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('define'),theNil)),new Pair(new Pair(getSymbol('caadr'),new Pair(getSymbol('obj'),theNil)),new Pair(new Pair(getSymbol('list'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('clone'),theNil)),new Pair(getSymbol('tmp-name'),theNil))),theNil)))),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('cons'),new Pair(getSymbol('tmp-name'),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('cdadr'),new Pair(getSymbol('obj'),theNil)),new Pair(new Pair(getSymbol('cddr'),new Pair(getSymbol('obj'),theNil)),theNil))),theNil))),new Pair(getSymbol('c'),theNil))),theNil))),theNil))),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('a'),new Pair(new Pair(getSymbol('compile-extract-children'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('obj'),theNil)),theNil)),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('d'),new Pair(new Pair(getSymbol('compile-extract-children'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('obj'),theNil)),theNil)),theNil))),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('a'),theNil)),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('d'),theNil)),theNil))),new Pair(new Pair(getSymbol('append'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('a'),theNil)),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('d'),theNil)),theNil))),theNil))),theNil)))),theNil)))),theNil)))),new Pair(new Pair(getSymbol('cons'),new Pair(getSymbol('obj'),new Pair(getSymbol('c'),theNil))),theNil)))),theNil))))),e,function(list){var r,e=new Env(this.env);while(true){e['obj']=list.car;e['c']=list.cdr;r=(e['tmp-name']=false,e['a']=false,e['d']=false,((((((e['obj'])instanceof Pair))!=false?(isEq(e['obj'].car,getSymbol('quote'))==false):false))!=false?((isEq(e['obj'].car,getSymbol('lambda')))!=false?(e['tmp-name']=Apply(TopEnv.get('gen-sym'),theNil),new Pair(new Pair(getSymbol('clone'),new Pair(e['tmp-name'],theNil)),new Pair(new Pair(e['tmp-name'],e['obj'].cdr),e['c']))):((((isEq(e['obj'].car,getSymbol('define')))!=false?((e['obj'].cdr.car)instanceof Pair):false))!=false?(e['tmp-name']=Apply(TopEnv.get('gen-sym'),theNil),new Pair(new Pair(getSymbol('define'),new Pair(Apply(TopEnv.get('caadr'),new Pair(e['obj'],theNil)),new Pair(new Pair(getSymbol('clone'),new Pair(e['tmp-name'],theNil)),theNil))),new Pair(new Pair(e['tmp-name'],new Pair(Apply(TopEnv.get('cdadr'),new Pair(e['obj'],theNil)),e['obj'].cdr.cdr)),e['c']))):(e['a']=Apply(TopEnv.get('compile-extract-children'),new Pair(e['obj'].car,theNil)),e['d']=Apply(TopEnv.get('compile-extract-children'),new Pair(e['obj'].cdr,theNil)),new Pair(new Pair(e['a'].car,e['d'].car),Apply(TopEnv.get('append'),new Pair(e['a'].cdr,new Pair(e['d'].cdr,theNil))))))):new Pair(e['obj'],e['c'])));if(r!=theTC||r.f!=this)return r}});\ne['compile-lambda-obj']=new Lambda(new Pair(getSymbol('args'),new Pair(getSymbol('body'),getSymbol('tt'))),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('parent-locs'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('tt'),theNil)),new Pair(false,new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('tt'),theNil)),theNil)))),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('ex'),new Pair(new Pair(getSymbol('compile-extract-children'),new Pair(getSymbol('body'),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('ll'),new Pair(false,theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('body'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('not'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),theNil)),theNil)),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('parent-locs'),new Pair(new Pair(getSymbol('compile-make-locals'),new Pair(new Pair(getSymbol('map+'),new Pair(getSymbol('car'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),theNil))),new Pair(getSymbol('parent-locs'),theNil))),theNil))),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('parent-locs'),new Pair(new Pair(getSymbol('compile-make-locals'),new Pair(getSymbol('args'),new Pair(getSymbol('parent-locs'),theNil))),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('ll'),new Pair(new Pair(getSymbol('compile-lambda'),new Pair(getSymbol('args'),new Pair(getSymbol('body'),new Pair(getSymbol('parent-locs'),theNil)))),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(\"new Lambda(\",new Pair(new Pair(getSymbol('compile-quote'),new Pair(getSymbol('args'),theNil)),new Pair(\",\",new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('body'),theNil)),theNil)),new Pair(new Pair(getSymbol('compile-quote'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('body'),theNil)),theNil)),new Pair(new Pair(getSymbol('compile-quote'),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('begin'),theNil)),new Pair(getSymbol('body'),theNil))),theNil)),theNil)))),new Pair(\",\",new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(\"e\",new Pair(new Pair(getSymbol('apply'),new Pair(getSymbol('string-append'),new Pair(\"new Env(e)\",new Pair(new Pair(getSymbol('map+'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_52_'),theNil)),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),theNil))),theNil)))),theNil)))),new Pair(\",\",new Pair(getSymbol('ll'),new Pair(\")\",theNil)))))))))),theNil))))))))),new Env(e).With('_52_',new Lambda(new Pair(getSymbol('l'),theNil),new Pair(getSymbol('string-append'),new Pair(\".With('\",new Pair(new Pair(getSymbol('symbol->string'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('l'),theNil)),theNil)),new Pair(\"',\",new Pair(new Pair(getSymbol('compile-lambda-obj'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('l'),theNil)),new Pair(new Pair(getSymbol('cddr'),new Pair(getSymbol('l'),theNil)),new Pair(getSymbol('parent-locs'),theNil)))),new Pair(\")\",theNil)))))),e,function(list){var r,e=new Env(this.env);while(true){e['l']=list.car;r=(\".With('\"+e['l'].car.name+\"',\"+Apply(TopEnv.get('compile-lambda-obj'),new Pair(e['l'].cdr.car,new Pair(e['l'].cdr.cdr,new Pair(e.parentEnv['parent-locs'],theNil))))+\")\");if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['args']=list.car;e['body']=list.cdr.car;e['tt']=list.cdr.cdr;r=(e['parent-locs']=(((e['tt']==theNil))!=false?false:e['tt'].car),e['ex']=Apply(TopEnv.get('compile-extract-children'),new Pair(e['body'],theNil)),e['ll']=false,e['body']=e['ex'].car,((((e['ex'].cdr==theNil)==false))!=false?e['parent-locs']=Apply(TopEnv.get('compile-make-locals'),new Pair(Apply(TopEnv.get('map+'),new Pair(TopEnv.get('car'),new Pair(e['ex'].cdr,theNil))),new Pair(e['parent-locs'],theNil))):null),e['parent-locs']=Apply(TopEnv.get('compile-make-locals'),new Pair(e['args'],new Pair(e['parent-locs'],theNil))),e['ll']=Apply(TopEnv.get('compile-lambda'),new Pair(e['args'],new Pair(e['body'],new Pair(e['parent-locs'],theNil)))),(\"new Lambda(\"+Apply(TopEnv.get('compile-quote'),new Pair(e['args'],theNil))+\",\"+(((e['body'].cdr==theNil))!=false?Apply(TopEnv.get('compile-quote'),new Pair(e['body'].car,theNil)):Apply(TopEnv.get('compile-quote'),new Pair(new Pair(getSymbol('begin'),e['body']),theNil)))+\",\"+(((e['ex'].cdr==theNil))!=false?\"e\":Apply(TopEnv.get('string-append'),new Pair(\"new Env(e)\",Apply(TopEnv.get('map+'),new Pair(e.parentEnv['_52_'].clone(e),new Pair(e['ex'].cdr,theNil))).ListCopy())))+\",\"+e['ll']+\")\"));if(r!=theTC||r.f!=this)return r}});\ne['compile-make-locals']=new Lambda(new Pair(getSymbol('lst'),new Pair(getSymbol('parent'),theNil)),new Pair(getSymbol('clone'),new Pair(getSymbol('_53_'),theNil)),new Env(e).With('_53_',new Lambda(new Pair(getSymbol('msg'),new Pair(getSymbol('v'),getSymbol('tt'))),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('e'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(getSymbol('tt'),theNil)),new Pair(\"e\",new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('tt'),theNil)),theNil)))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(getSymbol('msg'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('set!'),theNil)),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('lst'),new Pair(getSymbol('v'),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(getSymbol('msg'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('get'),theNil)),theNil))),new Pair(getSymbol('lst'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(getSymbol('msg'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('add'),theNil)),theNil))),new Pair(new Pair(getSymbol('set!'),new Pair(getSymbol('lst'),new Pair(new Pair(getSymbol('cons'),new Pair(getSymbol('v'),new Pair(getSymbol('lst'),theNil))),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(getSymbol('msg'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('memq'),theNil)),theNil))),new Pair(new Pair(getSymbol('memq'),new Pair(getSymbol('v'),new Pair(getSymbol('lst'),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(getSymbol('msg'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('gen'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('memq'),new Pair(getSymbol('v'),new Pair(getSymbol('lst'),theNil))),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('e'),new Pair(\"['\",new Pair(new Pair(getSymbol('symbol->string'),new Pair(getSymbol('v'),theNil)),new Pair(\"']\",theNil))))),new Pair(new Pair(getSymbol('if'),new Pair(getSymbol('parent'),new Pair(new Pair(getSymbol('parent'),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('gen'),theNil)),new Pair(getSymbol('v'),new Pair(new Pair(getSymbol('string-append'),new Pair(getSymbol('e'),new Pair(\".parentEnv\",theNil))),theNil)))),new Pair(new Pair(getSymbol('string-append'),new Pair(\"TopEnv.get('\",new Pair(new Pair(getSymbol('symbol->string'),new Pair(getSymbol('v'),theNil)),new Pair(\"')\",theNil)))),theNil)))),theNil)))),theNil))),theNil)))),theNil)))),theNil)))),theNil)))),theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['msg']=list.car;e['v']=list.cdr.car;e['tt']=list.cdr.cdr;r=(e['e']=(((e['tt']==theNil))!=false?\"e\":e['tt'].car),((isEq(e['msg'],getSymbol('set!')))!=false?e.set('lst',e['v']):((isEq(e['msg'],getSymbol('get')))!=false?e.parentEnv['lst']:((isEq(e['msg'],getSymbol('add')))!=false?e.set('lst',new Pair(e['v'],e.parentEnv['lst'])):((isEq(e['msg'],getSymbol('memq')))!=false?TC(TopEnv.get('memq'),list=new Pair(e['v'],new Pair(e.parentEnv['lst'],theNil))):((isEq(e['msg'],getSymbol('gen')))!=false?((Apply(TopEnv.get('memq'),new Pair(e['v'],new Pair(e.parentEnv['lst'],theNil))))!=false?(e['e']+\"['\"+e['v'].name+\"']\"):((e.parentEnv['parent'])!=false?TC(e.parentEnv['parent'],list=new Pair(getSymbol('gen'),new Pair(e['v'],new Pair((e['e']+\".parentEnv\"),theNil)))):(\"TopEnv.get('\"+e['v'].name+\"')\"))):null))))));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){e['lst']=list.car;e['parent']=list.cdr.car;r=e.parentEnv['_53_'].clone(e);if(r!=theTC||r.f!=this)return r}});\ne['compile-lambda']=new Lambda(new Pair(getSymbol('args'),new Pair(getSymbol('body'),new Pair(getSymbol('locs'),theNil))),new Pair(getSymbol('compile-begin'),new Pair(getSymbol('body'),new Pair(getSymbol('locs'),new Pair(true,new Pair(new Pair(getSymbol('string-append'),new Pair(\"function(list){var r,e=new Env(this.env);while(true){\",new Pair(new Pair(getSymbol('compile-lambda-args'),new Pair(getSymbol('args'),new Pair(\"list\",theNil))),new Pair(\"r=\",theNil)))),new Pair(new Pair(getSymbol('string-append'),new Pair(\";if(r!=theTC||r.f!=this)return r}}\",theNil)),theNil)))))),e,function(list){var r,e=new Env(this.env);while(true){e['args']=list.car;e['body']=list.cdr.car;e['locs']=list.cdr.cdr.car;r=TC(TopEnv.get('compile-begin'),list=new Pair(e['body'],new Pair(e['locs'],new Pair(true,new Pair((\"function(list){var r,e=new Env(this.env);while(true){\"+Apply(TopEnv.get('compile-lambda-args'),new Pair(e['args'],new Pair(\"list\",theNil)))+\"r=\"),new Pair(\";if(r!=theTC||r.f!=this)return r}}\",theNil))))));if(r!=theTC||r.f!=this)return r}});\ne['eval-compiled']=new Lambda(new Pair(getSymbol('s'),theNil),new Pair(getSymbol('js-eval'),new Pair(new Pair(getSymbol('string-append'),new Pair(\"var e=TopEnv;\",new Pair(getSymbol('s'),theNil))),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['s']=list.car;r=TC(TopEnv.get('js-eval'),list=new Pair((\"var e=TopEnv;\"+e['s']),theNil));if(r!=theTC||r.f!=this)return r}});\ne['compiled']=new Lambda(new Pair(getSymbol('s'),theNil),new Pair(getSymbol('js-invoke'),new Pair(new Pair(getSymbol('get-prop'),new Pair(getSymbol('s'),new Pair(\"compiled\",theNil))),new Pair(\"toString\",theNil))),e,function(list){var r,e=new Env(this.env);while(true){e['s']=list.car;r=TC(TopEnv.get('js-invoke'),list=new Pair(e['s'][\"compiled\"],new Pair(\"toString\",theNil)));if(r!=theTC||r.f!=this)return r}});\ne['compile-lib']=new Lambda(theNil,new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('js-eval'),new Pair(\"document.getElementById('jit').checked=true\",theNil)),new Pair(new Pair(getSymbol('js-eval'),new Pair(\"document.getElementById('echoInp').checked=false\",theNil)),new Pair(new Pair(getSymbol('js-eval'),new Pair(\"document.getElementById('echoRes').checked=false\",theNil)),new Pair(new Pair(getSymbol('js-eval'),new Pair(\"document.getElementById('log').value=''\",theNil)),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('lib'),new Pair(new Pair(getSymbol('parse'),new Pair(new Pair(getSymbol('js-eval'),new Pair(\"document.getElementById('lib').innerHTML\",theNil)),theNil)),theNil))),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('print'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_54_'),theNil)),theNil))),new Pair(new Pair(getSymbol('print'),new Pair(\"var e=TopEnv\",theNil)),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('print-compiled'),new Pair(new Pair(getSymbol('clone'),new Pair(getSymbol('_55_'),theNil)),theNil))),new Pair(new Pair(getSymbol('for-each'),new Pair(getSymbol('print-compiled'),new Pair(getSymbol('lib'),theNil))),theNil)))))))))),new Env(e).With('_54_',new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('display'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('display'),new Pair(getChar(';'),theNil)),new Pair(new Pair(getSymbol('newline'),theNil),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=(Apply(TopEnv.get('display'),new Pair(e['x'],theNil)),Apply(TopEnv.get('display'),new Pair(getChar(';'),theNil)),TC(TopEnv.get('newline'),list=theNil));if(r!=theTC||r.f!=this)return r}})).With('_55_',new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('print'),new Pair(new Pair(getSymbol('compile'),new Pair(getSymbol('x'),theNil)),theNil)),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=TC(e.parentEnv['print'],list=new Pair(Apply(TopEnv.get('compile'),new Pair(e['x'],theNil)),theNil));if(r!=theTC||r.f!=this)return r}})),function(list){var r,e=new Env(this.env);while(true){r=(Apply(TopEnv.get('js-eval'),new Pair(\"document.getElementById('jit').checked=true\",theNil)),Apply(TopEnv.get('js-eval'),new Pair(\"document.getElementById('echoInp').checked=false\",theNil)),Apply(TopEnv.get('js-eval'),new Pair(\"document.getElementById('echoRes').checked=false\",theNil)),Apply(TopEnv.get('js-eval'),new Pair(\"document.getElementById('log').value=''\",theNil)),e['lib']=Apply(TopEnv.get('parse'),new Pair(Apply(TopEnv.get('js-eval'),new Pair(\"document.getElementById('lib').innerHTML\",theNil)),theNil)),e['print']=e.parentEnv['_54_'].clone(e),Apply(e['print'],new Pair(\"var e=TopEnv\",theNil)),e['print-compiled']=e.parentEnv['_55_'].clone(e),TC(TopEnv.get('for-each'),list=new Pair(e['print-compiled'],new Pair(e['lib'],theNil))));if(r!=theTC||r.f!=this)return r}});\ne['server']=new Lambda(new Pair(getSymbol('x'),theNil),new Pair(getSymbol('js-invoke'),new Pair(new Pair(getSymbol('js-eval'),new Pair(\"window.frames.hf\",theNil)),new Pair(\"navigate\",new Pair(new Pair(getSymbol('string-append'),new Pair(\"servlet/db?s=\",new Pair(new Pair(getSymbol('encode'),new Pair(new Pair(getSymbol('str'),new Pair(getSymbol('x'),theNil)),theNil)),theNil))),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['x']=list.car;r=TC(TopEnv.get('js-invoke'),list=new Pair(Apply(TopEnv.get('js-eval'),new Pair(\"window.frames.hf\",theNil)),new Pair(\"navigate\",new Pair((\"servlet/db?s=\"+Apply(TopEnv.get('encode'),new Pair(Str(e['x']),theNil))),theNil))));if(r!=theTC||r.f!=this)return r}});\ne['transform']=new Lambda(new Pair(getSymbol('ex'),theNil),new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('pair?'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('symbol?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('quote'),theNil)),theNil))),new Pair(getSymbol('ex'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('begin'),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(false,new Pair(new Pair(getSymbol('null?'),new Pair(new Pair(getSymbol('cddr'),new Pair(getSymbol('ex'),theNil)),theNil)),theNil)))),new Pair(false,theNil)))),new Pair(new Pair(getSymbol('transform'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),theNil)),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('lambda'),theNil)),theNil))),new Pair(true,new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('define'),theNil)),theNil))),new Pair(true,new Pair(new Pair(getSymbol('eq?'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('quote'),new Pair(getSymbol('set!'),theNil)),theNil))),theNil)))),theNil)))),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('cadr'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('map+'),new Pair(getSymbol('transform'),new Pair(new Pair(getSymbol('cddr'),new Pair(getSymbol('ex'),theNil)),theNil))),theNil))),theNil))),new Pair(new Pair(getSymbol('begin'),new Pair(new Pair(getSymbol('define'),new Pair(getSymbol('x'),new Pair(new Pair(getSymbol('eval'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),theNil)),theNil))),new Pair(new Pair(getSymbol('if'),new Pair(new Pair(getSymbol('syntax?'),new Pair(getSymbol('x'),theNil)),new Pair(new Pair(getSymbol('transform'),new Pair(new Pair(getSymbol('apply'),new Pair(new Pair(getSymbol('get-prop'),new Pair(getSymbol('x'),new Pair(\"transformer\",theNil))),new Pair(getSymbol('ex'),new Pair(new Pair(getSymbol('get-prop'),new Pair(getSymbol('x'),new Pair(\"args\",theNil))),theNil)))),theNil)),new Pair(new Pair(getSymbol('cons'),new Pair(new Pair(getSymbol('car'),new Pair(getSymbol('ex'),theNil)),new Pair(new Pair(getSymbol('map+'),new Pair(getSymbol('transform'),new Pair(new Pair(getSymbol('cdr'),new Pair(getSymbol('ex'),theNil)),theNil))),theNil))),theNil)))),theNil))),theNil)))),theNil)))),theNil)))),new Pair(new Pair(getSymbol('map+'),new Pair(getSymbol('transform'),new Pair(getSymbol('ex'),theNil))),theNil)))),new Pair(getSymbol('ex'),theNil)))),e,function(list){var r,e=new Env(this.env);while(true){e['ex']=list.car;r=((((e['ex'])instanceof Pair))!=false?((((e['ex'].car)instanceof Symbol))!=false?((isEq(e['ex'].car,getSymbol('quote')))!=false?e['ex']:((((isEq(e['ex'].car,getSymbol('begin')))!=false?(((e['ex'].cdr==theNil))!=false?false:(e['ex'].cdr.cdr==theNil)):false))!=false?TC(TopEnv.get('transform'),list=new Pair(e['ex'].cdr.car,theNil)):((((isEq(e['ex'].car,getSymbol('lambda')))!=false?true:((isEq(e['ex'].car,getSymbol('define')))!=false?true:isEq(e['ex'].car,getSymbol('set!')))))!=false?new Pair(e['ex'].car,new Pair(e['ex'].cdr.car,Apply(TopEnv.get('map+'),new Pair(TopEnv.get('transform'),new Pair(e['ex'].cdr.cdr,theNil))))):(e['x']=Apply(TopEnv.get('eval'),new Pair(e['ex'].car,theNil)),((((e['x'])instanceof Syntax))!=false?TC(TopEnv.get('transform'),list=new Pair(Apply(e['x'][\"transformer\"],new Pair(e['ex'],e['x'][\"args\"].ListCopy())),theNil)):new Pair(e['ex'].car,Apply(TopEnv.get('map+'),new Pair(TopEnv.get('transform'),new Pair(e['ex'].cdr,theNil))))))))):TC(TopEnv.get('map+'),list=new Pair(TopEnv.get('transform'),new Pair(e['ex'],theNil)))):e['ex']);if(r!=theTC||r.f!=this)return r}});\n\n// Library end\n\n  //\n  ShowEnv = TopEnv = new Env(TopEnv);\n}\n\n//\n// Compiler...\n//\n\nvar theCannot = new Ex(\"Lambda cannot be compiled\")\n\nfunction Apply(f,args) {\n\nAgain: while(true) {\n\n  if( f instanceof Lambda ) {\n\n    if( f.compiled == undefined ) {\n\n     // var jitComp = TopEnv.get('compile-lambda');\n      try {\n        var jitComp = TopEnv.get('compile-lambda-obj');\n      } catch( ee ) { throw theCannot }\n\n      f.compiled = false;\n      var expr = new Pair(jitComp,\n                 new Pair(new Pair(theQuote,new Pair(f.args,theNil)),\n                 new Pair(new Pair(theQuote,new Pair(\n                          new Pair(f.body,theNil),theNil)),\n                 theNil)));\n      try {\n        var res = doEval(expr,true);\n       // f.compiled = eval(\"var tmp=\"+res+\";tmp\");\n        e = f.env; eval(\"tmp=\"+res);\n        f.compiled = tmp.compiled;\n       // Rebuild lambda to change local (lambda())s to (clone)s\n        f.body = tmp.body;\n        f.env = tmp.env;\n      } catch( ex ) {\n        printLog( \"JIT/JS/Error: \" + ex.description + \", compiling:\" );\n        printLog( typeof(res)=='string' ? res : Str(res) );\n        printLog( \"for Lambda \"+Str(f.args) );\n        printLog( Str(f.body) );\n      }\n    }\n    if( f.compiled == false ) {\n     // Back to interpretation...\n      try {\n        var state = new State(null,null,topCC);\n        state.obj = callF(f,args,state);\n        while( true ) {\n          if( state.Eval(true) ) {\n            state.ready = false;\n            state.cont();\n          }\n        }\n     // throw theCannot;\n      } catch(ex) {\n        if( ex instanceof Ex )\n          return ex;\n        else if( ex instanceof State )\n          return ex.obj;\n        else\n          return new Ex(ex.description); // throw ex;\n      }\n    }\n\n    var res = f.compiled(args);\n    if( res == theTC ) {\n      f = res.f; args = res.args;\n      continue Again;\n    }\n    return res;\n\n  } else if( f instanceof Function ) {\n\n    if( f.FType == undefined ) {\n      if( /^\\s*function\\s*\\(\\s*(list|)\\s*\\)/.exec(f) ) f.FType=1;\n     // else if( /^\\s*function\\s*\\(list,env\\)/.exec(f) ) f.FType=2;\n      else f.FType=3;\n    }\n\n    if( f.FType == 1 ) return f(args);\n/*\n    if( f.FType == 2 ) {\n      var res = f(args);\n      if( res == theTC ) {\n        f = res.f; args = res.args;\n        continue Again;\n      }\n      return res;\n    }\n*/\n    throw new Ex(\"JIT: Apply to invalid function, maybe call/cc\");\n\n  } else if( f instanceof Continuation ) {\n    throw new State(args,null,f); // Give it to the interpreter\n  } else throw new Ex(\"JIT: Apply to \"+Str(f));\n}}\n\n// Tail-Calls\n\nfunction TC(f,args) {\n  theTC.f=f; theTC.args=args;\n  return theTC;\n}\n\nvar theTC = new Object();\n\n"})
      }
    );


